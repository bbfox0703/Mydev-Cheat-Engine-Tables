<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="44">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Compact Mode"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
--https://forum.cheatengine.org/viewtopic.php?t=570055
LuaCall(function cycleFullCompact(sender,force) local state = not(compactmenuitem.Caption == 'Compact View Mode'); if force~=nil then state = not force end; compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'; getMainForm().Splitter1.Visible = state; getMainForm().Panel4.Visible    = state; getMainForm().Panel5.Visible    = state; end; function addCompactMenu() if compactmenualreadyexists then return end; local parent = getMainForm().Menu.Items; compactmenuitem = createMenuItem(parent); parent.add(compactmenuitem); compactmenuitem.Caption = 'Compact View Mode'; compactmenuitem.OnClick = cycleFullCompact; compactmenualreadyexists = 'yes'; end; addCompactMenu(); cycleFullCompact(nil,true))

[DISABLE]
LuaCall(cycleFullCompact(nil,false))

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Enable"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then
    return
end
if process == nil then
    ShowMessage("Process is not selected.")
elseif readInteger(process) == 0 then
    ShowMessage("Process cannot be opened.")
else
    if monopipe ~= nil and monopipe.ProcessID ~= getOpenedProcessID() then
        monopipe.destroy()
        monopipe = nil
    end
    if monopipe == nil then
        LaunchMonoDataCollector()
    end
end


{$asm}
define(ResourceManagerClearItemCountsProc, "ResourceManager.ClearItemCounts")
define(ResidenceUpdateFirewoodProc, "Residence.UpdateFirewood")
define(ResidenceUpdateWaterProc, "Residence.UpdateWater")
define(VillagerEatIfNecessaryProc, "Villager.EatIfNecessary")
define(ItemStorageRemoveItemsProc, "ItemStorage.RemoveItems")

//Residence.UpdateFirewood
//GameAssembly.dll+80E9DC

//Residence.UpdateWater GameAssembly.dll+80EE42
//GameAssembly.dll+80EF60 (11E)

//Villager.EatIfNecessary
//GameAssembly.dll+5A64EF - 41 B8 01000000        - mov r8d,00000001

//Villager.CalculateToolWear   GameAssembly.dll+5A4CD0
//GameAssembly.dll+5A4E49


//ItemStorage.RemoveItems  GameAssembly.dll+938C74



registersymbol(ResourceManagerClearItemCountsProc)
registersymbol(ResidenceUpdateFirewoodProc)
registersymbol(ResidenceUpdateWaterProc)
registersymbol(VillagerEatIfNecessaryProc)
registersymbol(ItemStorageRemoveItemsProc)

[DISABLE]
{$lua}
if syntaxcheck then return end;if not syntaxcheck and monopipe then monopipe=nil,monopipe.Destroy()end

{$asm}
unregistersymbol(*)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Enable twice: 1st: waiting for IL2CPP to complete, then re-enable again"</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Firewood do not decrease"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Farthest Frontier.exe
  Version: 
  Date   : 2023-01-04
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

//aobscanmodule(INJECT_INF_FIREWOOD,GameAssembly.dll,F3 0F 58 87 78 05 00 00) // should be unique
aobscanregion(INJECT_INF_FIREWOOD,ResidenceUpdateFirewoodProc+190,ResidenceUpdateFirewoodProc+1F0,F3 0F 58 87 ?? ?? 00 00 F3 0F 11 87 ?? ?? 00 00) // should be unique
alloc(newmem,$1000,INJECT_INF_FIREWOOD)

alloc(INJECT_INF_FIREWOODo,8)

label(code)
label(return)

INJECT_INF_FIREWOODo:
  readmem(INJECT_INF_FIREWOOD, 8)

newmem:

code:
  //addss xmm0,[rdi+00000578]
  jmp return

INJECT_INF_FIREWOOD:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_INF_FIREWOOD)
registersymbol(INJECT_INF_FIREWOODo)
[DISABLE]

INJECT_INF_FIREWOOD:
  //db F3 0F 58 87 78 05 00 00
  readmem(INJECT_INF_FIREWOODo,8)

unregistersymbol(*)
dealloc(newmem)
dealloc(INJECT_INF_FIREWOODo)
{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+80E9E4

GameAssembly.dll+80E9B8: E8 33 F0 F9 FF           - call ParticleFXPlayer.Stop
GameAssembly.dll+80E9BD: 4C 8B 7C 24 50           - mov r15,[rsp+50]
GameAssembly.dll+80E9C2: 48 8B B4 24 80 00 00 00  - mov rsi,[rsp+00000080]
GameAssembly.dll+80E9CA: 48 8B 6C 24 78           - mov rbp,[rsp+78]
GameAssembly.dll+80E9CF: 48 8B 5C 24 70           - mov rbx,[rsp+70]
GameAssembly.dll+80E9D4: 48 83 C4 58              - add rsp,58
GameAssembly.dll+80E9D8: 41 5E                    - pop r14
GameAssembly.dll+80E9DA: 5F                       - pop rdi
GameAssembly.dll+80E9DB: C3                       - ret 
GameAssembly.dll+80E9DC: F3 0F 10 87 7C 05 00 00  - movss xmm0,[rdi+0000057C]
// ---------- INJECTING HERE ----------
GameAssembly.dll+80E9E4: F3 0F 58 87 78 05 00 00  - addss xmm0,[rdi+00000578]
// ---------- DONE INJECTING  ----------
GameAssembly.dll+80E9EC: F3 0F 11 87 7C 05 00 00  - movss [rdi+0000057C],xmm0
GameAssembly.dll+80E9F4: 48 8B 0D 15 3C 6F 01     - mov rcx,[GameAssembly.dll+1F02610]
GameAssembly.dll+80E9FB: F6 81 33 01 00 00 01     - test byte ptr [rcx+00000133],01
GameAssembly.dll+80EA02: 74 0E                    - je GameAssembly.dll+80EA12
GameAssembly.dll+80EA04: 44 39 B1 E0 00 00 00     - cmp [rcx+000000E0],r14d
GameAssembly.dll+80EA0B: 75 05                    - jne GameAssembly.dll+80EA12
GameAssembly.dll+80EA0D: E8 BE 30 98 FF           - call GameAssembly.il2cpp_runtime_class_init
GameAssembly.dll+80EA12: 45 33 C0                 - xor r8d,r8d
GameAssembly.dll+80EA15: 33 D2                    - xor edx,edx
GameAssembly.dll+80EA17: 48 8B CB                 - mov rcx,rbx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Water do not decrease"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Farthest Frontier.exe
  Version: 
  Date   : 2023-01-04
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

//aobscanmodule(INJECT_INF_WATER,GameAssembly.dll,F3 0F 58 8F 80 05 00 00) // should be unique
aobscanregion(INJECT_INF_WATER,ResidenceUpdateWaterProc+100,ResidenceUpdateWaterProc+150,F3 0F 58 8F ?? ?? 00 00 0F 2F 0D ?? ?? ?? ?? F3 0F 11 8F ?? ?? 00 00) // should be unique
alloc(newmem,$1000,INJECT_INF_WATER)

alloc(INJECT_INF_WATERo,8)

label(code)
label(return)

INJECT_INF_WATERo:
  readmem(INJECT_INF_WATER, 8)

newmem:

code:
  //addss xmm1,[rdi+00000580]
  jmp return

INJECT_INF_WATER:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_INF_WATER)
registersymbol(INJECT_INF_WATERo)
[DISABLE]

INJECT_INF_WATER:
  //db F3 0F 58 8F 80 05 00 00
  readmem(INJECT_INF_WATERo, 8)

unregistersymbol(*)
dealloc(newmem)
dealloc(INJECT_INF_WATERo)

{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+80EF68

GameAssembly.dll+80EF38: 89 9F 84 05 00 00        - mov [rdi+00000584],ebx
GameAssembly.dll+80EF3E: 4C 8B 7C 24 50           - mov r15,[rsp+50]
GameAssembly.dll+80EF43: 4C 8B 74 24 58           - mov r14,[rsp+58]
GameAssembly.dll+80EF48: 48 8B B4 24 80 00 00 00  - mov rsi,[rsp+00000080]
GameAssembly.dll+80EF50: 48 8B 6C 24 78           - mov rbp,[rsp+78]
GameAssembly.dll+80EF55: 48 8B 5C 24 70           - mov rbx,[rsp+70]
GameAssembly.dll+80EF5A: 48 83 C4 60              - add rsp,60
GameAssembly.dll+80EF5E: 5F                       - pop rdi
GameAssembly.dll+80EF5F: C3                       - ret 
GameAssembly.dll+80EF60: F3 0F 10 8F 84 05 00 00  - movss xmm1,[rdi+00000584]
// ---------- INJECTING HERE ----------
GameAssembly.dll+80EF68: F3 0F 58 8F 80 05 00 00  - addss xmm1,[rdi+00000580]
// ---------- DONE INJECTING  ----------
GameAssembly.dll+80EF70: 0F 2F 0D 29 20 11 01     - comiss xmm1,[GameAssembly.dll+1920FA0]
GameAssembly.dll+80EF77: F3 0F 11 8F 84 05 00 00  - movss [rdi+00000584],xmm1
GameAssembly.dll+80EF7F: 72 BD                    - jb GameAssembly.dll+80EF3E
GameAssembly.dll+80EF81: 0F 57 C0                 - xorps xmm0,xmm0
GameAssembly.dll+80EF84: 8B C0                    - mov eax,eax
GameAssembly.dll+80EF86: 45 33 C0                 - xor r8d,r8d
GameAssembly.dll+80EF89: F2 48 0F 2A C0           - cvtsi2sd xmm0,rax
GameAssembly.dll+80EF8E: 66 0F 5A C0              - cvtpd2ps xmm0,xmm0
GameAssembly.dll+80EF92: E8 C9 31 50 00           - call UnityEngine.Mathf.Min
GameAssembly.dll+80EF97: F3 48 0F 2C F0           - cvttss2si rsi,xmm0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"_WIP"</Description>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>11</ID>
              <Description>"Selected resource (pause game)"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Farthest Frontier.exe
  Version: 
  Date   : 2023-01-03
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_SELECTED_OBJECT,GameAssembly.dll,8B 44 88 20 89 44 8A 20 FF) // should be unique
alloc(newmem,$1000,INJECT_SELECTED_OBJECT)

label(code)
label(return)
label(i_base_sel_object_addr)

newmem:
  push r15
  push r14
  lea r15, [rax+rcx*4+20]

  mov [i_base_sel_object_addr], r15
  pop r14
  pop r15

code:
  mov eax,[rax+rcx*4+20]
  mov [rdx+rcx*4+20],eax
  jmp return
align 10 cc
  i_base_sel_object_addr:
  dq 0
  align 10 cc
  db 0
  align 10 cc
  db 0
  i_idx:
  dd 0

INJECT_SELECTED_OBJECT:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_SELECTED_OBJECT)
registersymbol(i_base_sel_object_addr)
[DISABLE]

INJECT_SELECTED_OBJECT:
  db 8B 44 88 20 89 44 8A 20

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+4B1845

GameAssembly.dll+4B1823: 48 8B 86 98 00 00 00  - mov rax,[rsi+00000098]
GameAssembly.dll+4B182A: 48 85 C0              - test rax,rax
GameAssembly.dll+4B182D: 74 4D                 - je GameAssembly.dll+4B187C
GameAssembly.dll+4B182F: 3B 48 18              - cmp ecx,[rax+18]
GameAssembly.dll+4B1832: 73 5E                 - jae GameAssembly.dll+4B1892
GameAssembly.dll+4B1834: 48 8B 97 98 00 00 00  - mov rdx,[rdi+00000098]
GameAssembly.dll+4B183B: 48 85 D2              - test rdx,rdx
GameAssembly.dll+4B183E: 74 3C                 - je GameAssembly.dll+4B187C
GameAssembly.dll+4B1840: 3B 4A 18              - cmp ecx,[rdx+18]
GameAssembly.dll+4B1843: 73 3D                 - jae GameAssembly.dll+4B1882
// ---------- INJECTING HERE ----------
GameAssembly.dll+4B1845: 8B 44 88 20           - mov eax,[rax+rcx*4+20]
// ---------- DONE INJECTING  ----------
GameAssembly.dll+4B1849: 89 44 8A 20           - mov [rdx+rcx*4+20],eax
GameAssembly.dll+4B184D: FF C1                 - inc ecx
GameAssembly.dll+4B184F: 83 F9 65              - cmp ecx,65
GameAssembly.dll+4B1852: 7C CF                 - jl GameAssembly.dll+4B1823
GameAssembly.dll+4B1854: 8B 86 A0 00 00 00     - mov eax,[rsi+000000A0]
GameAssembly.dll+4B185A: 48 8B 5C 24 38        - mov rbx,[rsp+38]
GameAssembly.dll+4B185F: 89 87 A0 00 00 00     - mov [rdi+000000A0],eax
GameAssembly.dll+4B1865: 8B 86 A4 00 00 00     - mov eax,[rsi+000000A4]
GameAssembly.dll+4B186B: 48 8B 74 24 40        - mov rsi,[rsp+40]
GameAssembly.dll+4B1870: 89 87 A4 00 00 00     - mov [rdi+000000A4],eax
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>12</ID>
                  <Description>"Count"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>i_base_sel_object_addr</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>15</ID>
              <Description>"Items in storage do not decrease"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Farthest Frontier.exe
  Version: 
  Date   : 2023-01-04
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

//aobscanmodule(INJECT_INF_ITEMS,GameAssembly.dll,C6 44 24 60 00 E8) // should be unique
aobscanregion(INJECT_INF_ITEMS,ItemStorageRemoveItemsProc+10,ItemStorageRemoveItemsProc+40,C6 44 24 60 00 E8) // should be unique
alloc(newmem,$1000,INJECT_INF_ITEMS)

label(code)
label(return)

newmem:
  mov r8d, 0

code:
  mov byte ptr [rsp+60],00
  jmp return

INJECT_INF_ITEMS:
  jmp newmem
return:
registersymbol(INJECT_INF_ITEMS)

[DISABLE]

INJECT_INF_ITEMS:
  db C6 44 24 60 00

unregistersymbol(INJECT_INF_ITEMS)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+938C9B

GameAssembly.dll+938C6E: CC                          - int 3 
GameAssembly.dll+938C6F: CC                          - int 3 
ItemStorageRemoveItemsProc: 48 83 EC 48                 - sub rsp,48
GameAssembly.dll+938C74: 48 C7 44 24 38 00 00 00 00  - mov qword ptr [rsp+38],00000000
GameAssembly.dll+938C7D: 48 8D 44 24 60              - lea rax,[rsp+60]
GameAssembly.dll+938C82: C6 44 24 30 00              - mov byte ptr [rsp+30],00
GameAssembly.dll+938C87: 48 89 44 24 28              - mov [rsp+28],rax
GameAssembly.dll+938C8C: 48 8D 44 24 58              - lea rax,[rsp+58]
GameAssembly.dll+938C91: 48 89 44 24 20              - mov [rsp+20],rax
GameAssembly.dll+938C96: C6 44 24 58 00              - mov byte ptr [rsp+58],00
// ---------- INJECTING HERE ----------
GameAssembly.dll+938C9B: C6 44 24 60 00              - mov byte ptr [rsp+60],00
// ---------- DONE INJECTING  ----------
GameAssembly.dll+938CA0: E8 0B 00 00 00              - call ItemStorage.RemoveItems
GameAssembly.dll+938CA5: 48 83 C4 48                 - add rsp,48
GameAssembly.dll+938CA9: C3                          - ret 
GameAssembly.dll+938CAA: CC                          - int 3 
GameAssembly.dll+938CAB: CC                          - int 3 
GameAssembly.dll+938CAC: CC                          - int 3 
GameAssembly.dll+938CAD: CC                          - int 3 
GameAssembly.dll+938CAE: CC                          - int 3 
GameAssembly.dll+938CAF: CC                          - int 3 
ItemStorage.RemoveItems: 48 89 5C 24 10              - mov [rsp+10],rbx
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>--[[
from https://forum.cheatengine.org/viewtopic.php?p=5659739&amp;sid=72bd2d145c30bf0d344304bce17ea990#5659739
FauDrei
--]]
function toHex(num)
    if num == 0 then
        return '0'
    end
    local neg = false
    if num &lt; 0 then
        neg = true
        num = num * -1
    end
    local hexstr = "0123456789ABCDEF"
    local result = ""
    while num &gt; 0 do
        local n = math.mod(num, 16)
        result = string.sub(hexstr, n + 1, n + 1) .. result
        num = math.floor(num / 16)
    end
    if neg then
        result = '-' .. result
    end
    return result
end


function reEscape(s)
  local escPatChars = [[().%+-*?[^]]
  s = s:gsub('.',function(c) if escPatChars:find(c,1,true) then return '%'..c end end)
  return s
end

function findMethodAddrBySignature(namespace,classname,methodname,signature,check)
  local meth = findMethodBySignature(namespace,classname,methodname,signature,check)
  if meth~=nil and meth&gt;0 then
    return mono_compile_method(meth)
  end
end

function findMethodBySignature(namespace,classname,methodname,signature,check)
  assert(type(signature)=='string',"invalid signature")
  signature="^"..reEscape(signature:gsub(";",","))
  local class = mono_findClass(namespace,classname)
  if type(class)~='number' or class==0 then return nil end
  local methods=mono_class_enumMethods(class)
  if type(methods)~='table' or #methods&lt;1 then return nil end
  if check then  print('check:'..methodname..": &lt;"..signature.."&gt; vs ") end
  for i=1,#methods do
   if methodname == methods[i].name then
     local sign = mono_method_getSignature(methods[i].method)
     if check then  print("  &gt;&gt; &lt;"..sign..'&gt;') end
     if sign:match(signature) then
       return methods[i].method
     end
   end
  end
end

--registerLuaFunctionHighlight('tohex')
registerLuaFunctionHighlight('toHex')
registerLuaFunctionHighlight('reEscape')
registerLuaFunctionHighlight('findMethodAddrBySignature')
registerLuaFunctionHighlight('findMethodBySignature')

</LuaScript>
</CheatTable>
