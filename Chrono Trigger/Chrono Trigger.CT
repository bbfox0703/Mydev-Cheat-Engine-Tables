<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="44">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Get gold"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Chrono Trigger.exe
  Version: 
  Date   : 2022-12-22
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_GOLD,Chrono Trigger.exe,8B B7 24 1A 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
label(i_base_gold_addr)

newmem:
  mov [i_base_gold_addr], edi

code:
  mov esi,[edi+00001A24]
  jmp return
align 10 cc
  i_base_gold_addr:
  dd 0

INJECT_GET_GOLD:
  jmp newmem
  nop
return:
registersymbol(INJECT_GET_GOLD)
registersymbol(i_base_gold_addr)
[DISABLE]

INJECT_GET_GOLD:
  db 8B B7 24 1A 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Chrono Trigger.exe+1D0980

Chrono Trigger.exe+1D095E: 8B 55 A4              - mov edx,[ebp-5C]
Chrono Trigger.exe+1D0961: 83 FA 10              - cmp edx,10
Chrono Trigger.exe+1D0964: 72 0E                 - jb "Chrono Trigger.exe"+1D0974
Chrono Trigger.exe+1D0966: 8B 4D 90              - mov ecx,[ebp-70]
Chrono Trigger.exe+1D0969: 42                    - inc edx
Chrono Trigger.exe+1D096A: 6A 01                 - push 01
Chrono Trigger.exe+1D096C: E8 9F EB E3 FF        - call "Chrono Trigger.exe"+F510
Chrono Trigger.exe+1D0971: 83 C4 04              - add esp,04
Chrono Trigger.exe+1D0974: 8B 0D 38 C3 E1 00     - mov ecx,["Chrono Trigger.exe"+41C338]
Chrono Trigger.exe+1D097A: 8D 85 78 FF FF FF     - lea eax,[ebp-00000088]
// ---------- INJECTING HERE ----------
Chrono Trigger.exe+1D0980: 8B B7 24 1A 00 00     - mov esi,[edi+00001A24]
// ---------- DONE INJECTING  ----------
Chrono Trigger.exe+1D0986: 6A 18                 - push 18
Chrono Trigger.exe+1D0988: 6A 3F                 - push 3F
Chrono Trigger.exe+1D098A: 50                    - push eax
Chrono Trigger.exe+1D098B: C7 45 A4 0F 00 00 00  - mov [ebp-5C],0000000F
Chrono Trigger.exe+1D0992: C7 45 A0 00 00 00 00  - mov [ebp-60],00000000
Chrono Trigger.exe+1D0999: C6 45 90 00           - mov byte ptr [ebp-70],00
Chrono Trigger.exe+1D099D: E8 FE 85 FE FF        - call "Chrono Trigger.exe"+1B8FA0
Chrono Trigger.exe+1D09A2: C6 45 FC 0E           - mov byte ptr [ebp-04],0E
Chrono Trigger.exe+1D09A6: 83 78 14 10           - cmp dword ptr [eax+14],10
Chrono Trigger.exe+1D09AA: 72 02                 - jb "Chrono Trigger.exe"+1D09AE
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Usage: Open menu"</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Gold"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_gold_addr</Address>
          <Offsets>
            <Offset>1A24</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Fill existing item stock to #"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Chrono Trigger.exe
  Version: 
  Date   : 2022-12-22
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_FULL_CONSUMABLE,Chrono Trigger.exe,83 7A 04 00 7E 1D) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
label(i_item_min_trigger_count)
label(i_item_fill_to_num)

newmem:
  push eax
  cmp dword ptr [edx+04], 0
  je next1

  mov eax, [i_item_min_trigger_count]
  test eax, eax
  je set1
  jmp test1

set1:
  mov eax, 1
  mov [i_item_min_trigger_count], eax

test1:
  cmp dword ptr [edx+04], eax
  jl next1

  mov eax, [i_item_fill_to_num]
  cmp dword ptr [edx+04], eax
  jae next1
  mov dword ptr [edx+04], eax
next1:
  pop eax

code:
  cmp dword ptr [edx+04],00
  reassemble(INJECT_FULL_CONSUMABLE+4)
  //jle "Chrono Trigger.exe"+1C3033
  jmp return
align 10 cc
  i_item_min_trigger_count:
  dd 2
  i_item_fill_to_num:
  dd 50


INJECT_FULL_CONSUMABLE:
  jmp newmem
  nop
return:
registersymbol(INJECT_FULL_CONSUMABLE)
registersymbol(i_item_min_trigger_count)
registersymbol(i_item_fill_to_num)

[DISABLE]

INJECT_FULL_CONSUMABLE:
  db 83 7A 04 00 7E 1D

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Chrono Trigger.exe+1C3010

Chrono Trigger.exe+1C2FF2: 74 4E              - je "Chrono Trigger.exe"+1C3042
Chrono Trigger.exe+1C2FF4: 33 F6              - xor esi,esi
Chrono Trigger.exe+1C2FF6: 85 FF              - test edi,edi
Chrono Trigger.exe+1C2FF8: 7E 48              - jle "Chrono Trigger.exe"+1C3042
Chrono Trigger.exe+1C2FFA: 8B 44 24 20        - mov eax,[esp+20]
Chrono Trigger.exe+1C2FFE: 33 FF              - xor edi,edi
Chrono Trigger.exe+1C3000: 8D 04 40           - lea eax,[eax+eax*2]
Chrono Trigger.exe+1C3003: 8D 80 04 02 00 00  - lea eax,[eax+00000204]
Chrono Trigger.exe+1C3009: 8D 14 82           - lea edx,[edx+eax*4]
Chrono Trigger.exe+1C300C: 8B 44 24 0C        - mov eax,[esp+0C]
// ---------- INJECTING HERE ----------
Chrono Trigger.exe+1C3010: 83 7A 04 00        - cmp dword ptr [edx+04],00
// ---------- DONE INJECTING  ----------
Chrono Trigger.exe+1C3014: 7E 1D              - jle "Chrono Trigger.exe"+1C3033
Chrono Trigger.exe+1C3016: 8B 8B D0 02 00 00  - mov ecx,[ebx+000002D0]
Chrono Trigger.exe+1C301C: F3 0F 7E 02        - movq xmm0,[edx]
Chrono Trigger.exe+1C3020: 66 0F D6 04 39     - movq [ecx+edi],xmm0
Chrono Trigger.exe+1C3025: 8B 42 08           - mov eax,[edx+08]
Chrono Trigger.exe+1C3028: 89 44 39 08        - mov [ecx+edi+08],eax
Chrono Trigger.exe+1C302C: 8D 4E 01           - lea ecx,[esi+01]
Chrono Trigger.exe+1C302F: 8B 44 24 0C        - mov eax,[esp+0C]
Chrono Trigger.exe+1C3033: 46                 - inc esi
Chrono Trigger.exe+1C3034: 83 C7 0C           - add edi,0C
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Usage: Open menu -&gt; Item -&gt; select related category"</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Threshold"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_item_min_trigger_count</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Set stock count to"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_item_fill_to_num</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Set silver point to 200"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Chrono Trigger.exe
  Version: 
  Date   : 2022-12-22
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_SET_SIVLER_PT,Chrono Trigger.exe,8B 9C DF B0 18 01 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  push ecx
  mov cl, c8
  mov [edi+ebx*8+000118B0], cl
  pop ecx
code:
  mov ebx,[edi+ebx*8+000118B0]
  jmp return

INJECT_SET_SIVLER_PT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT_SET_SIVLER_PT)

[DISABLE]

INJECT_SET_SIVLER_PT:
  db 8B 9C DF B0 18 01 00

unregistersymbol(INJECT_SET_SIVLER_PT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Chrono Trigger.exe+1675E2

Chrono Trigger.exe+1675B6: 0F 28 05 90 D3 DB 00  - movaps xmm0,["Chrono Trigger.exe"+3BD390]
Chrono Trigger.exe+1675BD: 0F 11 45 D8           - movups [ebp-28],xmm0
Chrono Trigger.exe+1675C1: 0F 28 05 C0 D1 DB 00  - movaps xmm0,["Chrono Trigger.exe"+3BD1C0]
Chrono Trigger.exe+1675C8: 0F 11 45 E8           - movups [ebp-18],xmm0
Chrono Trigger.exe+1675CC: 8B 84 8D C0 FE FF FF  - mov eax,[ebp+ecx*4-00000140]
Chrono Trigger.exe+1675D3: 85 C0                 - test eax,eax
Chrono Trigger.exe+1675D5: 78 02                 - js "Chrono Trigger.exe"+1675D9
Chrono Trigger.exe+1675D7: 03 C2                 - add eax,edx
Chrono Trigger.exe+1675D9: 8B 7B 40              - mov edi,[ebx+40]
Chrono Trigger.exe+1675DC: 8B 9D B8 FE FF FF     - mov ebx,[ebp-00000148]
// ---------- INJECTING HERE ----------
Chrono Trigger.exe+1675E2: 8B 9C DF B0 18 01 00  - mov ebx,[edi+ebx*8+000118B0]
// ---------- DONE INJECTING  ----------
Chrono Trigger.exe+1675E9: 3D 30 08 02 00        - cmp eax,00020830
Chrono Trigger.exe+1675EE: 7C 13                 - jl "Chrono Trigger.exe"+167603
Chrono Trigger.exe+1675F0: 3D 37 08 02 00        - cmp eax,00020837
Chrono Trigger.exe+1675F5: 7D 13                 - jnl "Chrono Trigger.exe"+16760A
Chrono Trigger.exe+1675F7: 89 9C 87 94 F7 F7 FF  - mov [edi+eax*4-0008086C],ebx
Chrono Trigger.exe+1675FE: E9 2C 01 00 00        - jmp "Chrono Trigger.exe"+16772F
Chrono Trigger.exe+167603: 3D 37 08 02 00        - cmp eax,00020837
Chrono Trigger.exe+167608: 7C 07                 - jl "Chrono Trigger.exe"+167611
Chrono Trigger.exe+16760A: 3D 3E 08 02 00        - cmp eax,0002083E
Chrono Trigger.exe+16760F: 7C E6                 - jl "Chrono Trigger.exe"+1675F7
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Usage: talk to point report NPC"</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"XP multiplier"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Chrono Trigger.exe
  Version: 
  Date   : 2022-12-22
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_XP_MULTI,Chrono Trigger.exe,8B 55 EC 01 42 44) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
label(vf_xp_multi)

newmem:
  movss [vf_temp1], xmm6
  movss [vf_temp2], xmm7
  cvtsi2ss xmm7, eax
  movss xmm6, [vf_xp_multi]
  mulss xmm7, xmm6
  cvtss2si eax, xmm7
  movss xmm6, [vf_temp1]
  movss xmm7, [vf_temp2]

code:
  mov edx,[ebp-14]
  add [edx+44],eax
  jmp return
align 10 cc
  vf_xp_multi:
  dd (float)1.33333
  vf_temp1:
  dd 0
  vf_temp2:
  dd 0

INJECT_XP_MULTI:
  jmp newmem
  nop
return:
registersymbol(INJECT_XP_MULTI)
registersymbol(vf_xp_multi)
[DISABLE]

INJECT_XP_MULTI:
  db 8B 55 EC 01 42 44

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Chrono Trigger.exe+94E00

Chrono Trigger.exe+94DE1: 8D 04 C9              - lea eax,[ecx+ecx*8]
Chrono Trigger.exe+94DE4: C1 E0 05              - shl eax,05
Chrono Trigger.exe+94DE7: 89 45 F4              - mov [ebp-0C],eax
Chrono Trigger.exe+94DEA: 8B D8                 - mov ebx,eax
Chrono Trigger.exe+94DEC: 8B 46 44              - mov eax,[esi+44]
Chrono Trigger.exe+94DEF: 83 C3 30              - add ebx,30
Chrono Trigger.exe+94DF2: 03 C3                 - add eax,ebx
Chrono Trigger.exe+94DF4: 8D 5E 40              - lea ebx,[esi+40]
Chrono Trigger.exe+94DF7: 89 45 EC              - mov [ebp-14],eax
Chrono Trigger.exe+94DFA: 8B 82 40 16 00 00     - mov eax,[edx+00001640]
// ---------- INJECTING HERE ----------
Chrono Trigger.exe+94E00: 8B 55 EC              - mov edx,[ebp-14]
// ---------- DONE INJECTING  ----------
Chrono Trigger.exe+94E03: 01 42 44              - add [edx+44],eax
Chrono Trigger.exe+94E06: 81 7A 44 7F 96 98 00  - cmp [edx+44],0098967F
Chrono Trigger.exe+94E0D: 7E 07                 - jle "Chrono Trigger.exe"+94E16
Chrono Trigger.exe+94E0F: C7 42 44 7F 96 98 00  - mov [edx+44],0098967F
Chrono Trigger.exe+94E16: 8B 46 50              - mov eax,[esi+50]
Chrono Trigger.exe+94E19: 8B 55 FC              - mov edx,[ebp-04]
Chrono Trigger.exe+94E1C: 80 7C 02 1D 00        - cmp byte ptr [edx+eax+1D],00
Chrono Trigger.exe+94E21: 7C 68                 - jl "Chrono Trigger.exe"+94E8B
Chrono Trigger.exe+94E23: 83 3B 00              - cmp dword ptr [ebx],00
Chrono Trigger.exe+94E26: 74 3A                 - je "Chrono Trigger.exe"+94E62
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>19</ID>
          <Description>"multiplier"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>Float</VariableType>
          <Address>vf_xp_multi</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>21</ID>
      <Description>"Skill PT multiplier (total pt max 200)"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Chrono Trigger.exe
  Version: 
  Date   : 2022-12-22
  Author : bbfox@https://opencheattable.com
}

[ENABLE]

aobscanmodule(INJECT_SKILL_PT_MULTI,Chrono Trigger.exe,89 7C 01 78 85 FF) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
label(vf_skill_pt_multi)

newmem:
  push edx
  mov edx, [i_temp1]
  cmp edi, edx
  jae endp
  shr edi, 10

  xor edx, edx
  mov dl, [ecx+eax+7A]
  cvtsi2ss xmm7, edx
  cvtsi2ss xmm6, edi
  comiss xmm6, xmm7
  jbe endp
  subss xmm6, xmm7
  movss xmm7, [vf_skill_pt_multi]
  mulss xmm7, xmm6
  cvtsi2ss xmm6, edx
  addss xmm7, xmm6

  movss xmm6, [vf_200]
  comiss xmm7, xmm6
  jbe after_set_200
  vmovss xmm7, [vf_200]

after_set_200:
  cvtss2si edi, xmm7
  shl edi, 10


endp:
  pop edx

code:
  mov [ecx+eax+78],edi
  test edi,edi
  jmp return
align 10 cc
  vf_skill_pt_multi:
  dd (float)1.5
  vf_200:
  dd (float)200
  i_temp1:
  dd C80000

INJECT_SKILL_PT_MULTI:
  jmp newmem
  nop
return:
registersymbol(INJECT_SKILL_PT_MULTI)
registersymbol(vf_skill_pt_multi)
[DISABLE]

INJECT_SKILL_PT_MULTI:
  db 89 7C 01 78 85 FF

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Chrono Trigger.exe+AC25B

Chrono Trigger.exe+AC23A: 8B CE                    - mov ecx,esi
Chrono Trigger.exe+AC23C: C7 44 01 4C 00 00 00 00  - mov [ecx+eax+4C],00000000
Chrono Trigger.exe+AC244: EB 0F                    - jmp "Chrono Trigger.exe"+AC255
Chrono Trigger.exe+AC246: 8B 74 06 48              - mov esi,[esi+eax+48]
Chrono Trigger.exe+AC24A: 3B CE                    - cmp ecx,esi
Chrono Trigger.exe+AC24C: 8B 4D FC                 - mov ecx,[ebp-04]
Chrono Trigger.exe+AC24F: 7E 04                    - jle "Chrono Trigger.exe"+AC255
Chrono Trigger.exe+AC251: 89 74 01 4C              - mov [ecx+eax+4C],esi
Chrono Trigger.exe+AC255: 8B 75 F8                 - mov esi,[ebp-08]
Chrono Trigger.exe+AC258: 8B 46 44                 - mov eax,[esi+44]
// ---------- INJECTING HERE ----------
Chrono Trigger.exe+AC25B: 89 7C 01 78              - mov [ecx+eax+78],edi
// ---------- DONE INJECTING  ----------
Chrono Trigger.exe+AC25F: 85 FF                    - test edi,edi
Chrono Trigger.exe+AC261: 79 0A                    - jns "Chrono Trigger.exe"+AC26D
Chrono Trigger.exe+AC263: C7 44 01 78 00 00 00 00  - mov [ecx+eax+78],00000000
Chrono Trigger.exe+AC26B: EB 10                    - jmp "Chrono Trigger.exe"+AC27D
Chrono Trigger.exe+AC26D: 81 FF 7F 96 98 00        - cmp edi,0098967F
Chrono Trigger.exe+AC273: 7E 08                    - jle "Chrono Trigger.exe"+AC27D
Chrono Trigger.exe+AC275: C7 44 01 78 7F 96 98 00  - mov [ecx+eax+78],0098967F
Chrono Trigger.exe+AC27D: 8B 46 44                 - mov eax,[esi+44]
Chrono Trigger.exe+AC280: 89 9C 01 C8 00 00 00     - mov [ecx+eax+000000C8],ebx
Chrono Trigger.exe+AC287: 85 DB                    - test ebx,ebx
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>22</ID>
          <Description>"multiplier"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>Float</VariableType>
          <Address>vf_skill_pt_multi</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>25</ID>
      <Description>"Recover HP after battle"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Chrono Trigger.exe
  Version: 
  Date   : 2022-12-22
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_HPMP_FULL_AFTER_BATTLE,Chrono Trigger.exe,89 74 01 44 8B 75 F8 79) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov esi, [ecx+eax+40]

code:
  mov [ecx+eax+44],esi
  mov esi,[ebp-08]
  jmp return

INJECT_HPMP_FULL_AFTER_BATTLE:
  jmp newmem
  nop 2
return:
registersymbol(INJECT_HPMP_FULL_AFTER_BATTLE)

[DISABLE]

INJECT_HPMP_FULL_AFTER_BATTLE:
  db 89 74 01 44 8B 75 F8

unregistersymbol(INJECT_HPMP_FULL_AFTER_BATTLE)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Chrono Trigger.exe+AC1FF

Chrono Trigger.exe+AC1E0: 8D 04 C0                 - lea eax,[eax+eax*8]
Chrono Trigger.exe+AC1E3: C1 E0 05                 - shl eax,05
Chrono Trigger.exe+AC1E6: 89 45 FC                 - mov [ebp-04],eax
Chrono Trigger.exe+AC1E9: 0F B6 41 02              - movzx eax,byte ptr [ecx+02]
Chrono Trigger.exe+AC1ED: 8B 4D FC                 - mov ecx,[ebp-04]
Chrono Trigger.exe+AC1F0: 89 44 31 3C              - mov [ecx+esi+3C],eax
Chrono Trigger.exe+AC1F4: 8B 75 F8                 - mov esi,[ebp-08]
Chrono Trigger.exe+AC1F7: 8B 46 44                 - mov eax,[esi+44]
Chrono Trigger.exe+AC1FA: 8B 75 F0                 - mov esi,[ebp-10]
Chrono Trigger.exe+AC1FD: 85 F6                    - test esi,esi
// ---------- INJECTING HERE ----------
Chrono Trigger.exe+AC1FF: 89 74 01 44              - mov [ecx+eax+44],esi
// ---------- DONE INJECTING  ----------
Chrono Trigger.exe+AC203: 8B 75 F8                 - mov esi,[ebp-08]
Chrono Trigger.exe+AC206: 79 0A                    - jns "Chrono Trigger.exe"+AC212
Chrono Trigger.exe+AC208: C7 44 01 44 00 00 00 00  - mov [ecx+eax+44],00000000
Chrono Trigger.exe+AC210: EB 17                    - jmp "Chrono Trigger.exe"+AC229
Chrono Trigger.exe+AC212: 8B 75 F0                 - mov esi,[ebp-10]
Chrono Trigger.exe+AC215: 3B 74 01 40              - cmp esi,[ecx+eax+40]
Chrono Trigger.exe+AC219: 8B 75 F8                 - mov esi,[ebp-08]
Chrono Trigger.exe+AC21C: 7E 0B                    - jle "Chrono Trigger.exe"+AC229
Chrono Trigger.exe+AC21E: 8B 74 01 40              - mov esi,[ecx+eax+40]
Chrono Trigger.exe+AC222: 89 74 01 44              - mov [ecx+eax+44],esi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>32</ID>
      <Description>"Recover MP after battle"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Chrono Trigger.exe
  Version: 
  Date   : 2022-12-22
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_RECOVER_MP,Chrono Trigger.exe,89 4C 06 4C 85 C9) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov ecx, [esi+eax+48]
code:
  mov [esi+eax+4C],ecx
  test ecx,ecx
  jmp return

INJECT_RECOVER_MP:
  jmp newmem
  nop
return:
registersymbol(INJECT_RECOVER_MP)

[DISABLE]

INJECT_RECOVER_MP:
  db 89 4C 06 4C 85 C9

unregistersymbol(INJECT_RECOVER_MP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Chrono Trigger.exe+AC232

Chrono Trigger.exe+AC212: 8B 75 F0                 - mov esi,[ebp-10]
Chrono Trigger.exe+AC215: 3B 74 01 40              - cmp esi,[ecx+eax+40]
Chrono Trigger.exe+AC219: 8B 75 F8                 - mov esi,[ebp-08]
Chrono Trigger.exe+AC21C: 7E 0B                    - jle "Chrono Trigger.exe"+AC229
Chrono Trigger.exe+AC21E: 8B 74 01 40              - mov esi,[ecx+eax+40]
Chrono Trigger.exe+AC222: 89 74 01 44              - mov [ecx+eax+44],esi
Chrono Trigger.exe+AC226: 8B 75 F8                 - mov esi,[ebp-08]
Chrono Trigger.exe+AC229: 8B 46 44                 - mov eax,[esi+44]
Chrono Trigger.exe+AC22C: 8B 75 FC                 - mov esi,[ebp-04]
Chrono Trigger.exe+AC22F: 8B 4D E8                 - mov ecx,[ebp-18]
// ---------- INJECTING HERE ----------
Chrono Trigger.exe+AC232: 89 4C 06 4C              - mov [esi+eax+4C],ecx
// ---------- DONE INJECTING  ----------
Chrono Trigger.exe+AC236: 85 C9                    - test ecx,ecx
Chrono Trigger.exe+AC238: 79 0C                    - jns "Chrono Trigger.exe"+AC246
Chrono Trigger.exe+AC23A: 8B CE                    - mov ecx,esi
Chrono Trigger.exe+AC23C: C7 44 01 4C 00 00 00 00  - mov [ecx+eax+4C],00000000
Chrono Trigger.exe+AC244: EB 0F                    - jmp "Chrono Trigger.exe"+AC255
Chrono Trigger.exe+AC246: 8B 74 06 48              - mov esi,[esi+eax+48]
Chrono Trigger.exe+AC24A: 3B CE                    - cmp ecx,esi
Chrono Trigger.exe+AC24C: 8B 4D FC                 - mov ecx,[ebp-04]
Chrono Trigger.exe+AC24F: 7E 04                    - jle "Chrono Trigger.exe"+AC255
Chrono Trigger.exe+AC251: 89 74 01 4C              - mov [ecx+eax+4C],esi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"Battle: Inf MP"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Chrono Trigger.exe
  Version: 
  Date   : 2022-12-22
  Author : bbfox@https://opencheattables.com
}

define(address,"Chrono Trigger.exe"+91A68)
define(bytes,88 1C 08 8D 4F 08)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  cmp byte ptr [eax+ecx-7], 7
  jae to_enemy
  mov bl, [eax+ecx+2]


to_enemy:

code:
  mov [eax+ecx],bl
  lea ecx,[edi+08]
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov [eax+ecx],bl
  // lea ecx,[edi+08]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Chrono Trigger.exe+91A68

Chrono Trigger.exe+91A4E: 83 E2 7F           - and edx,7F
Chrono Trigger.exe+91A51: 03 C2              - add eax,edx
Chrono Trigger.exe+91A53: 83 E0 80           - and eax,-80
Chrono Trigger.exe+91A56: 81 E1 7F 00 00 80  - and ecx,8000007F
Chrono Trigger.exe+91A5C: 79 05              - jns "Chrono Trigger.exe"+91A63
Chrono Trigger.exe+91A5E: 49                 - dec ecx
Chrono Trigger.exe+91A5F: 83 C9 80           - or ecx,-80
Chrono Trigger.exe+91A62: 41                 - inc ecx
Chrono Trigger.exe+91A63: 03 C1              - add eax,ecx
Chrono Trigger.exe+91A65: 8B 4E 50           - mov ecx,[esi+50]
// ---------- INJECTING HERE ----------
Chrono Trigger.exe+91A68: 88 1C 08           - mov [eax+ecx],bl
// ---------- DONE INJECTING  ----------
Chrono Trigger.exe+91A6B: 8D 4F 08           - lea ecx,[edi+08]
Chrono Trigger.exe+91A6E: 8B C1              - mov eax,ecx
Chrono Trigger.exe+91A70: C1 FB 08           - sar ebx,08
Chrono Trigger.exe+91A73: 99                 - cdq 
Chrono Trigger.exe+91A74: 83 E2 7F           - and edx,7F
Chrono Trigger.exe+91A77: 03 C2              - add eax,edx
Chrono Trigger.exe+91A79: 83 E0 80           - and eax,-80
Chrono Trigger.exe+91A7C: 81 E1 7F 00 00 80  - and ecx,8000007F
Chrono Trigger.exe+91A82: 79 05              - jns "Chrono Trigger.exe"+91A89
Chrono Trigger.exe+91A84: 49                 - dec ecx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>28</ID>
      <Description>"Battle: Keep min HP"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Chrono Trigger.exe (paused)
  Version: 
  Date   : 2022-12-22
  Author : bbfox@https://opencheattables.com
}

define(address,"Chrono Trigger.exe"+90F65)
define(bytes,88 1C 08 8D 4F 04)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)
label(i_battle_min_hp)

newmem:
  //[eax+ecx] HP
  //[eax+ecx+2] Max HP
  //[eax+ecx+4] MP
  //[eax+ecx+8] Max MP
  cmp byte ptr [eax+ecx-3], 7
  jae to_enemy
  cmp bl, byte ptr [i_battle_min_hp]
  jae code
  mov bl, [i_battle_min_hp]
  //mov bl, [eax+ecx+2]

to_enemy:

code:
  mov [eax+ecx],bl
  lea ecx,[edi+04]
  jmp return
align 10 cc
  i_battle_min_hp:
  db 32

address:
  jmp newmem
  nop
return:
registersymbol(i_battle_min_hp)

[DISABLE]

address:
  db bytes
  // mov [eax+ecx],bl
  // lea ecx,[edi+04]
unregistersymbol(i_battle_min_hp)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Chrono Trigger.exe+90F65

Chrono Trigger.exe+90F4B: 83 E2 7F           - and edx,7F
Chrono Trigger.exe+90F4E: 03 C2              - add eax,edx
Chrono Trigger.exe+90F50: 83 E0 80           - and eax,-80
Chrono Trigger.exe+90F53: 81 E1 7F 00 00 80  - and ecx,8000007F
Chrono Trigger.exe+90F59: 79 05              - jns "Chrono Trigger.exe"+90F60
Chrono Trigger.exe+90F5B: 49                 - dec ecx
Chrono Trigger.exe+90F5C: 83 C9 80           - or ecx,-80
Chrono Trigger.exe+90F5F: 41                 - inc ecx
Chrono Trigger.exe+90F60: 03 C1              - add eax,ecx
Chrono Trigger.exe+90F62: 8B 4E 50           - mov ecx,[esi+50]
// ---------- INJECTING HERE ----------
Chrono Trigger.exe+90F65: 88 1C 08           - mov [eax+ecx],bl
// ---------- DONE INJECTING  ----------
Chrono Trigger.exe+90F68: 8D 4F 04           - lea ecx,[edi+04]
Chrono Trigger.exe+90F6B: 8B C1              - mov eax,ecx
Chrono Trigger.exe+90F6D: C1 FB 08           - sar ebx,08
Chrono Trigger.exe+90F70: 99                 - cdq 
Chrono Trigger.exe+90F71: 83 E2 7F           - and edx,7F
Chrono Trigger.exe+90F74: 03 C2              - add eax,edx
Chrono Trigger.exe+90F76: 83 E0 80           - and eax,-80
Chrono Trigger.exe+90F79: 81 E1 7F 00 00 80  - and ecx,8000007F
Chrono Trigger.exe+90F7F: 79 05              - jns "Chrono Trigger.exe"+90F86
Chrono Trigger.exe+90F81: 49                 - dec ecx
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>29</ID>
          <Description>"Min HP"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>Byte</VariableType>
          <Address>i_battle_min_hp</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Auto Assemble script"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Chrono Trigger.exe
  Version: 
  Date   : 2022-12-22
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_STAT,Chrono Trigger.exe,8B 4C 33 74 89 48 08) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov ecx,[ebx+esi+74]
  mov [eax+08],ecx
  jmp return
align 10 cc
  i_base_char_stat:
  dd 0

INJECT_GET_STAT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT_GET_STAT)

[DISABLE]

INJECT_GET_STAT:
  db 8B 4C 33 74 89 48 08

unregistersymbol(INJECT_GET_STAT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Chrono Trigger.exe+204703

Chrono Trigger.exe+2046CE: 89 48 0C              - mov [eax+0C],ecx
Chrono Trigger.exe+2046D1: C7 40 10 FF FF FF FF  - mov [eax+10],FFFFFFFF
Chrono Trigger.exe+2046D8: C7 40 14 00 00 5C 43  - mov [eax+14],435C0000
Chrono Trigger.exe+2046DF: C7 40 18 00 00 C8 C1  - mov [eax+18],C1C80000
Chrono Trigger.exe+2046E6: E8 C7 DC 15 00        - call "Chrono Trigger.exe"+3623B2
Chrono Trigger.exe+2046EB: 89 85 34 FF FF FF     - mov [ebp-000000CC],eax
Chrono Trigger.exe+2046F1: 6A 1C                 - push 1C
Chrono Trigger.exe+2046F3: 89 45 D0              - mov [ebp-30],eax
Chrono Trigger.exe+2046F6: C7 00 A8 7F DA 00     - mov [eax],"Chrono Trigger.exe"+3A7FA8
Chrono Trigger.exe+2046FC: C7 40 04 3A 00 00 00  - mov [eax+04],0000003A
// ---------- INJECTING HERE ----------
Chrono Trigger.exe+204703: 8B 4C 33 74           - mov ecx,[ebx+esi+74]
// ---------- DONE INJECTING  ----------
Chrono Trigger.exe+204707: 89 48 08              - mov [eax+08],ecx
Chrono Trigger.exe+20470A: C7 40 0C FF FF FF FF  - mov [eax+0C],FFFFFFFF
Chrono Trigger.exe+204711: C7 40 10 FF FF FF FF  - mov [eax+10],FFFFFFFF
Chrono Trigger.exe+204718: C7 40 14 00 00 C8 42  - mov [eax+14],42C80000
Chrono Trigger.exe+20471F: C7 40 18 00 00 24 C2  - mov [eax+18],C2240000
Chrono Trigger.exe+204726: E8 87 DC 15 00        - call "Chrono Trigger.exe"+3623B2
Chrono Trigger.exe+20472B: 89 85 34 FF FF FF     - mov [ebp-000000CC],eax
Chrono Trigger.exe+204731: 83 C4 18              - add esp,18
Chrono Trigger.exe+204734: C7 00 AC 7F DA 00     - mov [eax],"Chrono Trigger.exe"+3A7FAC
Chrono Trigger.exe+20473A: C7 40 04 3B 00 00 00  - mov [eax+04],0000003B
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :movzx edi,byte ptr [ecx+18]</Description>
      <AddressString>Chrono Trigger.exe+AC1A2</AddressString>
      <Before>
        <Byte>04</Byte>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>41</Byte>
        <Byte>03</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>79</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>C1</Byte>
        <Byte>E3</Byte>
        <Byte>08</Byte>
        <Byte>0B</Byte>
        <Byte>D8</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
