<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>16</ID>
      <Description>"get HP"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : HoloCure.exe
  Version: 
  Date   : 2024-12-14
  Author :
}

[ENABLE]

aobscanmodule(INJECT_GET_HP_TIRED,$process,48 89 03 B0 01 48 83 C4 50) // should be unique
alloc(newmem,$1000,INJECT_GET_HP_TIRED)

label(code)
label(return)
label(i_hp_addr_1 i_hp_addr_2 vd_hp_min vd_hp_max)
newmem:
  // check NaN
  vmovsd xmm15, [rdi]
  vucomisd xmm15, xmm15
  jp code
  // check range
  vmovsd xmm15, [vd_hp_min]
  vmovsd xmm14, [rdi]
  vucomisd xmm14, xmm15
  jb code
  vmovsd xmm15, [vd_hp_max]
  vucomisd xmm14, xmm15
  ja code

  //check if integer
  vmovsd xmm14, [rdi]
  vmovsd xmm15, [rdi]
  //movq rax, xmm14
  push r15
  vcvttsd2si r15, xmm14
  cvtsi2sd xmm14, r15
  pop r15
  vucomisd xmm14, xmm15
  jp code //NaN
  jne code

  cmp dword ptr [rdi+4], 0
  jne code
  cmp dword ptr [rdi+8], 0
  jne code

  // check pointer [40] Pointer to instance of YYObjectBase
  cmp dword ptr [rdi+40], 0
  je code
  cmp dword ptr [rdi+44], 0
  je code

  // check ponter [1E0] Pointer to instance of CScriptRef
  //cmp dword ptr [rdi+1E0], 0
  //je code
  //cmp dword ptr [rdi+1E4], 0
  //je code

  vxorps xmm13, xmm13, xmm13
  // check offset 240 is double integer
  vmovsd xmm14, [rdi+240]
  vmovsd xmm15, [rdi+240]
  //movq rax, xmm14
  push r15
  vcvttsd2si r15, xmm14
  cvtsi2sd xmm14, r15
  pop r15
  vucomisd xmm14, xmm15
  jp code //NaN
  jne code
  vucomisd xmm15, xmm13
  jbe code
  {
  // check offset 340 is double integer
  vmovsd xmm14, [rdi+340]
  vmovsd xmm15, [rdi+340]
  //movq rax, xmm14
  push r15
  vcvttsd2si r15, xmm14
  cvtsi2sd xmm14, r15
  pop r15
  vucomisd xmm14, xmm15
  jp code //NaN
  jne code
  vucomisd xmm15, xmm13
  jbe code

  // check offset 600 is double integer
  vmovsd xmm14, [rdi+600]
  vmovsd xmm15, [rdi+600]
  //movq rax, xmm14
  push r15
  vcvttsd2si r15, xmm14
  cvtsi2sd xmm14, r15
  pop r15
  vucomisd xmm14, xmm15
  jp code //NaN
  jne code
  vucomisd xmm15, xmm13
  jbe code

  // check offset 6A0 is double integer
  vmovsd xmm14, [rdi+6A0]
  vmovsd xmm15, [rdi+6A0]
  //movq rax, xmm14
  push r15
  vcvttsd2si r15, xmm14
  cvtsi2sd xmm14, r15
  pop r15
  vucomisd xmm14, xmm15
  jp code //NaN
  jne code
  vucomisd xmm15, xmm13
  jbe code
  }

  // save address
  cmp qword ptr [i_hp_addr_1], rdi
  je code
  cmp qword ptr [i_hp_addr_2], rdi
  je code

  cmp qword ptr [i_hp_addr_1], 0
  jne @F
  mov [i_hp_addr_1], rdi
@@:
  cmp qword ptr [i_hp_addr_2], 0
  jne @F
  cmp qword ptr [i_hp_addr_1], rdi
  je code
  mov [i_hp_addr_2], rdi

code:
  mov [rbx],rax
  mov al,01
  jmp return
align 10 cc
  vd_hp_min:
  dq (double)20
  vd_hp_max:
  dq (double)200
  i_hp_addr_1:
  dq 0
  i_hp_addr_2:
  dq 0
INJECT_GET_HP_TIRED:
  jmp newmem
return:
registersymbol(INJECT_GET_HP_TIRED)
registersymbol(i_hp_addr_1 i_hp_addr_2 vd_hp_min vd_hp_max)
[DISABLE]

INJECT_GET_HP_TIRED:
  db 48 89 03 B0 01

unregistersymbol(INJECT_GET_HP_TIRED)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: HoloCure.exe+372B226

HoloCure.exe+372B210: E8 BB F4 FF FF  - call HoloCure.exe+372A6D0
HoloCure.exe+372B215: B0 01           - mov al,01
HoloCure.exe+372B217: 48 83 C4 50     - add rsp,50
HoloCure.exe+372B21B: 41 5F           - pop r15
HoloCure.exe+372B21D: 41 5C           - pop r12
HoloCure.exe+372B21F: 5F              - pop rdi
HoloCure.exe+372B220: 5E              - pop rsi
HoloCure.exe+372B221: 5B              - pop rbx
HoloCure.exe+372B222: C3              - ret 
HoloCure.exe+372B223: 48 8B 07        - mov rax,[rdi]
// ---------- INJECTING HERE ----------
HoloCure.exe+372B226: 48 89 03        - mov [rbx],rax
// ---------- DONE INJECTING  ----------
HoloCure.exe+372B229: B0 01           - mov al,01
HoloCure.exe+372B22B: 48 83 C4 50     - add rsp,50
HoloCure.exe+372B22F: 41 5F           - pop r15
HoloCure.exe+372B231: 41 5C           - pop r12
HoloCure.exe+372B233: 5F              - pop rdi
HoloCure.exe+372B234: 5E              - pop rsi
HoloCure.exe+372B235: 5B              - pop rbx
HoloCure.exe+372B236: C3              - ret 
HoloCure.exe+372B237: 44 8B 42 0C     - mov r8d,[rdx+0C]
HoloCure.exe+372B23B: 41 8B C0        - mov eax,r8d
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>22</ID>
          <Description>"chekc range: min"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Double</VariableType>
          <Address>vd_hp_min</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"chekc range: max"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Double</VariableType>
          <Address>vd_hp_max</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Possibe HP #1"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Double</VariableType>
          <Address>i_hp_addr_1</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Possibe HP #2"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Double</VariableType>
          <Address>i_hp_addr_2</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Get coin after changed"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : HoloCure.exe
  Version: 
  Date   : 2024-12-14
  Author :
}

[ENABLE]

aobscanmodule(INJECT_GET_COIN,$process,F2 0F 58 03 F2 0F 11 03 48 83) // should be unique
alloc(newmem,$1000,INJECT_GET_COIN)

label(code)
label(return)
label(i_coin_addr_1 i_coin_addr_2)

newmem:
  cmp dword ptr [rbx+1D0], 0
  je code
  cmp dword ptr [rbx+1D4], 0
  je code
  cmp dword ptr [rbx+330], 0
  je code
  cmp dword ptr [rbx+334], 0
  je code
  // check NaN
  vmovsd xmm15, [rbx]
  vucomisd xmm15, xmm15
  jp code

  //check if integer
  vmovsd xmm14, [rbx]
  vmovsd xmm15, [rbx]
  //movq rax, xmm14
  push r15
  vcvttsd2si r15, xmm14
  cvtsi2sd xmm14, r15
  pop r15
  vucomisd xmm14, xmm15
  jp code //NaN
  jne code

  vxorps xmm13, xmm13, xmm13
  // check offset f0, 570, 610 is double integer
  vmovsd xmm14, [rbx+f0]
  vmovsd xmm15, [rbx+f0]
  //movq rax, xmm14
  push r15
  vcvttsd2si r15, xmm14
  cvtsi2sd xmm14, r15
  pop r15
  vucomisd xmm14, xmm15
  jp code //NaN
  jne code
  vucomisd xmm15, xmm13
  jbe code

  vmovsd xmm14, [rbx+570]
  vmovsd xmm15, [rbx+570]
  //movq rax, xmm14
  push r15
  vcvttsd2si r15, xmm14
  cvtsi2sd xmm14, r15
  pop r15
  vucomisd xmm14, xmm15
  jp code //NaN
  jne code
  vucomisd xmm15, xmm13
  jbe code

  vmovsd xmm14, [rbx+610]
  vmovsd xmm15, [rbx+610]
  //movq rax, xmm14
  push r15
  vcvttsd2si r15, xmm14
  cvtsi2sd xmm14, r15
  pop r15
  vucomisd xmm14, xmm15
  jp code //NaN
  jne code
  vucomisd xmm15, xmm13
  jbe code

  // save address
  cmp qword ptr [i_coin_addr_1], rbx
  je code
  cmp qword ptr [i_coin_addr_2], rbx
  je code

  cmp qword ptr [i_coin_addr_1], 0
  jne @F
  mov [i_coin_addr_1], rbx
@@:
  cmp qword ptr [i_coin_addr_2], 0
  jne @F
  cmp qword ptr [i_coin_addr_1], rbx
  je code
  mov [i_coin_addr_2], rbx

code:
  addsd xmm0,[rbx]
  movsd [rbx],xmm0
  jmp return
align 10 cc
  i_coin_addr_1:
  dq 0
  i_coin_addr_2:
  dq 0
INJECT_GET_COIN:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_GET_COIN)
registersymbol(i_coin_addr_1 i_coin_addr_2)
[DISABLE]

INJECT_GET_COIN:
  db F2 0F 58 03 F2 0F 11 03

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: HoloCure.exe+2F9925

HoloCure.exe+2F98FC: E8 FF 03 00 00        - call HoloCure.exe+2F9D00
HoloCure.exe+2F9901: 48 8B C3              - mov rax,rbx
HoloCure.exe+2F9904: 48 83 C4 20           - add rsp,20
HoloCure.exe+2F9908: 5B                    - pop rbx
HoloCure.exe+2F9909: C3                    - ret 
HoloCure.exe+2F990A: C7 41 0C 00 00 00 00  - mov [rcx+0C],00000000
HoloCure.exe+2F9911: F7 42 0C FF FF FF 00  - test [rdx+0C],00FFFFFF
HoloCure.exe+2F9918: 0F 85 D9 00 00 00     - jne HoloCure.exe+2F99F7
HoloCure.exe+2F991E: F2 0F 10 02           - movsd xmm0,[rdx]
HoloCure.exe+2F9922: 48 8B C3              - mov rax,rbx
// ---------- INJECTING HERE ----------
HoloCure.exe+2F9925: F2 0F 58 03           - addsd xmm0,[rbx]
// ---------- DONE INJECTING  ----------
HoloCure.exe+2F9929: F2 0F 11 03           - movsd [rbx],xmm0
HoloCure.exe+2F992D: 48 83 C4 20           - add rsp,20
HoloCure.exe+2F9931: 5B                    - pop rbx
HoloCure.exe+2F9932: C3                    - ret 
HoloCure.exe+2F9933: F7 42 0C FF FF FF 00  - test [rdx+0C],00FFFFFF
HoloCure.exe+2F993A: 75 20                 - jne HoloCure.exe+2F995C
HoloCure.exe+2F993C: 0F 57 C0              - xorps xmm0,xmm0
HoloCure.exe+2F993F: 48 8B C3              - mov rax,rbx
HoloCure.exe+2F9942: F2 48 0F 2A 01        - cvtsi2sd xmm0,[rcx]
HoloCure.exe+2F9947: F2 0F 58 02           - addsd xmm0,[rdx]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>19</ID>
          <Description>"Possible address 1"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Double</VariableType>
          <Address>i_coin_addr_1</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Possible address 1"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Double</VariableType>
          <Address>i_coin_addr_2</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>24</ID>
      <Description>"No description"</Description>
      <VariableType>Double</VariableType>
      <Address>1C4DF183290</Address>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :addsd xmm0,[rbx]</Description>
      <AddressString>HoloCure.exe+2F9925</AddressString>
      <Before>
        <Byte>10</Byte>
        <Byte>02</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>C3</Byte>
      </Before>
      <Actual>
        <Byte>F2</Byte>
        <Byte>0F</Byte>
        <Byte>58</Byte>
        <Byte>03</Byte>
      </Actual>
      <After>
        <Byte>F2</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>03</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
