<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="42">
  <CheatEntries>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Compact mode"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
--https://forum.cheatengine.org/viewtopic.php?t=570055
LuaCall(function cycleFullCompact(sender,force) local state = not(compactmenuitem.Caption == 'Compact View Mode'); if force~=nil then state = not force end; compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'; getMainForm().Splitter1.Visible = state; getMainForm().Panel4.Visible    = state; getMainForm().Panel5.Visible    = state; end; function addCompactMenu() if compactmenualreadyexists then return end; local parent = getMainForm().Menu.Items; compactmenuitem = createMenuItem(parent); parent.add(compactmenuitem); compactmenuitem.Caption = 'Compact View Mode'; compactmenuitem.OnClick = cycleFullCompact; compactmenualreadyexists = 'yes'; end; addCompactMenu(); cycleFullCompact(nil,true))

[DISABLE]
LuaCall(cycleFullCompact(nil,false))
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>33</ID>
      <Description>"Cole"</Description>
      <Color>FF8080</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>Atelier_Ryza.exe+147D198</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Walk/Run speed hack"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Atelier_Ryza.exe
  Version: 
  Date   : 2022-11-12
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_XYZ_COORDS,Atelier_Ryza.exe,F3 0F 10 43 10 48 8D 54) // should be unique
alloc(newmem,$1000,INJECT_XYZ_COORDS)

label(code)
label(return)
label(x_vector)
label(x_coords)
label(y_vector)
label(y_coords)
label(z_vector)
label(z_coords)
label(speed_acc_factor)

{
Atelier_Ryza.exe+662043: F3 0F 10 4B 14           - movss xmm1,[rbx+14] // z vector
Atelier_Ryza.exe+662048: F3 0F 10 53 18           - movss xmm2,[rbx+18] // y vector
Atelier_Ryza.exe+66204D: F3 0F 10 5B 1C           - movss xmm3,[rbx+1C] // always 0?
Atelier_Ryza.exe+662052: F3 0F 58 4B 2C           - addss xmm1,[rbx+2C] // z coord
Atelier_Ryza.exe+662057: F3 0F 58 53 30           - addss xmm2,[rbx+30] // y coord
Atelier_Ryza.exe+66205C: F3 0F 58 5B 34           - addss xmm3,[rbx+34] // always 1?
  movss xmm15, [rbx+10]  //x vector
  movss [x_vector], xmm15
  movss xmm15, [rbx+28]  //x coord
  movss [x_coords], xmm15

  movss xmm15, [rbx+14] //z vector
  movss [xm1a], xmm15
  movss xmm15, [rbx+18] //y vector
  movss [xm2a], xmm15
  movss xmm15, [rbx+1C]
  movss [xm3a], xmm15

  movss xmm15, [rbx+2c] // z coord
  movss [xm1b], xmm15
  movss xmm15, [rbx+30] // y coord
  movss [xm2b], xmm15
  movss xmm15, [rbx+34]
  movss [xm3b], xmm15
}

newmem:
  //save xmm
  //vmovdqu [xm14_save1], xmm14
  //vmovdqu [xm15_save1], xmm15

  // display x
  vmovss xmm15, [rbx+10]
  vmovss [x_vector], xmm15

  vmovss xmm15, [rbx+28]
  vmovss [x_coords], xmm15

  // display y
  vmovss xmm15, [rbx+18]
  vmovss [y_vector], xmm15

  vmovss xmm15, [rbx+30]
  vmovss [y_coords], xmm15

  // display z
  vmovss xmm15, [rbx+14]
  vmovss [z_vector], xmm15

  vmovss xmm15, [rbx+2c]
  vmovss [z_coords], xmm15

  //mulss xmm0 = x
  //mulss xmm2 = y

  vmovss xmm15, [speed_acc_factor]
  vmovss xmm14, [rbx+10]
  vmulss xmm14, xmm14, xmm15
  vmovss [rbx+10], xmm14

  vmovss xmm14, [rbx+18]
  vmulss xmm14, xmm14, xmm15
  vmovss [rbx+18], xmm14

  //load xmm
  //vmovdqu xmm14, [xm14_save1]
  //vmovdqu xmm15, [xm15_save1]


code:
  movss xmm0,[rbx+10]
  jmp return
align 10 cc
  x_vector:
  dd 0
  x_coords:
  dd 0
  y_vector:
  dd 0
  y_coords:
  dd 0
  z_vector:
  dd 0
  z_coords:
  dd 0
  speed_acc_factor:
  dd (float)1.35
  xm14_save1:
  dq 0
  xm14_save2:
  dq 0
  xm15_save1:
  dq 0
  xm15_save2:
  dq 0

INJECT_XYZ_COORDS:
  jmp newmem
return:
registersymbol(INJECT_XYZ_COORDS)
registersymbol(z_vector)
registersymbol(z_coords)
registersymbol(y_vector)
registersymbol(y_coords)
registersymbol(speed_acc_factor)
registersymbol(x_vector)
registersymbol(x_coords)

[DISABLE]

INJECT_XYZ_COORDS:
  db F3 0F 10 43 10

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza.exe+662034

Atelier_Ryza.exe+662008: 48 8B D9                 - mov rbx,rcx
Atelier_Ryza.exe+66200B: E8 E0 1F 00 00           - call Atelier_Ryza.exe+663FF0
Atelier_Ryza.exe+662010: 48 83 BB 88 00 00 00 00  - cmp qword ptr [rbx+00000088],00
Atelier_Ryza.exe+662018: 76 16                    - jna Atelier_Ryza.exe+662030
Atelier_Ryza.exe+66201A: F3 0F 10 0D 42 A2 3D 00  - movss xmm1,[Atelier_Ryza.exe+A3C264]
Atelier_Ryza.exe+662022: 44 0F B6 C7              - movzx r8d,dil
Atelier_Ryza.exe+662026: 48 8B CB                 - mov rcx,rbx
Atelier_Ryza.exe+662029: E8 62 0C 00 00           - call Atelier_Ryza.exe+662C90
Atelier_Ryza.exe+66202E: EB 04                    - jmp Atelier_Ryza.exe+662034
Atelier_Ryza.exe+662030: C6 43 48 00              - mov byte ptr [rbx+48],00
// ---------- INJECTING HERE ----------
Atelier_Ryza.exe+662034: F3 0F 10 43 10           - movss xmm0,[rbx+10]
// ---------- DONE INJECTING  ----------
Atelier_Ryza.exe+662039: 48 8D 54 24 20           - lea rdx,[rsp+20]
Atelier_Ryza.exe+66203E: F3 0F 58 43 28           - addss xmm0,[rbx+28]
Atelier_Ryza.exe+662043: F3 0F 10 4B 14           - movss xmm1,[rbx+14]
Atelier_Ryza.exe+662048: F3 0F 10 53 18           - movss xmm2,[rbx+18]
Atelier_Ryza.exe+66204D: F3 0F 10 5B 1C           - movss xmm3,[rbx+1C]
Atelier_Ryza.exe+662052: F3 0F 58 4B 2C           - addss xmm1,[rbx+2C]
Atelier_Ryza.exe+662057: F3 0F 58 53 30           - addss xmm2,[rbx+30]
Atelier_Ryza.exe+66205C: F3 0F 58 5B 34           - addss xmm3,[rbx+34]
Atelier_Ryza.exe+662061: 48 8B 4B 58              - mov rcx,[rbx+58]
Atelier_Ryza.exe+662065: F3 0F 11 44 24 20        - movss [rsp+20],xmm0
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Speed multiplier"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>Float</VariableType>
          <Address>speed_acc_factor</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Coords"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>5</ID>
              <Description>"X"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808080</Color>
              <VariableType>Float</VariableType>
              <Address>x_coords</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>6</ID>
              <Description>"Y"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808080</Color>
              <VariableType>Float</VariableType>
              <Address>y_coords</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>7</ID>
              <Description>"Z"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808080</Color>
              <VariableType>Float</VariableType>
              <Address>z_coords</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"Recover HP after battle"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Atelier_Ryza.exe
  Version: 
  Date   : 2022-11-12
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_BATTLE_END_HP,Atelier_Ryza.exe,44 89 44 81 0C) // should be unique
alloc(newmem,$1000,INJECT_BATTLE_END_HP)

label(code)
label(return)

newmem:
  cmp eax, 0
  jne code
  push rbx
  mov ebx, [rcx+rax*4+0C+100]
  mov r8d, ebx
  pop rbx

code:
  mov [rcx+rax*4+0C],r8d
  jmp return

INJECT_BATTLE_END_HP:
  jmp newmem
return:
registersymbol(INJECT_BATTLE_END_HP)

[DISABLE]

INJECT_BATTLE_END_HP:
  db 44 89 44 81 0C

unregistersymbol(INJECT_BATTLE_END_HP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza.exe+3B7DA8

Atelier_Ryza.exe+3B7D8B: 7E 04                 - jle Atelier_Ryza.exe+3B7D91
Atelier_Ryza.exe+3B7D8D: 44 89 41 10           - mov [rcx+10],r8d
Atelier_Ryza.exe+3B7D91: 83 79 10 00           - cmp dword ptr [rcx+10],00
Atelier_Ryza.exe+3B7D95: 7D 07                 - jnl Atelier_Ryza.exe+3B7D9E
Atelier_Ryza.exe+3B7D97: C7 41 10 00 00 00 00  - mov [rcx+10],00000000
Atelier_Ryza.exe+3B7D9E: C3                    - ret 
Atelier_Ryza.exe+3B7D9F: CC                    - int 3 
Atelier_Ryza.exe+3B7DA0: 83 FA 5E              - cmp edx,5E
Atelier_Ryza.exe+3B7DA3: 77 48                 - ja Atelier_Ryza.exe+3B7DED
Atelier_Ryza.exe+3B7DA5: 48 63 C2              - movsxd  rax,edx
// ---------- INJECTING HERE ----------
Atelier_Ryza.exe+3B7DA8: 44 89 44 81 0C        - mov [rcx+rax*4+0C],r8d
// ---------- DONE INJECTING  ----------
Atelier_Ryza.exe+3B7DAD: 85 D2                 - test edx,edx
Atelier_Ryza.exe+3B7DAF: 74 21                 - je Atelier_Ryza.exe+3B7DD2
Atelier_Ryza.exe+3B7DB1: 83 FA 01              - cmp edx,01
Atelier_Ryza.exe+3B7DB4: 75 37                 - jne Atelier_Ryza.exe+3B7DED
Atelier_Ryza.exe+3B7DB6: 8B 81 10 01 00 00     - mov eax,[rcx+00000110]
Atelier_Ryza.exe+3B7DBC: 39 41 10              - cmp [rcx+10],eax
Atelier_Ryza.exe+3B7DBF: 7E 03                 - jle Atelier_Ryza.exe+3B7DC4
Atelier_Ryza.exe+3B7DC1: 89 41 10              - mov [rcx+10],eax
Atelier_Ryza.exe+3B7DC4: 83 79 10 00           - cmp dword ptr [rcx+10],00
Atelier_Ryza.exe+3B7DC8: 7D 23                 - jnl Atelier_Ryza.exe+3B7DED
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>39</ID>
      <Description>"+Battle scripts"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Battle: HP/MP"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Atelier_Ryza.exe
  Version: 
  Date   : 2022-11-12
  Author : bbfopx@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_BATTLE_HPMP,Atelier_Ryza.exe,42 8B AC A9 08 01 00 00) // should be unique
alloc(newmem,$1000,INJECT_BATTLE_HPMP)

label(code)
label(return)
label(i_battle_hp_option)
label(i_battle_mp_option)
label(vf_battle_hp_percent)
newmem:
  push r14
  mov r14d, [rcx+13C]
  cmp r14d, 1  /// player party = 1
  pop r14
  jne endp


check_hp:
  cmp r13, 1
  jne check_mp
  cmp dword ptr [i_battle_hp_option], 0
  je check_mp
check_hp1:  // keep %
  cmp dword ptr [i_battle_hp_option], 1
  jne check_hp2
  cvtsi2ss xmm15, [rcx+11C]
  vmovss xmm14, [vf_battle_hp_percent]
  vmulss xmm15, xmm15, xmm14
  cvtss2si ebp, xmm15
  cmp ebp, [rcx+10C]
  jbe check_mp
  mov [rcx+10C], ebp

check_hp2:  // full
  cmp dword ptr [i_battle_hp_option], 2
  jne code
  mov ebp, [rcx+11C]  //118+4
  mov [rcx+10C], ebp  //108+4

  jmp endp
check_mp:
  cmp r13, 3
  jne endp
  cmp dword ptr [i_battle_mp_option], 1
  jne endp
  mov ebp, [rcx+118]
  mov [rcx+114], ebp


endp:

code:
  mov ebp,[rcx+r13*4+00000108]
  jmp return
align 10 cc
  i_battle_hp_option: // 0:None, 1: Keep at least nn%, 2:Full
  dd 1
  i_battle_mp_option: // 0:None, 1:always full
  dd 1
  vf_06:
  dd (float)0.6
  vf_battle_hp_percent:
  dd (float)0.6

INJECT_BATTLE_HPMP:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_BATTLE_HPMP)
registersymbol(i_battle_hp_option)
registersymbol(i_battle_mp_option)
registersymbol(vf_battle_hp_percent)
[DISABLE]

INJECT_BATTLE_HPMP:
  db 42 8B AC A9 08 01 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza.exe+21E3A1

Atelier_Ryza.exe+21E38D: CC                       - int 3 
Atelier_Ryza.exe+21E38E: CC                       - int 3 
Atelier_Ryza.exe+21E38F: CC                       - int 3 
Atelier_Ryza.exe+21E390: 4C 8B DC                 - mov r11,rsp
Atelier_Ryza.exe+21E393: 55                       - push rbp
Atelier_Ryza.exe+21E394: 56                       - push rsi
Atelier_Ryza.exe+21E395: 41 55                    - push r13
Atelier_Ryza.exe+21E397: 48 83 EC 50              - sub rsp,50
Atelier_Ryza.exe+21E39B: 4C 63 EA                 - movsxd  r13,edx
Atelier_Ryza.exe+21E39E: 48 8B F1                 - mov rsi,rcx
// ---------- INJECTING HERE ----------
Atelier_Ryza.exe+21E3A1: 42 8B AC A9 08 01 00 00  - mov ebp,[rcx+r13*4+00000108]
// ---------- DONE INJECTING  ----------
Atelier_Ryza.exe+21E3A9: 41 8D 45 F9              - lea eax,[r13-07]
Atelier_Ryza.exe+21E3AD: 83 F8 02                 - cmp eax,02
Atelier_Ryza.exe+21E3B0: 0F 87 B3 02 00 00        - ja Atelier_Ryza.exe+21E669
Atelier_Ryza.exe+21E3B6: 48 8B 01                 - mov rax,[rcx]
Atelier_Ryza.exe+21E3B9: BA 83 00 00 00           - mov edx,00000083
Atelier_Ryza.exe+21E3BE: 49 89 5B 08              - mov [r11+08],rbx
Atelier_Ryza.exe+21E3C2: 49 89 7B 10              - mov [r11+10],rdi
Atelier_Ryza.exe+21E3C6: 4D 89 63 18              - mov [r11+18],r12
Atelier_Ryza.exe+21E3CA: 4D 89 73 E0              - mov [r11-20],r14
Atelier_Ryza.exe+21E3CE: 4D 89 7B D8              - mov [r11-28],r15
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>18</ID>
              <Description>"Player HP option"</Description>
              <DropDownList DisplayValueAsItem="1">0:None
1:Try to keep 60%
2:Try to keep full
</DropDownList>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>i_battle_hp_option</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>40</ID>
              <Description>"Min. HP % (for HP option 1)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>Float</VariableType>
              <Address>vf_battle_hp_percent</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>19</ID>
              <Description>"Player MP option"</Description>
              <DropDownList DisplayValueAsItem="1">0:None
1:Full
</DropDownList>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>i_battle_mp_option</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"Battle: AP increase multiplier"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Atelier_Ryza.exe
  Version: 
  Date   : 2022-11-12
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_BATTLE_AP_MULTI,Atelier_Ryza.exe,01 73 10 39 43 10) // should be unique
alloc(newmem,$1000,INJECT_BATTLE_AP_MULTI)

label(code)
label(return)
label(vf_battle_ap_multi)
label(i_base_battleinfo_addr)
newmem:
  mov [i_base_battleinfo_addr], rbx


  cvtsi2ss xmm15, esi
  vxorps xmm14, xmm14, xmm14
  vcomiss xmm15, xmm14
  jbe code


  vmovss xmm14, [vf_battle_ap_multi]
  vmulss xmm15, xmm15, xmm14
  cvtss2si esi, xmm15

code:
  add [rbx+10],esi
  cmp [rbx+10],eax
  jmp return
align 10 cc
  i_base_battleinfo_addr:
  dq 0
  vf_battle_ap_multi:
  dd (float)1.5


INJECT_BATTLE_AP_MULTI:
  jmp newmem
  nop
return:
registersymbol(INJECT_BATTLE_AP_MULTI)
registersymbol(vf_battle_ap_multi)
registersymbol(i_base_battleinfo_addr)

[DISABLE]

INJECT_BATTLE_AP_MULTI:
  db 01 73 10 39 43 10

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza.exe+8A66

Atelier_Ryza.exe+8A42: 8B D7                 - mov edx,edi
Atelier_Ryza.exe+8A44: 8B 69 10              - mov ebp,[rcx+10]
Atelier_Ryza.exe+8A47: 48 8D 0D 82 37 A3 00  - lea rcx,[Atelier_Ryza.exe+A3C1D0]
Atelier_Ryza.exe+8A4E: 48 89 74 24 38        - mov [rsp+38],rsi
Atelier_Ryza.exe+8A53: 8B 34 B9              - mov esi,[rcx+rdi*4]
Atelier_Ryza.exe+8A56: 44 8B CE              - mov r9d,esi
Atelier_Ryza.exe+8A59: 48 8B CB              - mov rcx,rbx
Atelier_Ryza.exe+8A5C: E8 4F 01 00 00        - call Atelier_Ryza.exe+8BB0
Atelier_Ryza.exe+8A61: 03 F0                 - add esi,eax
Atelier_Ryza.exe+8A63: 8B 43 14              - mov eax,[rbx+14]
// ---------- INJECTING HERE ----------
Atelier_Ryza.exe+8A66: 01 73 10              - add [rbx+10],esi
// ---------- DONE INJECTING  ----------
Atelier_Ryza.exe+8A69: 39 43 10              - cmp [rbx+10],eax
Atelier_Ryza.exe+8A6C: 7E 03                 - jle Atelier_Ryza.exe+8A71
Atelier_Ryza.exe+8A6E: 89 43 10              - mov [rbx+10],eax
Atelier_Ryza.exe+8A71: 83 7B 10 00           - cmp dword ptr [rbx+10],00
Atelier_Ryza.exe+8A75: 7D 07                 - jnl Atelier_Ryza.exe+8A7E
Atelier_Ryza.exe+8A77: C7 43 10 00 00 00 00  - mov [rbx+10],00000000
Atelier_Ryza.exe+8A7E: 48 8B 4B 20           - mov rcx,[rbx+20]
Atelier_Ryza.exe+8A82: E8 19 A1 45 00        - call Atelier_Ryza.exe+462BA0
Atelier_Ryza.exe+8A87: 48 8B 4B 28           - mov rcx,[rbx+28]
Atelier_Ryza.exe+8A8B: 44 8B C6              - mov r8d,esi
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>23</ID>
              <Description>"Multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>Float</VariableType>
              <Address>vf_battle_ap_multi</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>28</ID>
              <Description>"+Info"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>30</ID>
                  <Description>"Available during battle"</Description>
                  <Color>8000FF</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>24</ID>
                  <Description>"AP"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>FF8080</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>i_base_battleinfo_addr</Address>
                  <Offsets>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>25</ID>
                  <Description>"AP Limit"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>FF8080</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>i_base_battleinfo_addr</Address>
                  <Offsets>
                    <Offset>14</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>26</ID>
                  <Description>"Tactics Lv"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>FF8080</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>i_base_battleinfo_addr</Address>
                  <Offsets>
                    <Offset>6C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>27</ID>
                  <Description>"Tactics Lv"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>FF8080</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>i_base_battleinfo_addr</Address>
                  <Offsets>
                    <Offset>74</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Battle: AP decrease multiplier"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Atelier_Ryza.exe
  Version: 
  Date   : 2022-11-12
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_BATTLE_AP_DECREASE_MULTI,Atelier_Ryza.exe,29 51 10 8B 41 14) // should be unique
alloc(newmem,$1000,INJECT_BATTLE_AP_DECREASE_MULTI)

label(code)
label(return)
label(vf_battle_ap_dec_multi)

newmem:
  vmovss xmm14, [vf_battle_ap_dec_multi]
  cvtsi2ss xmm15, edx
  vmulss xmm15, xmm15, xmm14
  vcvtss2si edx, xmm15

code:
  sub [rcx+10],edx
  mov eax,[rcx+14]
  jmp return
align 10 cc
  vf_battle_ap_dec_multi:
  dd (float)0.5

INJECT_BATTLE_AP_DECREASE_MULTI:
  jmp newmem
  nop
return:
registersymbol(INJECT_BATTLE_AP_DECREASE_MULTI)
registersymbol(vf_battle_ap_dec_multi)

[DISABLE]

INJECT_BATTLE_AP_DECREASE_MULTI:
  db 29 51 10 8B 41 14

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza.exe+8B56

Atelier_Ryza.exe+8B48: C3                    - ret 
Atelier_Ryza.exe+8B49: CC                    - int 3 
Atelier_Ryza.exe+8B4A: CC                    - int 3 
Atelier_Ryza.exe+8B4B: CC                    - int 3 
Atelier_Ryza.exe+8B4C: CC                    - int 3 
Atelier_Ryza.exe+8B4D: CC                    - int 3 
Atelier_Ryza.exe+8B4E: CC                    - int 3 
Atelier_Ryza.exe+8B4F: CC                    - int 3 
Atelier_Ryza.exe+8B50: 80 79 18 00           - cmp byte ptr [rcx+18],00
Atelier_Ryza.exe+8B54: 74 24                 - je Atelier_Ryza.exe+8B7A
// ---------- INJECTING HERE ----------
Atelier_Ryza.exe+8B56: 29 51 10              - sub [rcx+10],edx
// ---------- DONE INJECTING  ----------
Atelier_Ryza.exe+8B59: 8B 41 14              - mov eax,[rcx+14]
Atelier_Ryza.exe+8B5C: 39 41 10              - cmp [rcx+10],eax
Atelier_Ryza.exe+8B5F: 7E 03                 - jle Atelier_Ryza.exe+8B64
Atelier_Ryza.exe+8B61: 89 41 10              - mov [rcx+10],eax
Atelier_Ryza.exe+8B64: 83 79 10 00           - cmp dword ptr [rcx+10],00
Atelier_Ryza.exe+8B68: 7D 07                 - jnl Atelier_Ryza.exe+8B71
Atelier_Ryza.exe+8B6A: C7 41 10 00 00 00 00  - mov [rcx+10],00000000
Atelier_Ryza.exe+8B71: 48 8B 49 20           - mov rcx,[rcx+20]
Atelier_Ryza.exe+8B75: E9 26 A0 45 00        - jmp Atelier_Ryza.exe+462BA0
Atelier_Ryza.exe+8B7A: C3                    - ret 
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>32</ID>
              <Description>"Multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>Float</VariableType>
              <Address>vf_battle_ap_dec_multi</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"Battle: Cole multiplier"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Atelier_Ryza.exe
  Version: 
  Date   : 2022-11-12
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_BATTLE_COLE_MULTI,Atelier_Ryza.exe,8B D1 8B D9 85 C9) // should be unique
alloc(newmem,$1000,INJECT_BATTLE_COLE_MULTI)

label(code)
label(return)
label(vf_battle_cole_multi)

newmem:
  cvtsi2ss xmm15, ecx
  vmovss xmm14, [vf_battle_cole_multi]
  vmulss xmm15, xmm15, xmm14
  vcvtss2si ecx, xmm15

code:
  mov edx,ecx
  mov ebx,ecx
  test ecx,ecx
  jmp return
align 10 cc
  vf_battle_cole_multi:
  dd (float)1.5


INJECT_BATTLE_COLE_MULTI:
  jmp newmem
  nop
return:
registersymbol(INJECT_BATTLE_COLE_MULTI)
registersymbol(vf_battle_cole_multi)

[DISABLE]

INJECT_BATTLE_COLE_MULTI:
  db 8B D1 8B D9 85 C9

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza.exe+41BA8D

Atelier_Ryza.exe+41BA7A: CC                    - int 3 
Atelier_Ryza.exe+41BA7B: CC                    - int 3 
Atelier_Ryza.exe+41BA7C: CC                    - int 3 
Atelier_Ryza.exe+41BA7D: CC                    - int 3 
Atelier_Ryza.exe+41BA7E: CC                    - int 3 
Atelier_Ryza.exe+41BA7F: CC                    - int 3 
Atelier_Ryza.exe+41BA80: 48 89 5C 24 08        - mov [rsp+08],rbx
Atelier_Ryza.exe+41BA85: 57                    - push rdi
Atelier_Ryza.exe+41BA86: 48 83 EC 20           - sub rsp,20
Atelier_Ryza.exe+41BA8A: 0F B6 FA              - movzx edi,dl
// ---------- INJECTING HERE ----------
Atelier_Ryza.exe+41BA8D: 8B D1                 - mov edx,ecx
// ---------- DONE INJECTING  ----------
Atelier_Ryza.exe+41BA8F: 8B D9                 - mov ebx,ecx
Atelier_Ryza.exe+41BA91: 85 C9                 - test ecx,ecx
Atelier_Ryza.exe+41BA93: 7E 2D                 - jle Atelier_Ryza.exe+41BAC2
Atelier_Ryza.exe+41BA95: 44 8B 05 FC 16 06 01  - mov r8d,[Atelier_Ryza.exe+147D198]
Atelier_Ryza.exe+41BA9C: 41 BA 3F 42 0F 00     - mov r10d,000F423F
Atelier_Ryza.exe+41BAA2: 44 2B D1              - sub r10d,ecx
Atelier_Ryza.exe+41BAA5: B8 3F 42 0F 00        - mov eax,000F423F
Atelier_Ryza.exe+41BAAA: 45 3B C2              - cmp r8d,r10d
Atelier_Ryza.exe+41BAAD: 46 8D 0C 01           - lea r9d,[rcx+r8]
Atelier_Ryza.exe+41BAB1: B9 09 00 00 00        - mov ecx,00000009
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>35</ID>
              <Description>"Multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>Float</VariableType>
              <Address>vf_battle_cole_multi</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"Battle: EXP multiplier"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Atelier_Ryza.exe
  Version: 
  Date   : 2022-11-12
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_BATTLE_EXP_MULTI,Atelier_Ryza.exe,01 51 08 48 8B D9) // should be unique
alloc(newmem,$1000,INJECT_BATTLE_EXP_MULTI)

label(code)
label(return)
label(vf_battle_exp_multi)

newmem:
  cvtsi2ss xmm15, edx
  vmovss xmm14, [vf_battle_exp_multi]
  vmulss xmm15, xmm15, xmm14
  vcvtss2si edx, xmm15

code:
  add [rcx+08],edx
  mov rbx,rcx
  jmp return
align 10 cc
  vf_battle_exp_multi:
  dd (float)1.15

INJECT_BATTLE_EXP_MULTI:
  jmp newmem
  nop
return:
registersymbol(INJECT_BATTLE_EXP_MULTI)
registersymbol(vf_battle_exp_multi)
[DISABLE]

INJECT_BATTLE_EXP_MULTI:
  db 01 51 08 48 8B D9

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza.exe+3B50E6

Atelier_Ryza.exe+3B50CC: 2B C2              - sub eax,edx
Atelier_Ryza.exe+3B50CE: 44 3B C0           - cmp r8d,eax
Atelier_Ryza.exe+3B50D1: 7F 0A              - jg Atelier_Ryza.exe+3B50DD
Atelier_Ryza.exe+3B50D3: 41 8D 04 10        - lea eax,[r8+rdx]
Atelier_Ryza.exe+3B50D7: 89 81 A0 03 00 00  - mov [rcx+000003A0],eax
Atelier_Ryza.exe+3B50DD: C3                 - ret 
Atelier_Ryza.exe+3B50DE: CC                 - int 3 
Atelier_Ryza.exe+3B50DF: CC                 - int 3 
Atelier_Ryza.exe+3B50E0: 40 53              - push rbx
Atelier_Ryza.exe+3B50E2: 48 83 EC 20        - sub rsp,20
// ---------- INJECTING HERE ----------
Atelier_Ryza.exe+3B50E6: 01 51 08           - add [rcx+08],edx
// ---------- DONE INJECTING  ----------
Atelier_Ryza.exe+3B50E9: 48 8B D9           - mov rbx,rcx
Atelier_Ryza.exe+3B50EC: E8 8F FA F6 FF     - call Atelier_Ryza.exe+324B80
Atelier_Ryza.exe+3B50F1: 8B D0              - mov edx,eax
Atelier_Ryza.exe+3B50F3: 33 C9              - xor ecx,ecx
Atelier_Ryza.exe+3B50F5: E8 96 FA F6 FF     - call Atelier_Ryza.exe+324B90
Atelier_Ryza.exe+3B50FA: 83 F8 FF           - cmp eax,-01
Atelier_Ryza.exe+3B50FD: 74 08              - je Atelier_Ryza.exe+3B5107
Atelier_Ryza.exe+3B50FF: 3B 43 08           - cmp eax,[rbx+08]
Atelier_Ryza.exe+3B5102: 7D 03              - jnl Atelier_Ryza.exe+3B5107
Atelier_Ryza.exe+3B5104: 89 43 08           - mov [rbx+08],eax
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>38</ID>
              <Description>"Multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>Float</VariableType>
              <Address>vf_battle_exp_multi</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>29</ID>
      <Description>"_Debug"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Get container / basket size &amp; addr (open basket or container)"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Atelier_Ryza.exe
  Version: 
  Date   : 2022-11-12
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_BASKET_ADDR,Atelier_Ryza.exe,8B 4B 0C 2B C8) // should be unique
alloc(newmem,$1000,INJECT_GET_BASKET_ADDR)

label(code)
label(return)
label(i_basket_addr)
newmem:
  mov [i_basket_addr], rbx

code:
  mov ecx,[rbx+0C]
  sub ecx,eax
  jmp return
align 10 cc
  i_basket_addr:
  dq 0


INJECT_GET_BASKET_ADDR:
  jmp newmem
return:
registersymbol(INJECT_GET_BASKET_ADDR)
registersymbol(i_basket_addr)
[DISABLE]

INJECT_GET_BASKET_ADDR:
  db 8B 4B 0C 2B C8

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza.exe+1798FF

Atelier_Ryza.exe+1798E8: 48 03 41 18     - add rax,[rcx+18]
Atelier_Ryza.exe+1798EC: C3              - ret 
Atelier_Ryza.exe+1798ED: CC              - int 3 
Atelier_Ryza.exe+1798EE: CC              - int 3 
Atelier_Ryza.exe+1798EF: CC              - int 3 
Atelier_Ryza.exe+1798F0: 40 53           - push rbx
Atelier_Ryza.exe+1798F2: 48 83 EC 20     - sub rsp,20
Atelier_Ryza.exe+1798F6: 48 8B 01        - mov rax,[rcx]
Atelier_Ryza.exe+1798F9: 48 8B D9        - mov rbx,rcx
Atelier_Ryza.exe+1798FC: FF 50 10        - call qword ptr [rax+10]
// ---------- INJECTING HERE ----------
Atelier_Ryza.exe+1798FF: 8B 4B 0C        - mov ecx,[rbx+0C]
// ---------- DONE INJECTING  ----------
Atelier_Ryza.exe+179902: 2B C8           - sub ecx,eax
Atelier_Ryza.exe+179904: 8B C1           - mov eax,ecx
Atelier_Ryza.exe+179906: 48 83 C4 20     - add rsp,20
Atelier_Ryza.exe+17990A: 5B              - pop rbx
Atelier_Ryza.exe+17990B: C3              - ret 
Atelier_Ryza.exe+17990C: CC              - int 3 
Atelier_Ryza.exe+17990D: CC              - int 3 
Atelier_Ryza.exe+17990E: CC              - int 3 
Atelier_Ryza.exe+17990F: CC              - int 3 
Atelier_Ryza.exe+179910: 48 89 5C 24 08  - mov [rsp+08],rbx
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>12</ID>
              <Description>"Addr."</Description>
              <ShowAsHex>1</ShowAsHex>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808080</Color>
              <VariableType>8 Bytes</VariableType>
              <Address>i_basket_addr</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>13</ID>
              <Description>"Size"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>i_basket_addr</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Ryza HP"</Description>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>Atelier_Ryza.exe+147D22C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"Ryza EXP"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>Atelier_Ryza.exe+147D228 </Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>41</ID>
      <Description>"Atelier Ryza 1.08  /  https://opencheattables.com  /  CE 7.4+"</Description>
      <Color>400080</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>MaxContainerCount = 9999
MaxBasketCount = 200

g_containerBaseAddress = nil

--print(MaxBasketCount)

--local dynBasketAddress = getAddressSafe("Atelier_Sophie_2.exe")+0x188574C
--MaxBasketCount = readSmallInteger(dynBasketAddress)
--print(MaxBasketCount)

ItemRecordSize = 44

--lua scripts that table checkbox will not be checked with "NO_ACTIVATE" in comment
function onMemRecPostExecute(memoryrecord, newState, succeeded )
    if memoryrecord.Type == vtAutoAssembler and memoryrecord.Script:find("NO_ACTIVATE") and newState and succeeded then
        memoryrecord.disableWithoutExecute()
    end
end

--memory record IDs now allowed to be 'locked'
IDs = {999999999,999999,
       }

--determine event trigger sequence


function contains(table, val)
   local i = 0
   for i=1, #table do
      if table[i] == val then
         return true
      end
   end
   return false
end


function onMemRecPreExecute(memoryrecord, newstate)
    if contains(IDs, memoryrecord.ID) and newstate then
	    memoryrecord.OnActivate = function(memoryrecord, before, currentstate)
		    return false
	    end
    end
end

function AOBScanModule(moduleName, signature, aobSignaturePrivileges, alignmentType, alignmentParam)
	--checkArgType(moduleName, 1, 'string')
	if not signature or not moduleName then return end
	index = index or 1
	local modStartAddr = getAddress(moduleName)
	local modEndAddr = modStartAddr + getModuleSize(moduleName)
	local ms = createMemScan()
	if type(signature) == 'table' then
		local sig = ''
		for i, byte in ipairs(signature) do
			sig = sig..string.format('%02X', byte)
		end
		signature = sig
	end
	ms.firstScan(soExactValue, vtByteArray, nil, signature, nil, modStartAddr, modEndAddr,
				 aobSignaturePrivileges, alignmentType, alignmentParam, true, true, false, false)
	ms.waitTillDone()
	local results = createFoundList(ms)
	results.initialize()
	ms.destroy()
	return results
end
registerLuaFunctionHighlight('AOBScanModule')



AddressList.Header.OnSectionClick = nil
</LuaScript>
</CheatTable>
