<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="42">
  <CheatEntries>
    <CheatEntry>
      <ID>33</ID>
      <Description>"Compact Mode"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
--https://forum.cheatengine.org/viewtopic.php?t=570055
LuaCall(function cycleFullCompact(sender,force) local state = not(compactmenuitem.Caption == 'Compact View Mode'); if force~=nil then state = not force end; compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'; getMainForm().Splitter1.Visible = state; getMainForm().Panel4.Visible    = state; getMainForm().Panel5.Visible    = state; end; function addCompactMenu() if compactmenualreadyexists then return end; local parent = getMainForm().Menu.Items; compactmenuitem = createMenuItem(parent); parent.add(compactmenuitem); compactmenuitem.Caption = 'Compact View Mode'; compactmenuitem.OnClick = cycleFullCompact; compactmenualreadyexists = 'yes'; end; addCompactMenu(); cycleFullCompact(nil,true))

[DISABLE]
LuaCall(cycleFullCompact(nil,false))
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>146</ID>
      <Description>"一次開啟/關閉多個修改器/ Turn most scripts On / Off"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version:
  Date   : 2022-08-20
  Author : bbfox@https://opencheattables.com
}

[ENABLE]
{$lua}
if (syntaxcheck) then return end
if memrec then print(memrec.Description) end
getLuaEngine().menuItem5.doClick()

battle_array = {98, 22, 92, 3, 7, 72, 63, 57, 65, 66, 27, 53, 29, 78, 75, 1, 31, 33, }

local a_len = #(battle_array)

local i = 0

for i = 1, a_len do
  getAddressList().getMemoryRecordByID(battle_array[i]).Active = true
end
getLuaEngine().Close()

[DISABLE]
{$lua}
if (syntaxcheck) then return end
if memrec then print(memrec.Description) end
getLuaEngine().menuItem5.doClick()

local a_len_d = #(battle_array)

local i1 = 0

for i1 = 1, a_len_d do
  if (getAddressList().getMemoryRecordByID(battle_array[i1]).Active)
  then
    getAddressList().getMemoryRecordByID(battle_array[i1]).Active = false
  end
end
getLuaEngine().Close()



</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>98</ID>
      <Description>"取得LGC數值(開啟資訊選單) / Get LGC value (Info menu)"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version:
  Date   : 2023-01-27
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_LGC_RAW,$process,41 8B BE 48 11 01 00) // should be unique
alloc(newmem,$1000,INJECT_GET_LGC_RAW)

label(code)
label(return)
label(i_base_lgc_raw_addr)

newmem:
  mov [i_base_lgc_raw_addr] ,r14

code:
  mov edi,[r14+00011148]
  jmp return
align 10 cc
  i_base_lgc_raw_addr:
  dq 0


INJECT_GET_LGC_RAW:
  jmp newmem
  nop 2
return:
registersymbol(INJECT_GET_LGC_RAW)
registersymbol(i_base_lgc_raw_addr)
[DISABLE]

INJECT_GET_LGC_RAW:
  db 41 8B BE 48 11 01 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+4B8EF8

ed9.exe+4B8EC7: 48 8B 05 CA 12 4E 00     - mov rax,[ed9.exe+99A198]
ed9.exe+4B8ECE: 48 33 C4                 - xor rax,rsp
ed9.exe+4B8ED1: 48 89 84 24 08 02 00 00  - mov [rsp+00000208],rax
ed9.exe+4B8ED9: 4C 8B 35 F8 09 51 00     - mov r14,[ed9.exe+9C98D8]
ed9.exe+4B8EE0: 48 8B F1                 - mov rsi,rcx
ed9.exe+4B8EE3: 48 8B 05 7E 09 51 00     - mov rax,[ed9.exe+9C9868]
ed9.exe+4B8EEA: 45 8B E8                 - mov r13d,r8d
ed9.exe+4B8EED: 48 89 11                 - mov [rcx],rdx
ed9.exe+4B8EF0: 4C 8B FA                 - mov r15,rdx
ed9.exe+4B8EF3: 44 89 4C 24 44           - mov [rsp+44],r9d
// ---------- INJECTING HERE ----------
ed9.exe+4B8EF8: 41 8B BE 48 11 01 00     - mov edi,[r14+00011148]
// ---------- DONE INJECTING  ----------
ed9.exe+4B8EFF: 8B DF                    - mov ebx,edi
ed9.exe+4B8F01: 48 8B 88 90 01 00 00     - mov rcx,[rax+00000190]
ed9.exe+4B8F08: C1 EB 1E                 - shr ebx,1E
ed9.exe+4B8F0B: 48 8B 69 08              - mov rbp,[rcx+08]
ed9.exe+4B8F0F: 83 FB 01                 - cmp ebx,01
ed9.exe+4B8F12: 75 0E                    - jne ed9.exe+4B8F22
ed9.exe+4B8F14: 44 8D 04 BD 00 00 00 00  - lea r8d,[rdi*4+00000000]
ed9.exe+4B8F1C: 41 C1 F8 02              - sar r8d,02
ed9.exe+4B8F20: EB 1C                    - jmp ed9.exe+4B8F3E
ed9.exe+4B8F22: 83 FB 02                 - cmp ebx,02
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>105</ID>
          <Description>"Law"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_lgc_raw_addr</Address>
          <Offsets>
            <Offset>11144</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>183</ID>
              <Description>"Law value enabled?"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:No
16384:Yes
</DropDownList>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>i_base_lgc_raw_addr</Address>
              <Offsets>
                <Offset>11146</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>100</ID>
          <Description>"Gray"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_lgc_raw_addr</Address>
          <Offsets>
            <Offset>11148</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>184</ID>
              <Description>"Enabled?"</Description>
              <DropDownListLink>Law value enabled?</DropDownListLink>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>i_base_lgc_raw_addr</Address>
              <Offsets>
                <Offset>1114A</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>101</ID>
          <Description>"Chaos"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_lgc_raw_addr</Address>
          <Offsets>
            <Offset>11150</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>185</ID>
              <Description>"Enabled?"</Description>
              <DropDownListLink>Law value enabled?</DropDownListLink>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>i_base_lgc_raw_addr</Address>
              <Offsets>
                <Offset>11152</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>112</ID>
          <Description>"Year"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_lgc_raw_addr</Address>
          <Offsets>
            <Offset>11168</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>113</ID>
          <Description>"Month"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_lgc_raw_addr</Address>
          <Offsets>
            <Offset>1116C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>114</ID>
          <Description>"Day"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_lgc_raw_addr</Address>
          <Offsets>
            <Offset>11170</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>115</ID>
          <Description>"Day of Week"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_lgc_raw_addr</Address>
          <Offsets>
            <Offset>11174</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>196</ID>
          <Description>"+Others"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>117</ID>
              <Description>"SP (read only)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>i_base_lgc_raw_addr</Address>
              <Offsets>
                <Offset>11178</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>145</ID>
              <Description>"??"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>i_base_lgc_raw_addr</Address>
              <Offsets>
                <Offset>11154</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>186</ID>
                  <Description>"Enabled?"</Description>
                  <DropDownListLink>Law value enabled?</DropDownListLink>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>FF8080</Color>
                  <VariableType>2 Bytes</VariableType>
                  <Address>i_base_lgc_raw_addr</Address>
                  <Offsets>
                    <Offset>11156</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>188</ID>
              <Description>"??"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>i_base_lgc_raw_addr</Address>
              <Offsets>
                <Offset>11158</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>189</ID>
                  <Description>"Enabled?"</Description>
                  <DropDownListLink>Law value enabled?</DropDownListLink>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>FF8080</Color>
                  <VariableType>2 Bytes</VariableType>
                  <Address>i_base_lgc_raw_addr</Address>
                  <Offsets>
                    <Offset>1115A</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>190</ID>
              <Description>"??"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>i_base_lgc_raw_addr</Address>
              <Offsets>
                <Offset>1115C</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>191</ID>
                  <Description>"Enabled?"</Description>
                  <DropDownListLink>Law value enabled?</DropDownListLink>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>FF8080</Color>
                  <VariableType>2 Bytes</VariableType>
                  <Address>i_base_lgc_raw_addr</Address>
                  <Offsets>
                    <Offset>1115E</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>192</ID>
              <Description>"??"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>i_base_lgc_raw_addr</Address>
              <Offsets>
                <Offset>11160</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>193</ID>
                  <Description>"Enabled?"</Description>
                  <DropDownListLink>Law value enabled?</DropDownListLink>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>FF8080</Color>
                  <VariableType>2 Bytes</VariableType>
                  <Address>i_base_lgc_raw_addr</Address>
                  <Offsets>
                    <Offset>11162</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>194</ID>
              <Description>"??"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>i_base_lgc_raw_addr</Address>
              <Offsets>
                <Offset>11164</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>195</ID>
                  <Description>"Enabled?"</Description>
                  <DropDownListLink>Law value enabled?</DropDownListLink>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>FF8080</Color>
                  <VariableType>2 Bytes</VariableType>
                  <Address>i_base_lgc_raw_addr</Address>
                  <Offsets>
                    <Offset>11166</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>119</ID>
              <Description>"??"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>i_base_lgc_raw_addr</Address>
              <Offsets>
                <Offset>11138</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>120</ID>
              <Description>"??"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>i_base_lgc_raw_addr</Address>
              <Offsets>
                <Offset>1113C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>187</ID>
              <Description>"??"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>i_base_lgc_raw_addr</Address>
              <Offsets>
                <Offset>11140</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>156</ID>
      <Description>"部份基本資料 (開啟選單) / Base data (Usage: open menu)"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version: 
  Date   : 2023-01-26
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_MIRA,$process,8B B0 E8 0C 27 00) // should be unique
alloc(newmem,$1000,INJECT_GET_MIRA)

label(code)
label(return)
label(i_base_mira_addr)

newmem:
  mov [i_base_mira_addr], rax

code:
  mov esi,[rax+00270CE8]
  jmp return
align 10 cc
  i_base_mira_addr:
  dq 0

INJECT_GET_MIRA:
  jmp newmem
  nop
return:
registersymbol(INJECT_GET_MIRA)
registersymbol(i_base_mira_addr)
[DISABLE]

INJECT_GET_MIRA:
  db 8B B0 E8 0C 27 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+146C87

ed9.exe+146C60: 48 8B 05 61 2C 88 00              - mov rax,[ed9.exe+9C98C8]
ed9.exe+146C67: 44 8B 04 06                       - mov r8d,[rsi+rax]
ed9.exe+146C6B: 8B D7                             - mov edx,edi
ed9.exe+146C6D: 48 8B CB                          - mov rcx,rbx
ed9.exe+146C70: E8 1B 9C 00 00                    - call ed9.exe+150890
ed9.exe+146C75: FF C7                             - inc edi
ed9.exe+146C77: 48 8D 76 04                       - lea rsi,[rsi+04]
ed9.exe+146C7B: 83 FF 08                          - cmp edi,08
ed9.exe+146C7E: 72 E0                             - jb ed9.exe+146C60
ed9.exe+146C80: 48 8B 05 41 2C 88 00              - mov rax,[ed9.exe+9C98C8]
// ---------- INJECTING HERE ----------
ed9.exe+146C87: 8B B0 E8 0C 27 00                 - mov esi,[rax+00270CE8]
// ---------- DONE INJECTING  ----------
ed9.exe+146C8D: 48 8B 03                          - mov rax,[rbx]
ed9.exe+146C90: 48 8B 80 A0 00 00 00              - mov rax,[rax+000000A0]
ed9.exe+146C97: 4C 8B 90 40 02 00 00              - mov r10,[rax+00000240]
ed9.exe+146C9E: 48 8B 80 48 02 00 00              - mov rax,[rax+00000248]
ed9.exe+146CA5: 4D 8D 1C C2                       - lea r11,[r10+rax*8]
ed9.exe+146CA9: 4C 8D 35 D4 F4 77 00              - lea r14,[ed9.exe+8C6184]
ed9.exe+146CB0: 4D 3B D3                          - cmp r10,r11
ed9.exe+146CB3: 74 31                             - je ed9.exe+146CE6
ed9.exe+146CB5: 66 66 66 0F 1F 84 00 00 00 00 00  - nop word ptr [rax+rax+00000000]
ed9.exe+146CC0: 41 B1 01                          - mov r9l,01
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>158</ID>
          <Description>"地 / Earth"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_mira_addr</Address>
          <Offsets>
            <Offset>270CC8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>166</ID>
          <Description>"水 / Water"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_mira_addr</Address>
          <Offsets>
            <Offset>270CCC</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>165</ID>
          <Description>"火 / Fire"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_mira_addr</Address>
          <Offsets>
            <Offset>270CD0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>164</ID>
          <Description>"風 / Wind"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_mira_addr</Address>
          <Offsets>
            <Offset>270CD4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>163</ID>
          <Description>"時 / Time"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_mira_addr</Address>
          <Offsets>
            <Offset>270CD8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>162</ID>
          <Description>"空 / Space"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_mira_addr</Address>
          <Offsets>
            <Offset>270CDC</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>161</ID>
          <Description>"幻 / Mirage"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_mira_addr</Address>
          <Offsets>
            <Offset>270CE0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>160</ID>
          <Description>"耀金石塊 /  Exchange"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_mira_addr</Address>
          <Offsets>
            <Offset>270CE4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>157</ID>
          <Description>"米拉 / Mira"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_mira_addr</Address>
          <Offsets>
            <Offset>270CE8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>159</ID>
          <Description>"S-Token"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_mira_addr</Address>
          <Offsets>
            <Offset>270CEC</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>167</ID>
          <Description>"Gourmet Point"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_mira_addr</Address>
          <Offsets>
            <Offset>270CF8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>168</ID>
          <Description>"遊戲時間 / Playing time"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>808080</Color>
          <VariableType>Double</VariableType>
          <Address>i_base_mira_addr</Address>
          <Offsets>
            <Offset>270D00</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>22</ID>
      <Description>"HP/EP/CP (受傷害時 / when get hit)"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version:
  Date   : 2023-01-27
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_DMG_CTRL,$process,41 89 52 0C C3) // should be unique
alloc(newmem,$1000,INJECT_DMG_CTRL)

label(code)
label(return)
label(is_cp_full)
label(is_ep_full)
label(is_hp_full)
label(is_1hk)
label(i_last_orig_value)
label(i_last_new_value)
label(vf_damage_multi)
label(i_char_id_threshold)

newmem:
  push rax
  //mov eax, [r10]
  //cmp eax, dword ptr [i_char_id_threshold]
  //ja to_enemy

  // may check +44: 1 = player
  mov eax, [r10+44]
  test eax, eax
  jz to_enemy

  mov eax, [r10+78]
  test eax, eax
  jnz to_enemy

  //mov eax, [r10+74]
  //test eax, eax
  //jnz to_enemy

  mov eax, [r10+0C]
  cmp edx, eax
  jae endp

  mov [i_last_orig_value], edx

check_ep:
  cmp dword ptr [is_ep_full], 1
  jne check_cp
  mov eax, [r10+18]
  mov [r10+14], eax

check_cp:
  cmp dword ptr [is_cp_full], 1
  jne check_hp
  mov eax, [r10+20]
  mov [r10+1C], eax

check_hp:
  cmp dword ptr [is_hp_full], 0
  je endp
  cmp dword ptr [is_hp_full], 1
  jne check_hp2
  mov edx, [r10+10]
  jmp endp

check_hp2:
  cmp dword ptr [is_hp_full], 2
  jne check_hp3
  vmovss xmm12, [vf_0_5]
  jmp player_hp_calc

check_hp3:
  cmp dword ptr [is_hp_full], 3
  jne check_hp4
  vmovss xmm12, [vf_0_333]
  jmp player_hp_calc

check_hp4:
  cmp dword ptr [is_hp_full], 4
  jne check_hp5
  vmovss xmm12, [vf_0_125]
  jmp player_hp_calc

check_hp5:
  mov dword ptr [is_hp_full], 5
  vmovss xmm12, [vf_damage_multi]
  jmp player_hp_calc


player_hp_calc:
  cvtsi2ss xmm15, edx
  cvtsi2ss xmm14, [r10+0C]
  vsubss xmm13, xmm14, xmm15
  vmulss xmm13, xmm13, xmm12
  vaddss xmm15, xmm15, xmm13
  cvtss2si edx, xmm15
  mov [i_last_new_value], edx
  jmp endp

to_enemy:
  cmp dword ptr [is_1hk], 1
  jne to_enemy_chk2
  mov edx, 0
  jmp endp
to_enemy_chk2:
  cmp dword ptr [is_1hk], 2
  jne endp
  mov edx, #119600
  jmp endp

endp:
  pop rax

code:
  mov [r10+0C],edx
  ret 
  jmp return

align 10 cc
  is_cp_full:
  dd 1
  is_ep_full:
  dd 1
  is_hp_full: //0:None, 1:Full, 2:Half dmg, 3: 1/3 dmg, 4: 1/8 dmg, 5: By factor
  dd 5
  is_1hk:
  dd 0
  vf_damage_multi:
  dd (float)0.78
  vf_0_5:
  dd (float)0.5
  vf_0_333:
  dd (float)0.3333333333
  vf_0_125:
  dd (float)0.125
  vf_0_75:
  dd (float)0.75
  i_last_orig_value:
  dd 0
  i_last_new_value:
  dd 0
  i_char_id_threshold:
  dd 14

INJECT_DMG_CTRL:
  jmp newmem
return:
registersymbol(INJECT_DMG_CTRL)
registersymbol(is_cp_full)
registersymbol(is_ep_full)
registersymbol(is_hp_full)
registersymbol(is_1hk)
registersymbol(i_last_orig_value)
registersymbol(i_last_new_value)
registersymbol(vf_damage_multi)
registersymbol(i_char_id_threshold)
[DISABLE]

INJECT_DMG_CTRL:
  db 41 89 52 0C C3

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+F0665

ed9.exe+F0649: 41 89 42 0C  - mov [r10+0C],eax
ed9.exe+F064D: C3           - ret
ed9.exe+F064E: 41 8B 4A 0C  - mov ecx,[r10+0C]
ed9.exe+F0652: 41 8B 52 10  - mov edx,[r10+10]
ed9.exe+F0656: 41 03 CB     - add ecx,r11d
ed9.exe+F0659: 3B CA        - cmp ecx,edx
ed9.exe+F065B: 0F 4C D1     - cmovl edx,ecx
ed9.exe+F065E: 33 C9        - xor ecx,ecx
ed9.exe+F0660: 85 D2        - test edx,edx
ed9.exe+F0662: 0F 48 D1     - cmovs edx,ecx
// ---------- INJECTING HERE ----------
ed9.exe+F0665: 41 89 52 0C  - mov [r10+0C],edx
// ---------- DONE INJECTING  ----------
ed9.exe+F0669: C3           - ret
ed9.exe+F066A: 41 8B 42 18  - mov eax,[r10+18]
ed9.exe+F066E: 44 3B D8     - cmp r11d,eax
ed9.exe+F0671: 41 0F 4C C3  - cmovl eax,r11d
ed9.exe+F0675: 33 C9        - xor ecx,ecx
ed9.exe+F0677: 85 C0        - test eax,eax
ed9.exe+F0679: 0F 48 C1     - cmovs eax,ecx
ed9.exe+F067C: 41 89 42 14  - mov [r10+14],eax
ed9.exe+F0680: C3           - ret
ed9.exe+F0681: 41 8B 4A 14  - mov ecx,[r10+14]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>179</ID>
          <Description>"Char. ID threshold (low or equal = player)"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_id_threshold</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"Player"</Description>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>23</ID>
              <Description>"HP Option"</Description>
              <DropDownList DisplayValueAsItem="1">0:None
1:全滿 / Full
2:一半傷害 / Half damage
3:1/3 damage
4:1/8 damage
5:依下方倍率 / by factor below
</DropDownList>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>is_hp_full</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>108</ID>
                  <Description>"所受傷害倍率 / damage factor (if HP Option = 5)"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>C08000</Color>
                  <VariableType>Float</VariableType>
                  <Address>vf_damage_multi</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>24</ID>
              <Description>"EP全滿? / Full EP?"</Description>
              <DropDownList DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>is_ep_full</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>25</ID>
              <Description>"CP全滿? / Full CP?"</Description>
              <DropDownList DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>is_cp_full</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>107</ID>
              <Description>"原本HP / Orig. HP"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>i_last_orig_value</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>106</ID>
              <Description>"計算後HP / Calc HP"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>i_last_new_value</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>89</ID>
          <Description>"敵方 / Enemy"</Description>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>88</ID>
              <Description>"一擊必殺? / 1 hit kill?"</Description>
              <DropDownList DisplayValueAsItem="1">0:無 / No
1:一擊必殺 / 1HK
2:高血量 / High HP
</DropDownList>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>is_1hk</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>72</ID>
      <Description>"戰鬥中：快速CHAIN / Battle: fast chain"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version:
  Date   : 2023-01-27
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_BATT_FAST_CHAIN,$process,45 03 C6 B8 E7 03 00 00) // should be unique
alloc(newmem,$1000,INJECT_BATT_FAST_CHAIN)

label(code)
label(return)
label(i_chain_inc_no)

newmem:
  add r8d, [i_chain_inc_no]
code:
  add r8d,r14d
  mov eax,000003E7
  jmp return
align 10 cc
  i_chain_inc_no:
  dd 1
INJECT_BATT_FAST_CHAIN:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_BATT_FAST_CHAIN)
registersymbol(i_chain_inc_no)

[DISABLE]

INJECT_BATT_FAST_CHAIN:
  db 45 03 C6 B8 E7 03 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+12E6A4

ed9.exe+12E677: 48 8D 15 52 1A 79 00  - lea rdx,[ed9.exe+8C00D0]
ed9.exe+12E67E: 48 8D 4C 24 30        - lea rcx,[rsp+30]
ed9.exe+12E683: E8 A8 F6 F3 FF        - call ed9.exe+6DD30
ed9.exe+12E688: 90                    - nop
ed9.exe+12E689: C6 83 1D 04 00 00 01  - mov byte ptr [rbx+0000041D],01
ed9.exe+12E690: 48 8D 8B 60 03 00 00  - lea rcx,[rbx+00000360]
ed9.exe+12E697: 48 8B D0              - mov rdx,rax
ed9.exe+12E69A: E8 91 F8 F3 FF        - call ed9.exe+6DF30
ed9.exe+12E69F: 90                    - nop
ed9.exe+12E6A0: 44 8B 47 20           - mov r8d,[rdi+20]
// ---------- INJECTING HERE ----------
ed9.exe+12E6A4: 45 03 C6              - add r8d,r14d
// ---------- DONE INJECTING  ----------
ed9.exe+12E6A7: B8 E7 03 00 00        - mov eax,000003E7
ed9.exe+12E6AC: 44 3B C0              - cmp r8d,eax
ed9.exe+12E6AF: 44 0F 4F C0           - cmovg r8d,eax
ed9.exe+12E6B3: 44 89 47 20           - mov [rdi+20],r8d
ed9.exe+12E6B7: 48 8B 5F 10           - mov rbx,[rdi+10]
ed9.exe+12E6BB: C6 83 1D 04 00 00 01  - mov byte ptr [rbx+0000041D],01
ed9.exe+12E6C2: 48 8D 15 07 1A 79 00  - lea rdx,[ed9.exe+8C00D0]
ed9.exe+12E6C9: 48 8D 4C 24 30        - lea rcx,[rsp+30]
ed9.exe+12E6CE: E8 5D F6 F3 FF        - call ed9.exe+6DD30
ed9.exe+12E6D3: 90                    - nop
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>73</ID>
          <Description>"額外的CHAIN數"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_chain_inc_no</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>63</ID>
      <Description>"戰鬥中：S-Boost不減 / Battle: inf. S-Boost"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version:
  Date   : 2023-01-27
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_INF_SBOOST,$process,F3 0F 11 81 0C 01 00 00 0F 28) // should be unique
alloc(newmem,$1000,INJECT_INF_SBOOST)

label(code)
label(return)

newmem:
  movss xmm0,[rcx+00000108]

code:
  movss [rcx+0000010C],xmm0
  jmp return

INJECT_INF_SBOOST:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_INF_SBOOST)

[DISABLE]

INJECT_INF_SBOOST:
  db F3 0F 11 81 0C 01 00 00

unregistersymbol(INJECT_INF_SBOOST)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+5079D6

ed9.exe+5079B8: 48 89 74 24 38           - mov [rsp+38],rsi
ed9.exe+5079BD: 0F 28 C2                 - movaps xmm0,xmm2
ed9.exe+5079C0: F7 E2                    - mul edx
ed9.exe+5079C2: F3 0F 5C C1              - subss xmm0,xmm1
ed9.exe+5079C6: F3 0F 5F C3              - maxss xmm0,xmm3
ed9.exe+5079CA: 8B F2                    - mov esi,edx
ed9.exe+5079CC: C1 EE 05                 - shr esi,05
ed9.exe+5079CF: 0F 2E D0                 - ucomiss xmm2,xmm0
ed9.exe+5079D2: 7A 02                    - jp ed9.exe+5079D6
ed9.exe+5079D4: 74 12                    - je ed9.exe+5079E8
// ---------- INJECTING HERE ----------
ed9.exe+5079D6: F3 0F 11 81 0C 01 00 00  - movss [rcx+0000010C],xmm0
// ---------- DONE INJECTING  ----------
ed9.exe+5079DE: 0F 28 D0                 - movaps xmm2,xmm0
ed9.exe+5079E1: C6 81 10 01 00 00 01     - mov byte ptr [rcx+00000110],01
ed9.exe+5079E8: F3 48 0F 2C CA           - cvttss2si rcx,xmm2
ed9.exe+5079ED: B8 1F 85 EB 51           - mov eax,51EB851F
ed9.exe+5079F2: F7 E1                    - mul ecx
ed9.exe+5079F4: 8B DA                    - mov ebx,edx
ed9.exe+5079F6: C1 EB 05                 - shr ebx,05
ed9.exe+5079F9: 3B DE                    - cmp ebx,esi
ed9.exe+5079FB: 73 16                    - jae ed9.exe+507A13
ed9.exe+5079FD: 0F 1F 00                 - nop dword ptr [rax]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>57</ID>
      <Description>"戰鬥中：取得S-Boost值 / Battle: Get S-Boost"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version:
  Date   : 2023-01-27
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_SBOOST,$process,F3 0F 10 87 0C 01 00 00 E8) // should be unique
alloc(newmem,$1000,INJECT_GET_SBOOST)

label(code)
label(return)
label(i_base_sboost_addr)

newmem:
  mov [i_base_sboost_addr], rdi

code:
  movss xmm0,[rdi+0000010C]
  jmp return

align 10 cc
  i_base_sboost_addr:
  dq 0

INJECT_GET_SBOOST:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_GET_SBOOST)
registersymbol(i_base_sboost_addr)

[DISABLE]

INJECT_GET_SBOOST:
  db F3 0F 10 87 0C 01 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+506600

ed9.exe+5065CF: 0F 28 C1                 - movaps xmm0,xmm1
ed9.exe+5065D2: F3 0F 5C C2              - subss xmm0,xmm2
ed9.exe+5065D6: F3 0F 5D C8              - minss xmm1,xmm0
ed9.exe+5065DA: F3 0F 11 4C 24 20        - movss [rsp+20],xmm1
ed9.exe+5065E0: C7 44 24 24 00 00 80 3F  - mov [rsp+24],3F800000
ed9.exe+5065E8: C7 44 24 28 00 00 80 3F  - mov [rsp+28],3F800000
ed9.exe+5065F0: 45 33 C9                 - xor r9d,r9d
ed9.exe+5065F3: 0F 57 D2                 - xorps xmm2,xmm2
ed9.exe+5065F6: 48 8D 54 24 20           - lea rdx,[rsp+20]
ed9.exe+5065FB: E8 D0 6E 00 00           - call ed9.exe+50D4D0
// ---------- INJECTING HERE ----------
ed9.exe+506600: F3 0F 10 87 0C 01 00 00  - movss xmm0,[rdi+0000010C]
// ---------- DONE INJECTING  ----------
ed9.exe+506608: E8 2B D2 2E 00           - call ed9.exe+7F3838
ed9.exe+50660D: F3 0F 2C C8              - cvttss2si ecx,xmm0
ed9.exe+506611: B8 1F 85 EB 51           - mov eax,51EB851F
ed9.exe+506616: F7 E9                    - imul ecx
ed9.exe+506618: 8B EA                    - mov ebp,edx
ed9.exe+50661A: C1 FD 05                 - sar ebp,05
ed9.exe+50661D: 8B CD                    - mov ecx,ebp
ed9.exe+50661F: C1 E9 1F                 - shr ecx,1F
ed9.exe+506622: 03 E9                    - add ebp,ecx
ed9.exe+506624: F3 0F 10 87 08 01 00 00  - movss xmm0,[rdi+00000108]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>58</ID>
          <Description>"Base addr"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>808080</Color>
          <VariableType>8 Bytes</VariableType>
          <Address>i_base_sboost_addr</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>60</ID>
          <Description>"Max"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Float</VariableType>
          <Address>i_base_sboost_addr</Address>
          <Offsets>
            <Offset>108</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>61</ID>
          <Description>"Current"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Float</VariableType>
          <Address>i_base_sboost_addr</Address>
          <Offsets>
            <Offset>10C</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>200</ID>
      <Description>"戰鬥：Stun倍率 / Battle: Stun multiplier"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version: 
  Date   : 2023-01-27
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_STUN_MULTI,ed9.exe,F3 0F 58 C6 0F 28 CA) // should be unique
alloc(newmem,$1000,INJECT_STUN_MULTI)

label(code)
label(return)
label(vf_stun_multi)
newmem:
  vmovss xmm14, [vf_stun_multi]
  vmulss xmm6, xmm6, xmm14

code:
  addss xmm0,xmm6
  movaps xmm1,xmm2
  jmp return
align 10 cc
  vf_stun_multi:
  dd (float)3.3333333

INJECT_STUN_MULTI:
  jmp newmem
  nop 2
return:
registersymbol(INJECT_STUN_MULTI)
registersymbol(vf_stun_multi)
[DISABLE]

INJECT_STUN_MULTI:
  db F3 0F 58 C6 0F 28 CA

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+E1597

ed9.exe+E156D: F3 44 0F 11 44 24 30     - movss [rsp+30],xmm8
ed9.exe+E1574: 49 8B 0C 24              - mov rcx,[r12]
ed9.exe+E1578: 48 8D 44 24 30           - lea rax,[rsp+30]
ed9.exe+E157D: 45 84 ED                 - test r13l,r13l
ed9.exe+E1580: 48 0F 44 C7              - cmove rax,rdi
ed9.exe+E1584: F3 0F 10 51 78           - movss xmm2,[rcx+78]
ed9.exe+E1589: 44 0F 2F C2              - comiss xmm8,xmm2
ed9.exe+E158D: 73 64                    - jae ed9.exe+E15F3
ed9.exe+E158F: F3 0F 10 59 74           - movss xmm3,[rcx+74]
ed9.exe+E1594: 0F 28 C3                 - movaps xmm0,xmm3
// ---------- INJECTING HERE ----------
ed9.exe+E1597: F3 0F 58 C6              - addss xmm0,xmm6
// ---------- DONE INJECTING  ----------
ed9.exe+E159B: 0F 28 CA                 - movaps xmm1,xmm2
ed9.exe+E159E: F3 0F 5D C8              - minss xmm1,xmm0
ed9.exe+E15A2: 84 DB                    - test bl,bl
ed9.exe+E15A4: 74 10                    - je ed9.exe+E15B6
ed9.exe+E15A6: 0F 2F CA                 - comiss xmm1,xmm2
ed9.exe+E15A9: 72 0B                    - jb ed9.exe+E15B6
ed9.exe+E15AB: 0F 28 CA                 - movaps xmm1,xmm2
ed9.exe+E15AE: F3 0F 5C 0D 26 B7 81 00  - subss xmm1,[ed9.exe+8FCCDC]
ed9.exe+E15B6: 48 85 C0                 - test rax,rax
ed9.exe+E15B9: 74 11                    - je ed9.exe+E15CC
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>201</ID>
          <Description>"Multiplier"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>Float</VariableType>
          <Address>vf_stun_multi</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>65</ID>
      <Description>"即時戰鬥：快速蓄力 / Field battle: Fast charge"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version:
  Date   : 2023-01-27
  Author : bbfox@https://opencheattablesc.com
}

[ENABLE]

aobscanmodule(INJECT_FIELD_BATT_CHARGE_ATK,ed9.exe,F3 0F 11 83 70 03 00 00 48 8B CB) // should be unique
alloc(newmem,$1000,INJECT_FIELD_BATT_CHARGE_ATK)

label(code)
label(return)

newmem:
  vmovss xmm0, [vf_100]

code:
  movss [rbx+00000370],xmm0
  jmp return
align 10 cc
  vf_100:
  dd (float)100

INJECT_FIELD_BATT_CHARGE_ATK:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_FIELD_BATT_CHARGE_ATK)

[DISABLE]

INJECT_FIELD_BATT_CHARGE_ATK:
  db F3 0F 11 83 70 03 00 00

unregistersymbol(INJECT_FIELD_BATT_CHARGE_ATK)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+DB5C2

ed9.exe+DB5A1: 66 0F 6E C7              - movd xmm0,edi
ed9.exe+DB5A5: 0F 5B C0                 - cvtdq2ps xmm0,xmm0
ed9.exe+DB5A8: F3 0F 58 83 70 03 00 00  - addss xmm0,[rbx+00000370]
ed9.exe+DB5B0: 0F 2F C3                 - comiss xmm0,xmm3
ed9.exe+DB5B3: 76 05                    - jna ed9.exe+DB5BA
ed9.exe+DB5B5: 0F 28 C3                 - movaps xmm0,xmm3
ed9.exe+DB5B8: EB 08                    - jmp ed9.exe+DB5C2
ed9.exe+DB5BA: 0F 2F E0                 - comiss xmm4,xmm0
ed9.exe+DB5BD: 76 03                    - jna ed9.exe+DB5C2
ed9.exe+DB5BF: 0F 57 C0                 - xorps xmm0,xmm0
// ---------- INJECTING HERE ----------
ed9.exe+DB5C2: F3 0F 11 83 70 03 00 00  - movss [rbx+00000370],xmm0
// ---------- DONE INJECTING  ----------
ed9.exe+DB5CA: 48 8B CB                 - mov rcx,rbx
ed9.exe+DB5CD: E8 EE EA 1D 00           - call ed9.exe+2BA0C0
ed9.exe+DB5D2: 48 85 C0                 - test rax,rax
ed9.exe+DB5D5: 0F 84 05 15 00 00        - je ed9.exe+DCAE0
ed9.exe+DB5DB: 8B CF                    - mov ecx,edi
ed9.exe+DB5DD: 0F 57 D2                 - xorps xmm2,xmm2
ed9.exe+DB5E0: F3 48 0F 2A D1           - cvtsi2ss xmm2,rcx
ed9.exe+DB5E5: F3 0F 5E D3              - divss xmm2,xmm3
ed9.exe+DB5E9: 0F BF 80 86 00 00 00     - movsx eax,word ptr [rax+00000086]
ed9.exe+DB5F0: 66 0F 6E C0              - movd xmm0,eax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>66</ID>
      <Description>"即時戰門：蓄力攻擊不扣能量條 / Field battle: Charge no degrade"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version:
  Date   : 2023-01-27
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_FIELD_BATT_CHARGE_NO_DEC,ed9.exe,F3 0F 11 8B 70 03 00 00) // should be unique
alloc(newmem,$1000,INJECT_FIELD_BATT_CHARGE_NO_DEC)

label(code)
label(return)

newmem:
  vmovss xmm1, [vf_100]

code:
  movss [rbx+00000370],xmm1
  jmp return
align 10 cc
  vf_100:
  dd (float)100

INJECT_FIELD_BATT_CHARGE_NO_DEC:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_FIELD_BATT_CHARGE_NO_DEC)

[DISABLE]

INJECT_FIELD_BATT_CHARGE_NO_DEC:
  db F3 0F 11 8B 70 03 00 00

unregistersymbol(INJECT_FIELD_BATT_CHARGE_NO_DEC)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+210911

ed9.exe+2108F2: 66 0F 6E C1              - movd xmm0,ecx
ed9.exe+2108F6: 0F 5B C0                 - cvtdq2ps xmm0,xmm0
ed9.exe+2108F9: F3 0F 5C C8              - subss xmm1,xmm0
ed9.exe+2108FD: 41 0F 2F CA              - comiss xmm1,xmm10
ed9.exe+210901: 76 06                    - jna ed9.exe+210909
ed9.exe+210903: 41 0F 28 CA              - movaps xmm1,xmm10
ed9.exe+210907: EB 08                    - jmp ed9.exe+210911
ed9.exe+210909: 0F 2F F9                 - comiss xmm7,xmm1
ed9.exe+21090C: 76 03                    - jna ed9.exe+210911
ed9.exe+21090E: 0F 28 CF                 - movaps xmm1,xmm7
// ---------- INJECTING HERE ----------
ed9.exe+210911: F3 0F 11 8B 70 03 00 00  - movss [rbx+00000370],xmm1
// ---------- DONE INJECTING  ----------
ed9.exe+210919: 48 63 83 5C 03 00 00     - movsxd  rax,dword ptr [rbx+0000035C]
ed9.exe+210920: 48 8D 0C 40              - lea rcx,[rax+rax*2]
ed9.exe+210924: 89 B4 8B 2C 03 00 00     - mov [rbx+rcx*4+0000032C],esi
ed9.exe+21092B: 48 8B 0D 96 8F 7B 00     - mov rcx,[ed9.exe+9C98C8]
ed9.exe+210932: BA 02 00 00 00           - mov edx,00000002
ed9.exe+210937: 44 0F B6 81 4D 3E 19 00  - movzx r8d,byte ptr [rcx+00193E4D]
ed9.exe+21093F: 41 FF C0                 - inc r8d
ed9.exe+210942: E8 49 30 1F 00           - call ed9.exe+403990
ed9.exe+210947: 48 8B 7D A7              - mov rdi,[rbp-59]
ed9.exe+21094B: BA 01 00 00 00           - mov edx,00000001
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>92</ID>
      <Description>"親密度 (資訊選單 -&gt; 連結) / Closeness (info menu-&gt;link)"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version:
  Date   : 2023-01-27
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_RELATIONS,$process,0F B7 84 47 08 05 27 00) // should be unique
alloc(newmem,$1000,INJECT_GET_RELATIONS)

label(code)
label(return)
label(i_rel_base_addr)
label(i_rel_char_idx)

newmem:
  push rbx
  lea rbx, [rdi+rax*2+00270508]
  mov [i_rel_base_addr], rbx
  mov [i_rel_char_idx], rax
  pop rbx

code:
  movzx eax,word ptr [rdi+rax*2+00270508]
  jmp return
align 10 cc
  i_rel_base_addr:
  dq 0
  i_rel_char_idx:
  dq 0

INJECT_GET_RELATIONS:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_GET_RELATIONS)
registersymbol(i_rel_base_addr)
registersymbol(i_rel_char_idx)

[DISABLE]

INJECT_GET_RELATIONS:
  db 0F B7 84 47 08 05 27 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+403105

ed9.exe+4030E3: B9 03 00 00 00           - mov ecx,00000003
ed9.exe+4030E8: E8 23 65 10 00           - call ed9.exe+509610
ed9.exe+4030ED: 33 C0                    - xor eax,eax
ed9.exe+4030EF: 48 8B 5C 24 40           - mov rbx,[rsp+40]
ed9.exe+4030F4: 48 83 C4 30              - add rsp,30
ed9.exe+4030F8: 5F                       - pop rdi
ed9.exe+4030F9: C3                       - ret
ed9.exe+4030FA: 42 0F B7 44 1A 02        - movzx eax,word ptr [rdx+r11+02]
ed9.exe+403100: 83 F8 20                 - cmp eax,20
ed9.exe+403103: 73 C5                    - jae ed9.exe+4030CA
// ---------- INJECTING HERE ----------
ed9.exe+403105: 0F B7 84 47 08 05 27 00  - movzx eax,word ptr [rdi+rax*2+00270508]
// ---------- DONE INJECTING  ----------
ed9.exe+40310D: 48 8B 5C 24 40           - mov rbx,[rsp+40]
ed9.exe+403112: 48 83 C4 30              - add rsp,30
ed9.exe+403116: 5F                       - pop rdi
ed9.exe+403117: C3                       - ret
ed9.exe+403118: CC                       - int 3
ed9.exe+403119: CC                       - int 3
ed9.exe+40311A: CC                       - int 3
ed9.exe+40311B: CC                       - int 3
ed9.exe+40311C: CC                       - int 3
ed9.exe+40311D: CC                       - int 3
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>93</ID>
          <Description>"親密度 / Closeness"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_rel_base_addr</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>94</ID>
          <Description>"角色編號 / Char. index"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>8 Bytes</VariableType>
          <Address>i_rel_char_idx</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>27</ID>
      <Description>"CP使用時回滿 / When use CP: recharge"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version: 
  Date   : 2023-01-27
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_USE_CP,$process,41 8B 4A 1C 41 8B 52 20) // should be unique
alloc(newmem,$1000,INJECT_USE_CP)

label(code)
label(return)

newmem:
  push rax
  mov eax, [r10]
  cmp eax, 14
  je to_enemy
  mov eax, [r10+20]
  mov [r10+1C], eax

to_enemy:
endp:
  pop rax

code:
  mov ecx,[r10+1C]
  mov edx,[r10+20]
  jmp return

INJECT_USE_CP:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_USE_CP)

[DISABLE]

INJECT_USE_CP:
  db 41 8B 4A 1C 41 8B 52 20

unregistersymbol(INJECT_USE_CP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+F06B4

ed9.exe+F0695: 0F 48 D1        - cmovs edx,ecx
INJECT_BATTLE_FULL_EP: E9 63 F9 E5 FF  - jmp 7FF6D5A80000
ed9.exe+F069D: 41 8B 42 20     - mov eax,[r10+20]
ed9.exe+F06A1: 44 3B D8        - cmp r11d,eax
ed9.exe+F06A4: 41 0F 4C C3     - cmovl eax,r11d
ed9.exe+F06A8: 33 C9           - xor ecx,ecx
ed9.exe+F06AA: 85 C0           - test eax,eax
ed9.exe+F06AC: 0F 48 C1        - cmovs eax,ecx
ed9.exe+F06AF: 41 89 42 1C     - mov [r10+1C],eax
ed9.exe+F06B3: C3              - ret
// ---------- INJECTING HERE ----------
ed9.exe+F06B4: 41 8B 4A 1C     - mov ecx,[r10+1C]
// ---------- DONE INJECTING  ----------
ed9.exe+F06B8: 41 8B 52 20     - mov edx,[r10+20]
ed9.exe+F06BC: 41 03 CB        - add ecx,r11d
ed9.exe+F06BF: 3B CA           - cmp ecx,edx
ed9.exe+F06C1: 0F 4C D1        - cmovl edx,ecx
ed9.exe+F06C4: 33 C9           - xor ecx,ecx
ed9.exe+F06C6: 85 D2           - test edx,edx
ed9.exe+F06C8: 0F 48 D1        - cmovs edx,ecx
ed9.exe+F06CB: 41 89 52 1C     - mov [r10+1C],edx
ed9.exe+F06CF: C3              - ret
ed9.exe+F06D0: 45 8B 42 10     - mov r8d,[r10+10]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>198</ID>
      <Description>"快速快捷魔法 / no CD for Quick magic"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version: 
  Date   : 2023-01-27
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_FAST_QUICK_MAGIC,ed9.exe,F3 0F 11 83 50 04 00 00 48) // should be unique
alloc(newmem,$1000,INJECT_FAST_QUICK_MAGIC)

label(code)
label(return)

newmem:
  vxorps xmm0, xmm0, xmm0

code:
  movss [rbx+00000450],xmm0
  jmp return

INJECT_FAST_QUICK_MAGIC:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_FAST_QUICK_MAGIC)

[DISABLE]

INJECT_FAST_QUICK_MAGIC:
  db F3 0F 11 83 50 04 00 00

unregistersymbol(INJECT_FAST_QUICK_MAGIC)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+438E66

ed9.exe+438E37: 48 89 5C 24 20           - mov [rsp+20],rbx
ed9.exe+438E3C: 48 8B 98 88 05 00 00     - mov rbx,[rax+00000588]
ed9.exe+438E43: 48 8B CB                 - mov rcx,rbx
ed9.exe+438E46: E8 75 12 E8 FF           - call ed9.exe+2BA0C0
ed9.exe+438E4B: 48 85 C0                 - test rax,rax
ed9.exe+438E4E: 74 1E                    - je ed9.exe+438E6E
ed9.exe+438E50: 0F BF 80 86 00 00 00     - movsx eax,word ptr [rax+00000086]
ed9.exe+438E57: 66 0F 6E C0              - movd xmm0,eax
ed9.exe+438E5B: 0F 5B C0                 - cvtdq2ps xmm0,xmm0
ed9.exe+438E5E: F3 0F 5E 05 12 45 4C 00  - divss xmm0,[ed9.exe+8FD378]
// ---------- INJECTING HERE ----------
ed9.exe+438E66: F3 0F 11 83 50 04 00 00  - movss [rbx+00000450],xmm0
// ---------- DONE INJECTING  ----------
ed9.exe+438E6E: 48 8B 5C 24 20           - mov rbx,[rsp+20]
ed9.exe+438E73: 48 83 C4 28              - add rsp,28
ed9.exe+438E77: C3                       - ret 
ed9.exe+438E78: CC                       - int 3 
ed9.exe+438E79: CC                       - int 3 
ed9.exe+438E7A: CC                       - int 3 
ed9.exe+438E7B: CC                       - int 3 
ed9.exe+438E7C: CC                       - int 3 
ed9.exe+438E7D: CC                       - int 3 
ed9.exe+438E7E: CC                       - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>53</ID>
      <Description>"EP使用時回滿 / When use EP: full"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version: 
  Date   : 2023-01-27
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_BATTLE_FULL_EP,$process,41 89 52 14 C3) // should be unique
alloc(newmem,$1000,INJECT_BATTLE_FULL_EP)

label(code)
label(return)

newmem:
  mov edx, [r10+18]

code:
  mov [r10+14],edx
  ret 
  jmp return

INJECT_BATTLE_FULL_EP:
  jmp newmem
return:
registersymbol(INJECT_BATTLE_FULL_EP)

[DISABLE]

INJECT_BATTLE_FULL_EP:
  db 41 89 52 14 C3

unregistersymbol(INJECT_BATTLE_FULL_EP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+F0698

ed9.exe+F067C: 41 89 42 14  - mov [r10+14],eax
ed9.exe+F0680: C3           - ret
ed9.exe+F0681: 41 8B 4A 14  - mov ecx,[r10+14]
ed9.exe+F0685: 41 8B 52 18  - mov edx,[r10+18]
ed9.exe+F0689: 41 03 CB     - add ecx,r11d
ed9.exe+F068C: 3B CA        - cmp ecx,edx
ed9.exe+F068E: 0F 4C D1     - cmovl edx,ecx
ed9.exe+F0691: 33 C9        - xor ecx,ecx
ed9.exe+F0693: 85 D2        - test edx,edx
ed9.exe+F0695: 0F 48 D1     - cmovs edx,ecx
// ---------- INJECTING HERE ----------
ed9.exe+F0698: 41 89 52 14  - mov [r10+14],edx
// ---------- DONE INJECTING  ----------
ed9.exe+F069C: C3           - ret
ed9.exe+F069D: 41 8B 42 20  - mov eax,[r10+20]
ed9.exe+F06A1: 44 3B D8     - cmp r11d,eax
ed9.exe+F06A4: 41 0F 4C C3  - cmovl eax,r11d
ed9.exe+F06A8: 33 C9        - xor ecx,ecx
ed9.exe+F06AA: 85 C0        - test eax,eax
ed9.exe+F06AC: 0F 48 C1     - cmovs eax,ecx
ed9.exe+F06AF: 41 89 42 1C  - mov [r10+1C],eax
ed9.exe+F06B3: C3           - ret
ed9.exe+F06B4: 41 8B 4A 1C  - mov ecx,[r10+1C]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>29</ID>
      <Description>"EXP倍率 / EXP Multiplier"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version:
  Date   : 2023-01-27
  Author : Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_EXP_MULTI,$process,03 D3 3B D0 41 B8 96 00 00 00) // should be unique
alloc(newmem,$1000,INJECT_EXP_MULTI)

label(code)
label(return)
label(vf_xp_multi)
newmem:
  vmovss xmm14, [vf_xp_multi]
  cvtsi2ss xmm15, ebx
  vmulss xmm13, xmm14, xmm15
  vcvtss2si ebx, xmm13

code:
  add edx,ebx
  cmp edx,eax
  mov r8d,00000096
  jmp return
align 10 cc
  vf_xp_multi:
  dd (float)1.2

INJECT_EXP_MULTI:
  jmp newmem
  nop 5
return:
registersymbol(INJECT_EXP_MULTI)
registersymbol(vf_xp_multi)

[DISABLE]

INJECT_EXP_MULTI:
  db 03 D3 3B D0 41 B8 96 00 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+F0F8F

ed9.exe+F0F6E: 8B 29              - mov ebp,[rcx]
ed9.exe+F0F70: 45 8B F8           - mov r15d,r8d
ed9.exe+F0F73: 8B DA              - mov ebx,edx
ed9.exe+F0F75: 41 B8 96 00 00 00  - mov r8d,00000096
ed9.exe+F0F7B: 8B D5              - mov edx,ebp
ed9.exe+F0F7D: 4C 8B F1           - mov r14,rcx
ed9.exe+F0F80: E8 9B 00 00 00     - call ed9.exe+F1020
ed9.exe+F0F85: 41 8B 56 08        - mov edx,[r14+08]
ed9.exe+F0F89: 8B F8              - mov edi,eax
ed9.exe+F0F8B: 45 8B 66 04        - mov r12d,[r14+04]
// ---------- INJECTING HERE ----------
ed9.exe+F0F8F: 03 D3              - add edx,ebx
// ---------- DONE INJECTING  ----------
ed9.exe+F0F91: 3B D0              - cmp edx,eax
ed9.exe+F0F93: 41 B8 96 00 00 00  - mov r8d,00000096
ed9.exe+F0F99: 0F 4C FA           - cmovl edi,edx
ed9.exe+F0F9C: 33 DB              - xor ebx,ebx
ed9.exe+F0F9E: 85 FF              - test edi,edi
ed9.exe+F0FA0: 8B D5              - mov edx,ebp
ed9.exe+F0FA2: 0F 48 FB           - cmovs edi,ebx
ed9.exe+F0FA5: E8 76 00 00 00     - call ed9.exe+F1020
ed9.exe+F0FAA: 3B F8              - cmp edi,eax
ed9.exe+F0FAC: 0F 4C C7           - cmovl eax,edi
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>30</ID>
          <Description>"倍率 / Multiplier"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>Float</VariableType>
          <Address>vf_xp_multi</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>78</ID>
      <Description>"核心EXP倍率 / Core EXP multiplier"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version: 
  Date   : 2023-01-27
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_CORE_EXP_MULTI2,$process,03 79 04 41 8B D6) // should be unique
alloc(newmem,$1000,INJECT_CORE_EXP_MULTI2)

label(code)
label(return)
label(vf_core_xp_multi)
newmem:
  cvtsi2ss xmm15, edi
  vmovss xmm14, [vf_core_xp_multi]
  vmulss xmm13, xmm14, xmm15
  cvtss2si edi, xmm13

code:
  add edi,[rcx+04]
  mov edx,r14d
  jmp return
align 10 cc
  vf_core_xp_multi:
  dd (float)8.66666666

INJECT_CORE_EXP_MULTI2:
  jmp newmem
  nop
return:
registersymbol(INJECT_CORE_EXP_MULTI2)
registersymbol(vf_core_xp_multi)

[DISABLE]

INJECT_CORE_EXP_MULTI2:
  db 03 79 04 41 8B D6

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+3FF193

ed9.exe+3FF164: E8 D7 2A D2 FF        - call ed9.exe+121C40
ed9.exe+3FF169: 48 85 C0              - test rax,rax
ed9.exe+3FF16C: 0F 84 42 01 00 00     - je ed9.exe+3FF2B4
ed9.exe+3FF172: 48 0F BE 40 0D        - movsx rax,byte ptr [rax+0D]
ed9.exe+3FF177: 84 C0                 - test al,al
ed9.exe+3FF179: 0F 88 35 01 00 00     - js ed9.exe+3FF2B4
ed9.exe+3FF17F: 48 8D 8B 08 B9 19 00  - lea rcx,[rbx+0019B908]
ed9.exe+3FF186: 48 8D 0C C1           - lea rcx,[rcx+rax*8]
ed9.exe+3FF18A: 48 85 C9              - test rcx,rcx
ed9.exe+3FF18D: 0F 84 21 01 00 00     - je ed9.exe+3FF2B4
// ---------- INJECTING HERE ----------
ed9.exe+3FF193: 03 79 04              - add edi,[rcx+04]
// ---------- DONE INJECTING  ----------
ed9.exe+3FF196: 41 8B D6              - mov edx,r14d
ed9.exe+3FF199: 48 8B 05 C8 A6 5C 00  - mov rax,[ed9.exe+9C9868]
ed9.exe+3FF1A0: 48 8B 88 00 01 00 00  - mov rcx,[rax+00000100]
ed9.exe+3FF1A7: 48 8B 49 08           - mov rcx,[rcx+08]
ed9.exe+3FF1AB: E8 90 2A D2 FF        - call ed9.exe+121C40
ed9.exe+3FF1B0: 48 85 C0              - test rax,rax
ed9.exe+3FF1B3: 74 1C                 - je ed9.exe+3FF1D1
ed9.exe+3FF1B5: 48 0F BE 40 0D        - movsx rax,byte ptr [rax+0D]
ed9.exe+3FF1BA: 84 C0                 - test al,al
ed9.exe+3FF1BC: 78 13                 - js ed9.exe+3FF1D1
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>79</ID>
          <Description>"倍率"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>Float</VariableType>
          <Address>vf_core_xp_multi</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>81</ID>
      <Description>"取得核心資料 (商店中關閉；選單-&gt;ORBMENT) / Current Core data (Disable in vendor menu; Menu -&gt; ORBMENT) "</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version:
  Date   : 2023-01-27
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_CORE_DATA,$process,44 8B 61 04 83 A6 BC 00 00 00 FE) // should be unique
alloc(newmem,$1000,INJECT_GET_CORE_DATA)

label(code)
label(return)
label(i_core_base_addr)

newmem:
  mov [i_core_base_addr] ,rcx

code:
  mov r12d,[rcx+04]
  and dword ptr [rsi+000000BC],-02
  jmp return
align 10 cc
  i_core_base_addr:
  dq 0

INJECT_GET_CORE_DATA:
  jmp newmem
  nop 6
return:
registersymbol(INJECT_GET_CORE_DATA)
registersymbol(i_core_base_addr)

[DISABLE]

INJECT_GET_CORE_DATA:
  db 44 8B 61 04 83 A6 BC 00 00 00 FE

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+1BBC7A

ed9.exe+1BBC57: E8 E4 5F F6 FF        - call ed9.exe+121C40
ed9.exe+1BBC5C: 48 85 C0              - test rax,rax
ed9.exe+1BBC5F: 74 1D                 - je ed9.exe+1BBC7E
ed9.exe+1BBC61: 48 0F BE 40 0D        - movsx rax,byte ptr [rax+0D]
ed9.exe+1BBC66: 84 C0                 - test al,al
ed9.exe+1BBC68: 78 14                 - js ed9.exe+1BBC7E
ed9.exe+1BBC6A: 49 8D 8F 08 B9 19 00  - lea rcx,[r15+0019B908]
ed9.exe+1BBC71: 48 8D 0C C1           - lea rcx,[rcx+rax*8]
ed9.exe+1BBC75: 48 85 C9              - test rcx,rcx
ed9.exe+1BBC78: 74 04                 - je ed9.exe+1BBC7E
// ---------- INJECTING HERE ----------
ed9.exe+1BBC7A: 44 8B 61 04           - mov r12d,[rcx+04]
// ---------- DONE INJECTING  ----------
ed9.exe+1BBC7E: 83 A6 BC 00 00 00 FE  - and dword ptr [rsi+000000BC],-02
ed9.exe+1BBC85: C6 86 1D 04 00 00 01  - mov byte ptr [rsi+0000041D],01
ed9.exe+1BBC8C: 45 8B C4              - mov r8d,r12d
ed9.exe+1BBC8F: 48 8D 15 3A 44 70 00  - lea rdx,[ed9.exe+8C00D0]
ed9.exe+1BBC96: 48 8D 4C 24 38        - lea rcx,[rsp+38]
ed9.exe+1BBC9B: E8 90 20 EB FF        - call ed9.exe+6DD30
ed9.exe+1BBCA0: 90                    - nop
ed9.exe+1BBCA1: C6 86 1D 04 00 00 01  - mov byte ptr [rsi+0000041D],01
ed9.exe+1BBCA8: 48 8B D0              - mov rdx,rax
ed9.exe+1BBCAB: 48 8D 8E 60 03 00 00  - lea rcx,[rsi+00000360]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>82</ID>
          <Description>"目前核心 Lv"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_core_base_addr</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>83</ID>
          <Description>"目前核心 Exp"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_core_base_addr</Address>
          <Offsets>
            <Offset>4</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>75</ID>
      <Description>"Stock Time不減 / inf. Stock Time"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version: 
  Date   : 2023-01-27
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_INF_STOCK_TIME,$process,FF C8 25 FF FF FF 3F) // should be unique
alloc(newmem,$1000,INJECT_INF_STOCK_TIME)

label(code)
label(return)
label(i_base_st_addr)
newmem:
  mov [i_base_st_addr], rcx
code:
  //dec eax
  and eax,3FFFFFFF
  jmp return
  align 10 cc
  i_base_st_addr:
  dq 0



INJECT_INF_STOCK_TIME:
  jmp newmem
  nop 2
return:
registersymbol(INJECT_INF_STOCK_TIME)
registersymbol(i_base_st_addr)

[DISABLE]

INJECT_INF_STOCK_TIME:
  db FF C8 25 FF FF FF 3F

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+935F8

ed9.exe+935D2: 8D 04 85 00 00 00 00  - lea eax,[rax*4+00000000]
ed9.exe+935D9: C1 F8 02              - sar eax,02
ed9.exe+935DC: EB 16                 - jmp ed9.exe+935F4
ed9.exe+935DE: 83 F9 02              - cmp ecx,02
ed9.exe+935E1: 75 26                 - jne ed9.exe+93609
ed9.exe+935E3: 8D 04 85 00 00 00 00  - lea eax,[rax*4+00000000]
ed9.exe+935EA: 89 44 24 50           - mov [rsp+50],eax
ed9.exe+935EE: F3 0F 2C 44 24 50     - cvttss2si eax,[rsp+50]
ed9.exe+935F4: 85 C0                 - test eax,eax
ed9.exe+935F6: 7E 11                 - jle ed9.exe+93609
// ---------- INJECTING HERE ----------
ed9.exe+935F8: FF C8                 - dec eax
// ---------- DONE INJECTING  ----------
ed9.exe+935FA: 25 FF FF FF 3F        - and eax,3FFFFFFF
ed9.exe+935FF: 0F BA E8 1E           - bts eax,1E
ed9.exe+93603: 89 82 88 11 01 00     - mov [rdx+00011188],eax
ed9.exe+93609: 8B 8F 60 12 00 00     - mov ecx,[rdi+00001260]
ed9.exe+9360F: 85 C9                 - test ecx,ecx
ed9.exe+93611: 0F 84 E6 01 00 00     - je ed9.exe+937FD
ed9.exe+93617: 48 8B 97 58 12 00 00  - mov rdx,[rdi+00001258]
ed9.exe+9361E: 66 90                 - nop 2
ed9.exe+93620: FF C9                 - dec ecx
ed9.exe+93622: 8B C1                 - mov eax,ecx
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>76</ID>
          <Description>"Stock Time"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_st_addr</Address>
          <Offsets>
            <Offset>1114C</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>178</ID>
      <Description>"任務中進行追蹤不被發現 / undetected tracking during quest"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version: 
  Date   : 2023-01-27
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_INF_TRACKING_GAUGE,ed9.exe,F3 0F 10 82 CC 00 00 00 F3) // should be unique
alloc(newmem,$1000,INJECT_INF_TRACKING_GAUGE)

label(code)
label(return)

newmem:
  vxorps xmm0, xmm0, xmm0
  vmovss [rdx+000000CC], xmm0

code:
  movss xmm0,[rdx+000000CC]
  jmp return

INJECT_INF_TRACKING_GAUGE:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_INF_TRACKING_GAUGE)

[DISABLE]

INJECT_INF_TRACKING_GAUGE:
  db F3 0F 10 82 CC 00 00 00

unregistersymbol(INJECT_INF_TRACKING_GAUGE)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+AB65E

ed9.exe+AB625: C7 82 0C 03 00 00 00 00 80 3F  - mov [rdx+0000030C],3F800000
ed9.exe+AB62F: F6 80 68 03 00 00 01           - test byte ptr [rax+00000368],01
ed9.exe+AB636: 74 12                          - je ed9.exe+AB64A
ed9.exe+AB638: F3 0F 10 88 14 03 00 00        - movss xmm1,[rax+00000314]
ed9.exe+AB640: F3 0F 59 88 FC 02 00 00        - mulss xmm1,[rax+000002FC]
ed9.exe+AB648: EB 08                          - jmp ed9.exe+AB652
ed9.exe+AB64A: F3 0F 10 88 FC 02 00 00        - movss xmm1,[rax+000002FC]
ed9.exe+AB652: 49 8B 91 88 00 00 00           - mov rdx,[r9+00000088]
ed9.exe+AB659: 48 85 D2                       - test rdx,rdx
ed9.exe+AB65C: 74 08                          - je ed9.exe+AB666
// ---------- INJECTING HERE ----------
ed9.exe+AB65E: F3 0F 10 82 CC 00 00 00        - movss xmm0,[rdx+000000CC]
// ---------- DONE INJECTING  ----------
ed9.exe+AB666: F3 0F 10 15 56 1E 85 00        - movss xmm2,[ed9.exe+8FD4C4]
ed9.exe+AB66E: F3 0F 59 C2                    - mulss xmm0,xmm2
ed9.exe+AB672: F3 0F 11 88 FC 02 00 00        - movss [rax+000002FC],xmm1
ed9.exe+AB67A: F3 0F 11 80 F8 02 00 00        - movss [rax+000002F8],xmm0
ed9.exe+AB682: 49 8B 81 88 00 00 00           - mov rax,[r9+00000088]
ed9.exe+AB689: 48 85 C0                       - test rax,rax
ed9.exe+AB68C: 74 08                          - je ed9.exe+AB696
ed9.exe+AB68E: 44 0F B6 80 E4 00 00 00        - movzx r8d,byte ptr [rax+000000E4]
ed9.exe+AB696: 48 8B 51 78                    - mov rdx,[rcx+78]
ed9.exe+AB69A: E8 71 00 00 00                 - call ed9.exe+AB710
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>176</ID>
      <Description>"駭入寶箱時間不減 / inf. treasure hacking time"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version: 
  Date   : 2023-01-27
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_INF_HACKING_TIME,ed9.exe,F3 41 0F 11 46 08 48 8B 41) // should be unique
alloc(newmem,$1000,INJECT_INF_HACKING_TIME)

label(code)
label(return)

newmem:
  vmovss xmm0, [r14+08]
  vmovss [rax], xmm0

code:
  movss [r14+08],xmm0
  jmp return
align 10 cc
  vf_60:
  dd (float)60

INJECT_INF_HACKING_TIME:
  jmp newmem
  nop
return:
registersymbol(INJECT_INF_HACKING_TIME)

[DISABLE]

INJECT_INF_HACKING_TIME:
  db F3 41 0F 11 46 08

unregistersymbol(INJECT_INF_HACKING_TIME)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+504B18

ed9.exe+504AEB: 41 80 7E 40 00           - cmp byte ptr [r14+40],00
ed9.exe+504AF0: 75 3D                    - jne ed9.exe+504B2F
ed9.exe+504AF2: F3 0F 5C C1              - subss xmm0,xmm1
ed9.exe+504AF6: F3 41 0F 11 43 08        - movss [r11+08],xmm0
ed9.exe+504AFC: 41 C7 43 18 00 00 00 00  - mov [r11+18],00000000
ed9.exe+504B04: 49 8D 43 08              - lea rax,[r11+08]
ed9.exe+504B08: 49 8D 53 18              - lea rdx,[r11+18]
ed9.exe+504B0C: 41 0F 2F C0              - comiss xmm0,xmm8
ed9.exe+504B10: 48 0F 46 C2              - cmovbe rax,rdx
ed9.exe+504B14: F3 0F 10 00              - movss xmm0,[rax]
// ---------- INJECTING HERE ----------
ed9.exe+504B18: F3 41 0F 11 46 08        - movss [r14+08],xmm0
// ---------- DONE INJECTING  ----------
ed9.exe+504B1E: 48 8B 41 08              - mov rax,[rcx+08]
ed9.exe+504B22: 80 78 10 00              - cmp byte ptr [rax+10],00
ed9.exe+504B26: 74 07                    - je ed9.exe+504B2F
ed9.exe+504B28: 66 41 C7 46 40 01 01     - mov word ptr [r14+40],0101
ed9.exe+504B2F: 48 8B 41 08              - mov rax,[rcx+08]
ed9.exe+504B33: 80 78 10 00              - cmp byte ptr [rax+10],00
ed9.exe+504B37: 75 0E                    - jne ed9.exe+504B47
ed9.exe+504B39: 41 80 7E 41 00           - cmp byte ptr [r14+41],00
ed9.exe+504B3E: 74 07                    - je ed9.exe+504B47
ed9.exe+504B40: 66 41 C7 46 40 00 00     - mov word ptr [r14+40],0000
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>170</ID>
      <Description>"填充道具數量 / Fill items"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version: 
  Date   : 2023-01-26
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_FILL_ITEMS,ed9.exe,0F B7 BC 88 E8 6A 19 00 4D 85) // should be unique
alloc(newmem,$1000,INJECT_FILL_ITEMS)

label(code)
label(return)
label(i_item_min_threshold)
label(i_item_refill_to)

newmem:
  push rbx
  mov bx, [rax+rcx*4+00196AE8]
  cmp bx, [i_item_min_threshold]
  jb endp
  cmp bx, [i_item_refill_to]
  jae endp
  mov bx, [i_item_refill_to]
  mov [rax+rcx*4+00196AE8], bx

endp:
  pop rbx

code:
  movzx edi,word ptr [rax+rcx*4+00196AE8]
  jmp return
align 10 cc
  i_item_min_threshold:
  dw 2
  i_item_refill_to:
  dw 50

INJECT_FILL_ITEMS:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_FILL_ITEMS)
registersymbol(i_item_min_threshold)
registersymbol(i_item_refill_to)
[DISABLE]

INJECT_FILL_ITEMS:
  db 0F B7 BC 88 E8 6A 19 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+4D31FE

ed9.exe+4D31CE: 48 8B 05 F3 66 4F 00     - mov rax,[ed9.exe+9C98C8]
ed9.exe+4D31D5: 8B BC 88 C8 0C 27 00     - mov edi,[rax+rcx*4+00270CC8]
ed9.exe+4D31DC: EB 28                    - jmp ed9.exe+4D3206
ed9.exe+4D31DE: 3D 3F 01 00 00           - cmp eax,0000013F
ed9.exe+4D31E3: 75 0F                    - jne ed9.exe+4D31F4
ed9.exe+4D31E5: 48 8B 05 DC 66 4F 00     - mov rax,[ed9.exe+9C98C8]
ed9.exe+4D31EC: 8B B8 EC 0C 27 00        - mov edi,[rax+00270CEC]
ed9.exe+4D31F2: EB 12                    - jmp ed9.exe+4D3206
ed9.exe+4D31F4: 48 8B C8                 - mov rcx,rax
ed9.exe+4D31F7: 48 8B 05 CA 66 4F 00     - mov rax,[ed9.exe+9C98C8]
// ---------- INJECTING HERE ----------
ed9.exe+4D31FE: 0F B7 BC 88 E8 6A 19 00  - movzx edi,word ptr [rax+rcx*4+00196AE8]
// ---------- DONE INJECTING  ----------
ed9.exe+4D3206: 4D 85 DB                 - test r11,r11
ed9.exe+4D3209: 74 65                    - je ed9.exe+4D3270
ed9.exe+4D320B: 41 09 AB BC 00 00 00     - or [r11+000000BC],ebp
ed9.exe+4D3212: 48 8B 46 10              - mov rax,[rsi+10]
ed9.exe+4D3216: 0F B6 48 19              - movzx ecx,byte ptr [rax+19]
ed9.exe+4D321A: 80 F9 1B                 - cmp cl,1B
ed9.exe+4D321D: 77 51                    - ja ed9.exe+4D3270
ed9.exe+4D321F: B8 00 7C E1 0F           - mov eax,0FE17C00
ed9.exe+4D3224: 0F A3 C8                 - bt eax,ecx
ed9.exe+4D3227: 73 47                    - jae ed9.exe+4D3270
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>173</ID>
          <Description>"使用方式：開啟道具選單並瀏覽)  / usage: open item menu -&gt; browse"</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>174</ID>
          <Description>"請小心使用，關鍵道具數量不對可能造成進度異常  / Use with caution!"</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>171</ID>
          <Description>"判定最小值 / threshold"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_item_min_threshold</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>172</ID>
          <Description>"設定數量 / fill to #"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_item_refill_to</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"角色狀態 (開啟角色狀態選單) / Char. stats (usage: view char in menu)"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version: 
  Date   : 2022-07-29
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_CHAR_STAT,$process,8B 50 24 89 17) // should be unique
alloc(newmem,$1000,INJECT_CHAR_STAT)

label(code)
label(return)
label(i_char_stat_base_addr)
label(is_fill_HECp)
newmem:
  mov [i_char_stat_base_addr], rax
  cmp dword ptr [is_fill_HECp], 0
  je @F
  push rbx
  mov ebx, [rax+10]
  mov [rax+0C], ebx
  mov ebx, [rax+18]
  mov [rax+14], ebx
  mov ebx, [rax+20]
  mov [rax+1C], ebx
  pop rbx

code:
  mov edx,[rax+24]
  mov [rdi],edx
  jmp return
align 10 cc
  i_char_stat_base_addr:
  dq 0
  is_fill_HECp:
  dd 1

INJECT_CHAR_STAT:
  jmp newmem
return:
registersymbol(INJECT_CHAR_STAT)
registersymbol(i_char_stat_base_addr)
registersymbol(is_fill_HECp)

[DISABLE]

INJECT_CHAR_STAT:
  db 8B 50 24 89 17

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+36079F

ed9.exe+36077E: CC                    - int 3 
ed9.exe+36077F: CC                    - int 3 
ed9.exe+360780: 48 89 5C 24 08        - mov [rsp+08],rbx
ed9.exe+360785: 57                    - push rdi
ed9.exe+360786: 48 83 EC 50           - sub rsp,50
ed9.exe+36078A: 48 8B F9              - mov rdi,rcx
ed9.exe+36078D: 41 B0 01              - mov r8l,01
ed9.exe+360790: 48 8B 0D 81 45 44 00  - mov rcx,[ed9.exe+7A4D18]
ed9.exe+360797: E8 64 02 F5 FF        - call ed9.exe+2B0A00
ed9.exe+36079C: 48 8B D8              - mov rbx,rax
// ---------- INJECTING HERE ----------
ed9.exe+36079F: 8B 50 24              - mov edx,[rax+24]
// ---------- DONE INJECTING  ----------
ed9.exe+3607A2: 89 17                 - mov [rdi],edx
ed9.exe+3607A4: 8B 50 28              - mov edx,[rax+28]
ed9.exe+3607A7: 89 57 04              - mov [rdi+04],edx
ed9.exe+3607AA: 8B 50 2C              - mov edx,[rax+2C]
ed9.exe+3607AD: 89 57 08              - mov [rdi+08],edx
ed9.exe+3607B0: 8B 48 30              - mov ecx,[rax+30]
ed9.exe+3607B3: 89 4F 0C              - mov [rdi+0C],ecx
ed9.exe+3607B6: 8B 48 34              - mov ecx,[rax+34]
ed9.exe+3607B9: 89 4F 10              - mov [rdi+10],ecx
ed9.exe+3607BC: 8B 40 38              - mov eax,[rax+38]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>32</ID>
          <Description>"Base addr."</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>808080</Color>
          <VariableType>8 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"Fill HP/EP/CP?"</Description>
          <DropDownList DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>is_fill_HECp</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"Char ID?"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:范恩 / Van Arkride
1:亞妮艾絲 / Agnes Claudel
2:菲莉 / Feri Ai-Fayed
3:亞倫 / Aaron Wei
4:卡特爾 / Quatre Salision
5:貝爾加德 / Bergard Zeman
6:莉婕特 / Risette Twining
8:陣 / Zin Vathek
9:金凱德 / Rene Kincaid
10:茱迪絲 / Judith Ranster
11:艾蕾因 / Elaine Auclair
12:靜名 / Shizuna Rem Misurugi
13:黑鐵 / Kurogane
17:斯溫 / Swin Abel
18:娜狄雅 / Nadia Rayne
62:莉夏 / Rixia Mao
63:菲 / Fie Claussell
</DropDownList>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"LV"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"EXP"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>08</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>45</ID>
          <Description>"HP"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"Max HP"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"EP"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>14</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>48</ID>
          <Description>"Max EP"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>18</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>49</ID>
          <Description>"CP"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>1C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"Max CP"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>20</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"STR"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>24</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"DEF"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>28</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"ATS"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>2C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"ADF"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>30</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"SPD"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>34</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>41</ID>
          <Description>"AGL"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>38</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>42</ID>
          <Description>"DEX"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>3C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"MOV"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>40</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>149</ID>
          <Description>"武器 ID / Weapon ID"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>324</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>154</ID>
          <Description>"副武器 ID / Sub ID"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>328</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>153</ID>
          <Description>"護甲 ID / Armor ID"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>32C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>152</ID>
          <Description>"鞋子 ID / Shoe ID"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>330</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>151</ID>
          <Description>"配件1 ID / Accessory ID 1"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>334</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>150</ID>
          <Description>"配件2 ID / Accessory ID 2"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_char_stat_base_addr</Address>
          <Offsets>
            <Offset>338</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>204</ID>
      <Description>"取得部份統計值 (選單-&gt;成就)"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed9.exe
  Version: 
  Date   : 2023-01-27
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_ACHI_STATS,ed9.exe,48 8D 04 85 10 11 01 00 8B 0C 07) // should be unique
alloc(newmem,$1000,INJECT_GET_ACHI_STATS)

label(code)
label(return)
label(i_base_ahi_stat_addr)

newmem:

code:
  lea rax,[rax*4+00011110]

  cmp eax, 111D8 // EX chain count
  je set_achi_base_addr
  jmp endp
set_achi_base_addr:
  push rbx
  lea rbx, [rdi+rax]
  mov [i_base_ahi_stat_addr], rbx
  pop rbx


endp:
  jmp return
align 10 cc
  align 10 cc
  i_base_ahi_stat_addr:
  dq 0



INJECT_GET_ACHI_STATS:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_GET_ACHI_STATS)
registersymbol(i_base_ahi_stat_addr)
[DISABLE]

INJECT_GET_ACHI_STATS:
  db 48 8D 04 85 10 11 01 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+5DFAC

ed9.exe+5DF79: 48 8B 3D 58 B9 96 00     - mov rdi,[ed9.exe+9C98D8]
ed9.exe+5DF80: 3D 00 01 00 00           - cmp eax,00000100
ed9.exe+5DF85: 72 25                    - jb ed9.exe+5DFAC
ed9.exe+5DF87: 4C 8D 0D 82 44 88 00     - lea r9,[ed9.exe+8E2410]
ed9.exe+5DF8E: 41 B8 44 02 00 00        - mov r8d,00000244
ed9.exe+5DF94: 48 8D 15 A5 43 88 00     - lea rdx,[ed9.exe+8E2340]
ed9.exe+5DF9B: B9 03 00 00 00           - mov ecx,00000003
ed9.exe+5DFA0: E8 6B B6 4A 00           - call ed9.exe+509610
ed9.exe+5DFA5: B8 10 11 01 00           - mov eax,00011110
ed9.exe+5DFAA: EB 08                    - jmp ed9.exe+5DFB4
// ---------- INJECTING HERE ----------
ed9.exe+5DFAC: 48 8D 04 85 10 11 01 00  - lea rax,[rax*4+00011110]
// ---------- DONE INJECTING  ----------
ed9.exe+5DFB4: 8B 0C 07                 - mov ecx,[rdi+rax]
ed9.exe+5DFB7: 8B C1                    - mov eax,ecx
ed9.exe+5DFB9: C1 E8 1E                 - shr eax,1E
ed9.exe+5DFBC: 83 F8 01                 - cmp eax,01
ed9.exe+5DFBF: 75 0C                    - jne ed9.exe+5DFCD
ed9.exe+5DFC1: 8D 04 8D 00 00 00 00     - lea eax,[rcx*4+00000000]
ed9.exe+5DFC8: C1 F8 02                 - sar eax,02
ed9.exe+5DFCB: EB 20                    - jmp ed9.exe+5DFED
ed9.exe+5DFCD: 83 F8 02                 - cmp eax,02
ed9.exe+5DFD0: 75 19                    - jne ed9.exe+5DFEB
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>209</ID>
          <Description>"S.C.L.M 連鎖 / S.C.L.M. chain #"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:N/A or disabled
</DropDownList>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_ahi_stat_addr</Address>
          <Offsets>
            <Offset>A4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>215</ID>
          <Description>"S.C.L.M 支援 / S.C.L.M. support #"</Description>
          <DropDownListLink>S.C.L.M 連鎖 / S.C.L.M. chain #</DropDownListLink>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_ahi_stat_addr</Address>
          <Offsets>
            <Offset>A8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>217</ID>
          <Description>"S增幅行動 / S-Boost actions #"</Description>
          <DropDownListLink>S.C.L.M 連鎖 / S.C.L.M. chain #</DropDownListLink>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_ahi_stat_addr</Address>
          <Offsets>
            <Offset>AC</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>212</ID>
          <Description>"S戰技 / S-Attack#"</Description>
          <DropDownListLink>S.C.L.M 連鎖 / S.C.L.M. chain #</DropDownListLink>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_ahi_stat_addr</Address>
          <Offsets>
            <Offset>B0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>218</ID>
          <Description>"HIT連擊 / # of chain hit"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_ahi_stat_addr</Address>
          <Offsets>
            <Offset>B4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>205</ID>
          <Description>"累計米拉 / # Mira earned (3-bytes)"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>808080</Color>
          <VariableType>Array of byte</VariableType>
          <ByteLength>3</ByteLength>
          <Address>i_base_ahi_stat_addr</Address>
          <Offsets>
            <Offset>CC</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>214</ID>
          <Description>"先制晶片攻擊 / # pree. chip attack"</Description>
          <DropDownListLink>S.C.L.M 連鎖 / S.C.L.M. chain #</DropDownListLink>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_ahi_stat_addr</Address>
          <Offsets>
            <Offset>BC</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>213</ID>
          <Description>"總傷害 / # of total damage (3-bytes)"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>808080</Color>
          <VariableType>Array of byte</VariableType>
          <ByteLength>3</ByteLength>
          <Address>i_base_ahi_stat_addr</Address>
          <Offsets>
            <Offset>C0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>216</ID>
          <Description>"累計打倒數 / # of kills"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_ahi_stat_addr</Address>
          <Offsets>
            <Offset>C4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>211</ID>
          <Description>"原野累計打倒數 / # of field kills"</Description>
          <DropDownListLink>S.C.L.M 連鎖 / S.C.L.M. chain #</DropDownListLink>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_ahi_stat_addr</Address>
          <Offsets>
            <Offset>C8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>210</ID>
          <Description>"發動晶片技能 / # of chip skill"</Description>
          <DropDownListLink>S.C.L.M 連鎖 / S.C.L.M. chain #</DropDownListLink>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_ahi_stat_addr</Address>
          <Offsets>
            <Offset>D4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>207</ID>
          <Description>"原野精準閃避 / # field dodge"</Description>
          <DropDownListLink>S.C.L.M 連鎖 / S.C.L.M. chain #</DropDownListLink>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_ahi_stat_addr</Address>
          <Offsets>
            <Offset>D8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>206</ID>
          <Description>"EX連鎖次數 / # of EX-chain"</Description>
          <DropDownListLink>S.C.L.M 連鎖 / S.C.L.M. chain #</DropDownListLink>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_ahi_stat_addr</Address>
          <Offsets>
            <Offset>DC</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>208</ID>
          <Description>"快捷魔法攻擊次數 / # of quick magic attack"</Description>
          <DropDownListLink>S.C.L.M 連鎖 / S.C.L.M. chain #</DropDownListLink>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_ahi_stat_addr</Address>
          <Offsets>
            <Offset>E4</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>144</ID>
      <Description>"_WIP"</Description>
      <Options moHideChildren="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>124</ID>
          <Description>"Loc info."</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : ed9.exe
  Version: 
  Date   : 2022-08-07
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_CHAR_LOC,ed9.exe,F3 0F 11 60 3C F3) // should be unique
alloc(newmem,$1000,INJECT_CHAR_LOC)

label(code)
label(return)
label(i_char_loc_base_addr)

newmem:
  mov [i_char_loc_base_addr], rax

code:
  movss [rax+3C],xmm4
  jmp return

align 10 cc
  i_char_loc_base_addr:
  dq 0

INJECT_CHAR_LOC:
  jmp newmem
return:
registersymbol(INJECT_CHAR_LOC)
registersymbol(i_char_loc_base_addr)

[DISABLE]

INJECT_CHAR_LOC:
  db F3 0F 11 60 3C

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed9.exe+1D0E82

ed9.exe+1D0E53: F3 0F 10 5D 04  - movss xmm3,[rbp+04]
ed9.exe+1D0E58: F3 0F 5C 58 60  - subss xmm3,[rax+60]
ed9.exe+1D0E5D: F3 0F 10 45 08  - movss xmm0,[rbp+08]
ed9.exe+1D0E62: F3 0F 5C 40 64  - subss xmm0,[rax+64]
ed9.exe+1D0E67: F3 0F 59 E6     - mulss xmm4,xmm6
ed9.exe+1D0E6B: F3 0F 59 DE     - mulss xmm3,xmm6
ed9.exe+1D0E6F: F3 0F 58 60 5C  - addss xmm4,[rax+5C]
ed9.exe+1D0E74: F3 0F 59 C6     - mulss xmm0,xmm6
ed9.exe+1D0E78: F3 0F 58 58 60  - addss xmm3,[rax+60]
ed9.exe+1D0E7D: F3 0F 58 40 64  - addss xmm0,[rax+64]
// ---------- INJECTING HERE ----------
ed9.exe+1D0E82: F3 0F 11 60 3C  - movss [rax+3C],xmm4
// ---------- DONE INJECTING  ----------
ed9.exe+1D0E87: F3 0F 11 60 4C  - movss [rax+4C],xmm4
ed9.exe+1D0E8C: F3 0F 11 58 40  - movss [rax+40],xmm3
ed9.exe+1D0E91: F3 0F 11 58 50  - movss [rax+50],xmm3
ed9.exe+1D0E96: F3 0F 11 40 44  - movss [rax+44],xmm0
ed9.exe+1D0E9B: F3 0F 11 40 54  - movss [rax+54],xmm0
ed9.exe+1D0EA0: F3 0F 11 60 5C  - movss [rax+5C],xmm4
ed9.exe+1D0EA5: F3 0F 11 58 60  - movss [rax+60],xmm3
ed9.exe+1D0EAA: F3 0F 11 40 64  - movss [rax+64],xmm0
ed9.exe+1D0EAF: 4C 89 60 6C     - mov [rax+6C],r12
ed9.exe+1D0EB3: 44 89 60 74     - mov [rax+74],r12d
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>125</ID>
              <Description>"Base addr"</Description>
              <ShowAsHex>1</ShowAsHex>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808080</Color>
              <VariableType>8 Bytes</VariableType>
              <Address>i_char_loc_base_addr</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>126</ID>
              <Description>"POV-Y0"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>i_char_loc_base_addr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>127</ID>
              <Description>"POV-Z0"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>i_char_loc_base_addr</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>128</ID>
              <Description>"POV-X0"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>i_char_loc_base_addr</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>129</ID>
              <Description>"POV-Y1"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>i_char_loc_base_addr</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>130</ID>
              <Description>"POV-Z1"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>i_char_loc_base_addr</Address>
              <Offsets>
                <Offset>14</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>131</ID>
              <Description>"POV-X1"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>i_char_loc_base_addr</Address>
              <Offsets>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>132</ID>
              <Description>"POV-Y2"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>i_char_loc_base_addr</Address>
              <Offsets>
                <Offset>20</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>133</ID>
              <Description>"POV-Z2"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>i_char_loc_base_addr</Address>
              <Offsets>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>134</ID>
              <Description>"POV-X2"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>i_char_loc_base_addr</Address>
              <Offsets>
                <Offset>28</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>135</ID>
              <Description>"Y0"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>i_char_loc_base_addr</Address>
              <Offsets>
                <Offset>3C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>136</ID>
              <Description>"Z0"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>i_char_loc_base_addr</Address>
              <Offsets>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>137</ID>
              <Description>"X0"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>i_char_loc_base_addr</Address>
              <Offsets>
                <Offset>44</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>138</ID>
              <Description>"Y1"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>i_char_loc_base_addr</Address>
              <Offsets>
                <Offset>4C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>139</ID>
              <Description>"Z1"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>i_char_loc_base_addr</Address>
              <Offsets>
                <Offset>50</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>140</ID>
              <Description>"X1"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>i_char_loc_base_addr</Address>
              <Offsets>
                <Offset>54</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>141</ID>
              <Description>"Y2"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>i_char_loc_base_addr</Address>
              <Offsets>
                <Offset>5C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>142</ID>
              <Description>"Z2"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>i_char_loc_base_addr</Address>
              <Offsets>
                <Offset>60</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>143</ID>
              <Description>"X2"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>i_char_loc_base_addr</Address>
              <Offsets>
                <Offset>64</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"The Legend of Heroes: Kuro no Kiseki Ⅱ -CRIMSON SiN-  英雄傳說 黎之軌跡Ⅱ -緋紅原罪-  /  https://opencheattables.com  /  CE 7.4+"</Description>
      <Color>400080</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>AddressList.Header.OnSectionClick = nil

--memory record IDs now allowed to be 'locked'
IDs = {88, 106, 107, 108, 24, 25, 23, 94, 55, 30, 79, 32, 51, 34, 4, 32,
       }

--determine event trigger sequence


function contains(table, val)
   local i = 0
   for i=1, #table do
      if table[i] == val then
         return true
      end
   end
   return false
end


function onMemRecPreExecute(memoryrecord, newstate)
    if contains(IDs, memoryrecord.ID) and newstate then
	    memoryrecord.OnActivate = function(memoryrecord, before, currentstate)
		    return false
	    end
    end
end
</LuaScript>
</CheatTable>
