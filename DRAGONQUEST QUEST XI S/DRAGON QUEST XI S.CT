<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Battle: set HP/MP (not god mode)"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DRAGON QUEST XI S.exe
  Version: 
  Date   : 2022-10-30
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_SET_HPMP,$process,83 79 7C 00 0F 94 C0) // should be unique
alloc(newmem,$1000,INJECT_SET_HPMP)

label(code)
label(return)
label(is_set_hp)
label(is_set_mp)
label(vf_hp_percent)
label(vf_mp_percent)

newmem:
  push rax
  push rbx
  movdqu [vf_xmm_temp12], xmm12
  movdqu [vf_xmm_temp13], xmm13
  movdqu [vf_xmm_temp14], xmm14
  movdqu [vf_xmm_temp15], xmm15

  xor rax, rax
  mov al, [rcx+72]
  cmp al, 1
  jne endp

  cmp dword ptr [is_set_hp], 1
  jne check_mp
  vmovss xmm14, [vf_hp_percent]
  mov eax, [rcx+A0]
  mov ebx, [rcx+7C]
  cvtsi2ss xmm12, ebx
  cvtsi2ss xmm15, eax

  vmulss xmm13, xmm14, xmm15
  vucomiss xmm12, xmm13
  jae check_mp

  cvtss2si eax, xmm13
  mov [rcx+7C], eax


check_mp:
  cmp dword ptr [is_set_hp], 1
  jne endp
  vmovss xmm14, [vf_mp_percent]
  mov eax, [rcx+A4]
  mov ebx, [rcx+80]
  cvtsi2ss xmm12, ebx
  cvtsi2ss xmm15, eax

  vmulss xmm13, xmm14, xmm15
  vucomiss xmm12, xmm13
  jae endp

  cvtss2si eax, xmm13
  mov [rcx+80], eax

endp:
  db EB
  db 3B 54
  db 68 69 73 20
  db 74 61 62 6C 65 20 63
  db 6F 6D 65 73 20
  db 66 72 6F 6D 20 68 74
  db 74 70 73 3A 2F 2F 6F 70 65 6E 63 68 65 61 74 74 61 62
  db 6C 65 73 2E 63 6F 6D 20
  db 2F 20 43 45 20 37 2E 34 2B

  movdqu xmm12, [vf_xmm_temp12]
  movdqu xmm13, [vf_xmm_temp13]
  movdqu xmm14, [vf_xmm_temp14]
  movdqu xmm15, [vf_xmm_temp15]
  pop rbx
  pop rax

code:
  cmp dword ptr [rcx+7C],00
  sete al
  jmp return
align 10 cc
  is_set_hp:
  dd 1
  is_set_mp:
  dd 1
  vf_hp_percent:
  dd (float)0.40
  vf_mp_percent:
  dd (float)0.60
  align 10 cc
  vf_xmm_temp12:
  dq 0
  vf_xmm_temp13:
  dq 0
  vf_xmm_temp14:
  dq 0
  vf_xmm_temp15:
  dq 0



INJECT_SET_HPMP:
  jmp newmem
  nop 2
return:
registersymbol(INJECT_SET_HPMP)
registersymbol(is_set_hp)
registersymbol(is_set_mp)
registersymbol(vf_hp_percent)
registersymbol(vf_mp_percent)

[DISABLE]

INJECT_SET_HPMP:
  db 83 79 7C 00 0F 94 C0

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: DRAGON QUEST XI S.exe+6AE190

DRAGON QUEST XI S.exe+6AE17C: 84 C0        - test al,al
DRAGON QUEST XI S.exe+6AE17E: 74 07        - je "DRAGON QUEST XI S.exe"+6AE187
DRAGON QUEST XI S.exe+6AE180: 32 C0        - xor al,al
DRAGON QUEST XI S.exe+6AE182: 48 83 C4 28  - add rsp,28
DRAGON QUEST XI S.exe+6AE186: C3           - ret 
DRAGON QUEST XI S.exe+6AE187: B0 01        - mov al,01
DRAGON QUEST XI S.exe+6AE189: 48 83 C4 28  - add rsp,28
DRAGON QUEST XI S.exe+6AE18D: C3           - ret 
DRAGON QUEST XI S.exe+6AE18E: CC           - int 3 
DRAGON QUEST XI S.exe+6AE18F: CC           - int 3 
// ---------- INJECTING HERE ----------
DRAGON QUEST XI S.exe+6AE190: 83 79 7C 00  - cmp dword ptr [rcx+7C],00
// ---------- DONE INJECTING  ----------
DRAGON QUEST XI S.exe+6AE194: 0F 94 C0     - sete al
DRAGON QUEST XI S.exe+6AE197: C3           - ret 
DRAGON QUEST XI S.exe+6AE198: CC           - int 3 
DRAGON QUEST XI S.exe+6AE199: CC           - int 3 
DRAGON QUEST XI S.exe+6AE19A: CC           - int 3 
DRAGON QUEST XI S.exe+6AE19B: CC           - int 3 
DRAGON QUEST XI S.exe+6AE19C: CC           - int 3 
DRAGON QUEST XI S.exe+6AE19D: CC           - int 3 
DRAGON QUEST XI S.exe+6AE19E: CC           - int 3 
DRAGON QUEST XI S.exe+6AE19F: CC           - int 3 
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Set HP?"</Description>
          <DropDownList DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF0080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>is_set_hp</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Set MP?"</Description>
          <DropDownList DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF0080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>is_set_mp</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"HP min. factor"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>vf_hp_percent</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"MP min. factor"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>vf_mp_percent</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Battle: EXP multiplier"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DRAGON QUEST XI S.exe
  Version: 
  Date   : 2022-10-30
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_EXP_MULTI,$process,01 91 B0 00 00 00 C3) // should be unique
alloc(newmem,$1000,INJECT_EXP_MULTI)

label(code)
label(return)
label(vf_battle_exp_multi)

newmem:
  vmovss xmm14, [vf_battle_exp_multi]
  cvtsi2ss xmm15, edx
  vmulss xmm15, xmm15, xmm14
  cvtss2si edx, xmm15

code:
  add [rcx+000000B0],edx
  jmp return
align 10 cc
  vf_battle_exp_multi:
  dd (float)1.25



INJECT_EXP_MULTI:
  jmp newmem
  nop
return:
registersymbol(INJECT_EXP_MULTI)
registersymbol(vf_battle_exp_multi)

[DISABLE]

INJECT_EXP_MULTI:
  db 01 91 B0 00 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: DRAGON QUEST XI S.exe+6AD210

DRAGON QUEST XI S.exe+6AD206: CC                 - int 3 
DRAGON QUEST XI S.exe+6AD207: CC                 - int 3 
DRAGON QUEST XI S.exe+6AD208: CC                 - int 3 
DRAGON QUEST XI S.exe+6AD209: CC                 - int 3 
DRAGON QUEST XI S.exe+6AD20A: CC                 - int 3 
DRAGON QUEST XI S.exe+6AD20B: CC                 - int 3 
DRAGON QUEST XI S.exe+6AD20C: CC                 - int 3 
DRAGON QUEST XI S.exe+6AD20D: CC                 - int 3 
DRAGON QUEST XI S.exe+6AD20E: CC                 - int 3 
DRAGON QUEST XI S.exe+6AD20F: CC                 - int 3 
// ---------- INJECTING HERE ----------
DRAGON QUEST XI S.exe+6AD210: 01 91 B0 00 00 00  - add [rcx+000000B0],edx
// ---------- DONE INJECTING  ----------
DRAGON QUEST XI S.exe+6AD216: C3                 - ret 
DRAGON QUEST XI S.exe+6AD217: CC                 - int 3 
DRAGON QUEST XI S.exe+6AD218: CC                 - int 3 
DRAGON QUEST XI S.exe+6AD219: CC                 - int 3 
DRAGON QUEST XI S.exe+6AD21A: CC                 - int 3 
DRAGON QUEST XI S.exe+6AD21B: CC                 - int 3 
DRAGON QUEST XI S.exe+6AD21C: CC                 - int 3 
DRAGON QUEST XI S.exe+6AD21D: CC                 - int 3 
DRAGON QUEST XI S.exe+6AD21E: CC                 - int 3 
DRAGON QUEST XI S.exe+6AD21F: CC                 - int 3 
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Multiplier"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>vf_battle_exp_multi</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Get Gold"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DRAGON QUEST XI S.exe
  Version: 
  Date   : 2022-10-30
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_GOLD,$process,C3 8B 83 C0 00 00 00) // should be unique
alloc(newmem,$1000,INJECT_GET_GOLD)

label(code)
label(return)
label(i_base_gold_addr)

newmem:
  mov [i_base_gold_addr], rbx

code:
  mov eax,[rbx+000000C0]
  jmp return
align 10 cc
  i_base_gold_addr:
  dq 0

INJECT_GET_GOLD+01:
  jmp newmem
  nop
return:
registersymbol(INJECT_GET_GOLD)
registersymbol(i_base_gold_addr)

[DISABLE]

INJECT_GET_GOLD+01:
  db 8B 83 C0 00 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: DRAGON QUEST XI S.exe+6CA4CF

DRAGON QUEST XI S.exe+6CA4B3: 48 8B CB           - mov rcx,rbx
DRAGON QUEST XI S.exe+6CA4B6: E8 F5 66 0A 00     - call "DRAGON QUEST XI S.exe"+770BB0
DRAGON QUEST XI S.exe+6CA4BB: 48 8B C8           - mov rcx,rax
DRAGON QUEST XI S.exe+6CA4BE: E8 4D D2 03 00     - call "DRAGON QUEST XI S.exe"+707710
DRAGON QUEST XI S.exe+6CA4C3: 84 C0              - test al,al
DRAGON QUEST XI S.exe+6CA4C5: 74 08              - je "DRAGON QUEST XI S.exe"+6CA4CF
DRAGON QUEST XI S.exe+6CA4C7: 33 C0              - xor eax,eax
DRAGON QUEST XI S.exe+6CA4C9: 48 83 C4 20        - add rsp,20
DRAGON QUEST XI S.exe+6CA4CD: 5B                 - pop rbx
DRAGON QUEST XI S.exe+6CA4CE: C3                 - ret 
// ---------- INJECTING HERE ----------
DRAGON QUEST XI S.exe+6CA4CF: 8B 83 C0 00 00 00  - mov eax,[rbx+000000C0]
// ---------- DONE INJECTING  ----------
DRAGON QUEST XI S.exe+6CA4D5: 48 83 C4 20        - add rsp,20
DRAGON QUEST XI S.exe+6CA4D9: 5B                 - pop rbx
DRAGON QUEST XI S.exe+6CA4DA: C3                 - ret 
DRAGON QUEST XI S.exe+6CA4DB: CC                 - int 3 
DRAGON QUEST XI S.exe+6CA4DC: CC                 - int 3 
DRAGON QUEST XI S.exe+6CA4DD: CC                 - int 3 
DRAGON QUEST XI S.exe+6CA4DE: CC                 - int 3 
DRAGON QUEST XI S.exe+6CA4DF: CC                 - int 3 
DRAGON QUEST XI S.exe+6CA4E0: 48 89 5C 24 08     - mov [rsp+08],rbx
DRAGON QUEST XI S.exe+6CA4E5: 48 89 6C 24 10     - mov [rsp+10],rbp
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Active: open menu"</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Gold"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_gold_addr</Address>
          <Offsets>
            <Offset>C0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>22</ID>
      <Description>"Get hero skill pt"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DRAGON QUEST XI S.exe
  Version: 
  Date   : 2022-11-04
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_SKILL_PT,$process,8B 81 B4 00 00 00 C3) // should be unique
alloc(newmem,$1000,INJECT_GET_SKILL_PT)

label(code)
label(return)
label(i_base_skill_pt_addr)

newmem:
  mov [i_base_skill_pt_addr], rcx

code:
  mov eax,[rcx+000000B4]
  jmp return
align 10 cc
  i_base_skill_pt_addr:
  dq 0

INJECT_GET_SKILL_PT:
  jmp newmem
  nop
return:
registersymbol(INJECT_GET_SKILL_PT)
registersymbol(i_base_skill_pt_addr)

[DISABLE]

INJECT_GET_SKILL_PT:
  db 8B 81 B4 00 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: DRAGON QUEST XI S.exe+6AC100

DRAGON QUEST XI S.exe+6AC0F6: CC                 - int 3 
DRAGON QUEST XI S.exe+6AC0F7: CC                 - int 3 
DRAGON QUEST XI S.exe+6AC0F8: CC                 - int 3 
DRAGON QUEST XI S.exe+6AC0F9: CC                 - int 3 
DRAGON QUEST XI S.exe+6AC0FA: CC                 - int 3 
DRAGON QUEST XI S.exe+6AC0FB: CC                 - int 3 
DRAGON QUEST XI S.exe+6AC0FC: CC                 - int 3 
DRAGON QUEST XI S.exe+6AC0FD: CC                 - int 3 
DRAGON QUEST XI S.exe+6AC0FE: CC                 - int 3 
DRAGON QUEST XI S.exe+6AC0FF: CC                 - int 3 
// ---------- INJECTING HERE ----------
DRAGON QUEST XI S.exe+6AC100: 8B 81 B4 00 00 00  - mov eax,[rcx+000000B4]
// ---------- DONE INJECTING  ----------
DRAGON QUEST XI S.exe+6AC106: C3                 - ret 
DRAGON QUEST XI S.exe+6AC107: CC                 - int 3 
DRAGON QUEST XI S.exe+6AC108: CC                 - int 3 
DRAGON QUEST XI S.exe+6AC109: CC                 - int 3 
DRAGON QUEST XI S.exe+6AC10A: CC                 - int 3 
DRAGON QUEST XI S.exe+6AC10B: CC                 - int 3 
DRAGON QUEST XI S.exe+6AC10C: CC                 - int 3 
DRAGON QUEST XI S.exe+6AC10D: CC                 - int 3 
DRAGON QUEST XI S.exe+6AC10E: CC                 - int 3 
DRAGON QUEST XI S.exe+6AC10F: CC                 - int 3 
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Active: view individual char status from menu"</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"Hero"</Description>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>24</ID>
              <Description>"Skill pt gained"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>i_base_skill_pt_addr</Address>
              <Offsets>
                <Offset>B4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>38</ID>
              <Description>"Skill pt used"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>i_base_skill_pt_addr</Address>
              <Offsets>
                <Offset>B8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>39</ID>
              <Description>"Field status?"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>i_base_skill_pt_addr</Address>
              <Offsets>
                <Offset>198</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>37</ID>
              <Description>"Status"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>25</ID>
                  <Description>"Lv"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>i_base_skill_pt_addr</Address>
                  <Offsets>
                    <Offset>78</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>36</ID>
                  <Description>"Max HP"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>i_base_skill_pt_addr</Address>
                  <Offsets>
                    <Offset>A0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>26</ID>
                  <Description>"Max MP"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>i_base_skill_pt_addr</Address>
                  <Offsets>
                    <Offset>A4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>27</ID>
                  <Description>"atk"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>i_base_skill_pt_addr</Address>
                  <Offsets>
                    <Offset>84</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>28</ID>
                  <Description>"def"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>i_base_skill_pt_addr</Address>
                  <Offsets>
                    <Offset>88</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>29</ID>
                  <Description>"spd"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>i_base_skill_pt_addr</Address>
                  <Offsets>
                    <Offset>8C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>30</ID>
                  <Description>"dex"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>i_base_skill_pt_addr</Address>
                  <Offsets>
                    <Offset>90</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>31</ID>
                  <Description>"cha"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>i_base_skill_pt_addr</Address>
                  <Offsets>
                    <Offset>94</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>32</ID>
                  <Description>"mg atk"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>i_base_skill_pt_addr</Address>
                  <Offsets>
                    <Offset>98</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>33</ID>
                  <Description>"mg rec"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>i_base_skill_pt_addr</Address>
                  <Offsets>
                    <Offset>9C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>34</ID>
                  <Description>"EXP"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>i_base_skill_pt_addr</Address>
                  <Offsets>
                    <Offset>B0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>35</ID>
                  <Description>"??"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>i_base_skill_pt_addr</Address>
                  <Offsets>
                    <Offset>A8</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"Set min. item count"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DRAGON QUEST XI S.exe
  Version: 
  Date   : 2022-10-30
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_BROWSE_ITEMS,$process,77 03 8B 77 18) // should be unique
alloc(newmem,$1000,INJECT_BROWSE_ITEMS)

label(code)
label(return)
label(i_browse_item_min_count)

newmem:

code:
  //ja "DRAGON QUEST XI S.exe"+8DDDE4
  reassemble(INJECT_BROWSE_ITEMS)

  // *************
  cmp [rdi+1C], 1
  jbe orig_code

  push rax
  mov esi, [rdi+18]
  mov eax, [rdi+1C]
  cmp eax, [i_browse_item_min_count]
  jae next1
  mov esi, eax
  mov [rdi+18], esi
  jmp endp

next1:
  cmp esi, [i_browse_item_min_count]
  jae endp
  mov esi, [i_browse_item_min_count]
  mov [rdi+18], esi

endp:
  pop rax
  // *************

orig_code:
  mov esi,[rdi+18]
  jmp return
align 10 cc
  i_browse_item_min_count:
  dd 20

INJECT_BROWSE_ITEMS:
  jmp newmem
return:
registersymbol(INJECT_BROWSE_ITEMS)
registersymbol(i_browse_item_min_count)
[DISABLE]

INJECT_BROWSE_ITEMS:
  db 77 03 8B 77 18

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: DRAGON QUEST XI S.exe+8DDDDF

DRAGON QUEST XI S.exe+8DDDB6: 48 8B D3                 - mov rdx,rbx
DRAGON QUEST XI S.exe+8DDDB9: 88 4C 24 28              - mov [rsp+28],cl
DRAGON QUEST XI S.exe+8DDDBD: 0F B6 8C 24 B0 00 00 00  - movzx ecx,byte ptr [rsp+000000B0]
DRAGON QUEST XI S.exe+8DDDC5: 88 4C 24 20              - mov [rsp+20],cl
DRAGON QUEST XI S.exe+8DDDC9: 49 8B CF                 - mov rcx,r15
DRAGON QUEST XI S.exe+8DDDCC: E8 3F F8 00 00           - call "DRAGON QUEST XI S.exe"+8ED610
DRAGON QUEST XI S.exe+8DDDD1: 8D 45 F8                 - lea eax,[rbp-08]
DRAGON QUEST XI S.exe+8DDDD4: 40 88 6B 39              - mov [rbx+39],bpl
DRAGON QUEST XI S.exe+8DDDD8: 44 89 73 3C              - mov [rbx+3C],r14d
DRAGON QUEST XI S.exe+8DDDDC: 83 F8 02                 - cmp eax,02
// ---------- INJECTING HERE ----------
DRAGON QUEST XI S.exe+8DDDDF: 77 03                    - ja "DRAGON QUEST XI S.exe"+8DDDE4
// ---------- DONE INJECTING  ----------
DRAGON QUEST XI S.exe+8DDDE1: 8B 77 18                 - mov esi,[rdi+18]
DRAGON QUEST XI S.exe+8DDDE4: 89 B3 80 00 00 00        - mov [rbx+00000080],esi
DRAGON QUEST XI S.exe+8DDDEA: 83 7F 20 00              - cmp dword ptr [rdi+20],00
DRAGON QUEST XI S.exe+8DDDEE: 0F 95 C0                 - setne al
DRAGON QUEST XI S.exe+8DDDF1: 88 83 0F 01 00 00        - mov [rbx+0000010F],al
DRAGON QUEST XI S.exe+8DDDF7: 0F B6 47 20              - movzx eax,byte ptr [rdi+20]
DRAGON QUEST XI S.exe+8DDDFB: 88 83 10 01 00 00        - mov [rbx+00000110],al
DRAGON QUEST XI S.exe+8DDE01: 48 8B C3                 - mov rax,rbx
DRAGON QUEST XI S.exe+8DDE04: 4C 8D 5C 24 60           - lea r11,[rsp+60]
DRAGON QUEST XI S.exe+8DDE09: 49 8B 5B 38              - mov rbx,[r11+38]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>19</ID>
          <Description>"Active (1): Menu -&gt; Item -&gt; browse items"</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Active (2): Buy items from vendor"</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Min. item count"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_browse_item_min_count</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Steam / XBox Games: DRAGON QUEST® XI S: Echoes of an Elusive Age™ - Definitive Edition  /  https://opencheattables.com  /  CE 7.5+"</Description>
      <Color>400080</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
