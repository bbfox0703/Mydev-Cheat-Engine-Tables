<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>48</ID>
      <Description>"Compact mode"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
--https://forum.cheatengine.org/viewtopic.php?t=570055
LuaCall(function cycleFullCompact(sender,force) local state = not(compactmenuitem.Caption == 'Compact View Mode'); if force~=nil then state = not force end; compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'; getMainForm().Splitter1.Visible = state; getMainForm().Panel4.Visible    = state; getMainForm().Panel5.Visible    = state; end; function addCompactMenu() if compactmenualreadyexists then return end; local parent = getMainForm().Menu.Items; compactmenuitem = createMenuItem(parent); parent.add(compactmenuitem); compactmenuitem.Caption = 'Compact View Mode'; compactmenuitem.OnClick = cycleFullCompact; compactmenualreadyexists = 'yes'; end; addCompactMenu(); cycleFullCompact(nil,true))

[DISABLE]
LuaCall(cycleFullCompact(nil,false))

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>94</ID>
      <Description>"Turn most scripts On / off"</Description>
      <Color>FF80FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{$lua}
if (syntaxcheck) then return end
if memrec then print(memrec.Description) end
getLuaEngine().menuItem5.doClick()

battle_array = {48,93,9,31,8,36,43,14,63,33,51,  108,117,  2,58,40,  129}

local a_len = #(battle_array)

local i = 0

for i = 1, a_len do
  getAddressList().getMemoryRecordByID(battle_array[i]).Active = true
  sleep(1)
end

print("Scripts ON; Total " .. a_len .. " items.")
getLuaEngine().Close()

[DISABLE]
{$lua}
if (syntaxcheck) then return end
if memrec then print(memrec.Description) end

battle_array_close = {122,119,129,  84,83,91,  40,58,2,  117,108,  51,33,93,9,31,8,36,43,46,14,63,51,48,17, 14, 63, 48}

local a_len = #(battle_array_close)

local i = 0

for i = 1, a_len do
  getAddressList().getMemoryRecordByID(battle_array_close[i]).Active = false
end

print("Scripts OFF.")

getLuaEngine().Close()
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Battle: Damage control"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : P3R.exe
  Version: 
  Date   : 2024-02-03
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_HP_RECV_MULTI,$process,03 51 0C 0F 49 DA) // should be unique
alloc(newmem,$1000,INJECT_HP_RECV_MULTI)

label(code)
label(return)
label(vf_hp_recv_multi)
label(vf_hp_damage_multi)
label(vf_hp_damage_to_enemy_multi)
label(is_also_recovery_sp)
newmem:
  pushfq

  cmp dword ptr [rcx+04], 1
  jne to_enemy

to_player:
  cmp dword ptr [is_also_recovery_sp], 1
  jne @F

  db EB 3B 54
  db 68 69 73 20
  db 74 61 62 6C 65
  db 20 63 6F 6D
  db 65 73 20 66
  db 72 6F 6D 20
  db 68 74 74 70
  db 73 3A 2F 2F
  db 6F 70 65 6E
  db 63 68 65 61
  db 74 74 61 62
  db 6C 65 73 2E
  db 63 6F 6D 20
  db 2F 20
  db 43 45 20 37
  db 2E 34 2B

  push rdx
  mov edx, #999
  mov [rcx+10], edx
  pop rdx

@@:
  cmp edx, 0
  jl to_player_sub
  vmovss xmm14, [vf_hp_recv_multi]
  jmp code_pre

to_player_sub:
  vmovss xmm14, [vf_hp_damage_multi]

to_player_all:
  //vcvtsi2ss xmm15, xmm15, edx
  //vmulss xmm15, xmm14, xmm15
  //vcvtss2si edx, xmm15
  jmp code_pre


to_enemy:
  cmp edx, 0
  jge code_pre1
  vmovss xmm14, [vf_hp_damage_to_enemy_multi]

code_pre:
  vcvtsi2ss xmm15, xmm15, edx
  vmulss xmm15, xmm14, xmm15
  vcvtss2si edx, xmm15

code_pre1:

  popfq

code:
  add edx,[rcx+0C]
  cmovns ebx,edx
  jmp return
align 10 cc
  vf_hp_recv_multi:
  dd (float)1.75
  vf_hp_damage_multi:
  dd (float)0.85
  vf_hp_damage_to_enemy_multi:
  dd (float)1.08
  is_also_recovery_sp:
  dd 1

INJECT_HP_RECV_MULTI:
  jmp newmem
  nop
return:
registersymbol(INJECT_HP_RECV_MULTI)
registersymbol(vf_hp_recv_multi)
registersymbol(vf_hp_damage_multi)
registersymbol(vf_hp_damage_to_enemy_multi)
registersymbol(is_also_recovery_sp)

[DISABLE]

INJECT_HP_RECV_MULTI:
  db 03 51 0C 0F 49 DA

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: P3R.exe+11BAC7F

P3R.exe+11BAC6B: CC              - int 3 
P3R.exe+11BAC6C: CC              - int 3 
P3R.exe+11BAC6D: CC              - int 3 
P3R.exe+11BAC6E: CC              - int 3 
P3R.exe+11BAC6F: CC              - int 3 
P3R.exe+11BAC70: 48 89 5C 24 08  - mov [rsp+08],rbx
P3R.exe+11BAC75: 57              - push rdi
P3R.exe+11BAC76: 48 83 EC 20     - sub rsp,20
P3R.exe+11BAC7A: 33 DB           - xor ebx,ebx
P3R.exe+11BAC7C: 48 8B F9        - mov rdi,rcx
// ---------- INJECTING HERE ----------
P3R.exe+11BAC7F: 03 51 0C        - add edx,[rcx+0C]
// ---------- DONE INJECTING  ----------
P3R.exe+11BAC82: 0F 49 DA        - cmovns ebx,edx
P3R.exe+11BAC85: E8 66 24 00 00  - call P3R.exe+11BD0F0
P3R.exe+11BAC8A: 3B D8           - cmp ebx,eax
P3R.exe+11BAC8C: 0F 4F D8        - cmovg ebx,eax
P3R.exe+11BAC8F: 89 5F 0C        - mov [rdi+0C],ebx
P3R.exe+11BAC92: 8B C3           - mov eax,ebx
P3R.exe+11BAC94: 48 8B 5C 24 30  - mov rbx,[rsp+30]
P3R.exe+11BAC99: 48 83 C4 20     - add rsp,20
P3R.exe+11BAC9D: 5F              - pop rdi
P3R.exe+11BAC9E: C3              - ret 
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Also recovery SP?"</Description>
          <DropDownList DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>is_also_recovery_sp</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"HP recovery multiplier"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>Float</VariableType>
          <Address>vf_hp_recv_multi</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Damage to player multiplier"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>Float</VariableType>
          <Address>vf_hp_damage_multi</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"Damage to enemy multiplier"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>Float</VariableType>
          <Address>vf_hp_damage_to_enemy_multi</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"Battle: SP will not decrease"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : P3R.exe
  Version: 
  Date   : 2024-02-03
  Author : bbfox@https://opencheattables.com

}

[ENABLE]

aobscanmodule(INJECT_BATTLE_SP,$process,03 51 10 0F 49 DA) // should be unique
alloc(newmem,$1000,INJECT_BATTLE_SP)

label(code)
label(return)

newmem:
  cmp dword ptr [rcx+4], 1
  jne code

  cmp edx, 0
  jge code
  xor edx, edx

code:
  add edx,[rcx+10]
  cmovns ebx,edx
  jmp return

INJECT_BATTLE_SP:
  jmp newmem
  nop
return:
registersymbol(INJECT_BATTLE_SP)

[DISABLE]

INJECT_BATTLE_SP:
  db 03 51 10 0F 49 DA

unregistersymbol(INJECT_BATTLE_SP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: P3R.exe+11BAD2F

P3R.exe+11BAD1B: CC              - int 3 
P3R.exe+11BAD1C: CC              - int 3 
P3R.exe+11BAD1D: CC              - int 3 
P3R.exe+11BAD1E: CC              - int 3 
P3R.exe+11BAD1F: CC              - int 3 
P3R.exe+11BAD20: 48 89 5C 24 08  - mov [rsp+08],rbx
P3R.exe+11BAD25: 57              - push rdi
P3R.exe+11BAD26: 48 83 EC 20     - sub rsp,20
P3R.exe+11BAD2A: 33 DB           - xor ebx,ebx
P3R.exe+11BAD2C: 48 8B F9        - mov rdi,rcx
// ---------- INJECTING HERE ----------
P3R.exe+11BAD2F: 03 51 10        - add edx,[rcx+10]
// ---------- DONE INJECTING  ----------
P3R.exe+11BAD32: 0F 49 DA        - cmovns ebx,edx
P3R.exe+11BAD35: E8 26 25 00 00  - call P3R.exe+11BD260
P3R.exe+11BAD3A: 3B D8           - cmp ebx,eax
P3R.exe+11BAD3C: 0F 4F D8        - cmovg ebx,eax
P3R.exe+11BAD3F: 89 5F 10        - mov [rdi+10],ebx
P3R.exe+11BAD42: 8B C3           - mov eax,ebx
P3R.exe+11BAD44: 48 8B 5C 24 30  - mov rbx,[rsp+30]
P3R.exe+11BAD49: 48 83 C4 20     - add rsp,20
P3R.exe+11BAD4D: 5F              - pop rdi
P3R.exe+11BAD4E: C3              - ret 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Map: Open &amp; Close menu: full HP/SP"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : P3R.exe
  Version: 
  Date   : 2024-02-02
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_CLS_MNU_MAX_HPSP,$process,48 8B CF 8B 5F 0C) // should be unique
alloc(newmem,$1000,INJECT_CLS_MNU_MAX_HPSP)

label(code)
label(return)

newmem:
  mov ebx, #999
  mov [rdi+0C], ebx
  mov [rdi+10], ebx

code:
  mov rcx,rdi
  mov ebx,[rdi+0C]
  jmp return

INJECT_CLS_MNU_MAX_HPSP:
  jmp newmem
  nop
return:
registersymbol(INJECT_CLS_MNU_MAX_HPSP)

[DISABLE]

INJECT_CLS_MNU_MAX_HPSP:
  db 48 8B CF 8B 5F 0C

unregistersymbol(INJECT_CLS_MNU_MAX_HPSP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: P3R.exe+11BE217

P3R.exe+11BE1EF: CC                    - int 3 
P3R.exe+11BE1F0: 48 89 5C 24 08        - mov [rsp+08],rbx
P3R.exe+11BE1F5: 48 89 74 24 10        - mov [rsp+10],rsi
P3R.exe+11BE1FA: 57                    - push rdi
P3R.exe+11BE1FB: 48 83 EC 20           - sub rsp,20
P3R.exe+11BE1FF: 0F B7 D9              - movzx ebx,cx
P3R.exe+11BE202: E8 59 5E 00 00        - call P3R.exe+11C4060
P3R.exe+11BE207: 48 69 FB B4 02 00 00  - imul rdi,rbx,000002B4
P3R.exe+11BE20E: 48 05 B0 01 00 00     - add rax,000001B0
P3R.exe+11BE214: 48 03 F8              - add rdi,rax
// ---------- INJECTING HERE ----------
P3R.exe+11BE217: 48 8B CF              - mov rcx,rdi
// ---------- DONE INJECTING  ----------
P3R.exe+11BE21A: 8B 5F 0C              - mov ebx,[rdi+0C]
P3R.exe+11BE21D: E8 CE EE FF FF        - call P3R.exe+11BD0F0
P3R.exe+11BE222: 8B D0                 - mov edx,eax
P3R.exe+11BE224: 8B CB                 - mov ecx,ebx
P3R.exe+11BE226: E8 B5 B6 EA FF        - call P3R.exe+10698E0
P3R.exe+11BE22B: BE E7 03 00 00        - mov esi,000003E7
P3R.exe+11BE230: 3B C6                 - cmp eax,esi
P3R.exe+11BE232: 7E 08                 - jle P3R.exe+11BE23C
P3R.exe+11BE234: 66 83 7F 04 02        - cmp word ptr [rdi+04],02
P3R.exe+11BE239: 0F 45 C6              - cmovne eax,esi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>36</ID>
      <Description>"Hero XP multiplier"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : P3R.exe
  Version: 
  Date   : 2024-02-03
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_HERO_XP_MULTI,$process,89 98 84 04 00 00) // should be unique
alloc(newmem,$1000,INJECT_HERO_XP_MULTI)

label(code)
label(return)
label(vf_main_pl_xp_multi)
label(vf_main_pl_xp_extra)
label(i_orig_hero_xp)
newmem:
  push r15
  mov r15d, [rax+00000484]
  cmp r15d, ebx
  jae endp



  vcvtsi2ss xmm15, xmm15, r15d
  vcvtsi2ss xmm14, xmm14, ebx

  vsubss xmm14, xmm14, xmm15

  vmovss [i_orig_hero_xp], xmm14

  vmovss xmm13, [vf_main_pl_xp_multi]
  vmulss xmm14, xmm14, xmm13
  vaddss xmm14, xmm14, xmm15
  vmovss xmm13, [vf_main_pl_xp_extra]
  vaddss xmm14, xmm13, xmm14
  vcvtss2si ebx, xmm14


endp:
  pop r15

code:
  mov [rax+00000484],ebx
  jmp return
align 10 cc
  vf_main_pl_xp_multi:
  dd (float)1.333
  vf_main_pl_xp_extra:
  dd (float)99
  i_orig_hero_xp:
  dd 0


INJECT_HERO_XP_MULTI:
  jmp newmem
  nop
return:
registersymbol(INJECT_HERO_XP_MULTI)
registersymbol(vf_main_pl_xp_multi)
registersymbol(vf_main_pl_xp_extra)
registersymbol(i_orig_hero_xp)

[DISABLE]

INJECT_HERO_XP_MULTI:
  db 89 98 84 04 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: P3R.exe+11BE2F2

P3R.exe+11BE2DC: CC                 - int 3 
P3R.exe+11BE2DD: CC                 - int 3 
P3R.exe+11BE2DE: CC                 - int 3 
P3R.exe+11BE2DF: CC                 - int 3 
P3R.exe+11BE2E0: 66 83 F9 01        - cmp cx,01
P3R.exe+11BE2E4: 75 17              - jne P3R.exe+11BE2FD
P3R.exe+11BE2E6: 53                 - push rbx
P3R.exe+11BE2E7: 48 83 EC 20        - sub rsp,20
P3R.exe+11BE2EB: 8B DA              - mov ebx,edx
P3R.exe+11BE2ED: E8 6E 5D 00 00     - call P3R.exe+11C4060
// ---------- INJECTING HERE ----------
P3R.exe+11BE2F2: 89 98 84 04 00 00  - mov [rax+00000484],ebx
// ---------- DONE INJECTING  ----------
P3R.exe+11BE2F8: 48 83 C4 20        - add rsp,20
P3R.exe+11BE2FC: 5B                 - pop rbx
P3R.exe+11BE2FD: C3                 - ret 
P3R.exe+11BE2FE: CC                 - int 3 
P3R.exe+11BE2FF: CC                 - int 3 
P3R.exe+11BE300: 66 83 F9 01        - cmp cx,01
P3R.exe+11BE304: 75 19              - jne P3R.exe+11BE31F
P3R.exe+11BE306: 53                 - push rbx
P3R.exe+11BE307: 48 83 EC 20        - sub rsp,20
P3R.exe+11BE30B: 0F B7 DA           - movzx ebx,dx
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>37</ID>
          <Description>"multiplier"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>Float</VariableType>
          <Address>vf_main_pl_xp_multi</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>96</ID>
          <Description>"Extra XP"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>Float</VariableType>
          <Address>vf_main_pl_xp_extra</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>103</ID>
          <Description>"XP allocated after distribution"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C0C0C0</Color>
          <VariableType>Float</VariableType>
          <Address>i_orig_hero_xp</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>33</ID>
      <Description>"Non-hero / Persona XP multiplier"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : P3R.exe
  Version: 
  Date   : 2024-02-03
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_XP_MULTI,$process,8B 97 10 01 00 00 48 8B CB E8 D7) // should be unique
alloc(newmem,$1000,INJECT_XP_MULTI)

label(code)
label(return)
label(vf_xp_multi)
label(vf_xp_extra)
label(i_orig_xp)
label(i_new_xp)

newmem:

code:
  mov edx,[rdi+00000110]

  //code start
  cmp edx, 0
  je return

  mov [i_orig_xp], edx
  vcvtsi2ss xmm15, xmm15, edx
  vmovss xmm14, [vf_xp_multi]
  vmulss xmm15, xmm14, xmm15

  vmovss [i_new_xp], xmm15

  vmovss xmm14, [vf_xp_extra]
  vaddss xmm15, xmm14, xmm15
  vcvtss2si edx, xmm15


  jmp return
align 10 cc
  vf_xp_multi:
  dd (float)1.3
  vf_xp_extra:
  dd (float)99
  i_orig_xp:
  dd 0
  i_new_xp:
  dd 0

INJECT_XP_MULTI:
  jmp newmem
  nop
return:
registersymbol(INJECT_XP_MULTI)
registersymbol(vf_xp_multi)
registersymbol(vf_xp_extra)
registersymbol(i_orig_xp)
registersymbol(i_new_xp)

[DISABLE]

INJECT_XP_MULTI:
  db 8B 97 10 01 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: P3R.exe+147B48B

P3R.exe+147B46E: CC                 - int 3 
P3R.exe+147B46F: CC                 - int 3 
P3R.exe+147B470: 48 89 5C 24 08     - mov [rsp+08],rbx
P3R.exe+147B475: 57                 - push rdi
P3R.exe+147B476: 48 83 EC 20        - sub rsp,20
P3R.exe+147B47A: 48 8B FA           - mov rdi,rdx
P3R.exe+147B47D: 48 8B D9           - mov rbx,rcx
P3R.exe+147B480: E8 FB 18 D3 FF     - call P3R.exe+11ACD80
P3R.exe+147B485: 66 83 F8 63        - cmp ax,63
P3R.exe+147B489: 7D 0E              - jnl P3R.exe+147B499
// ---------- INJECTING HERE ----------
P3R.exe+147B48B: 8B 97 10 01 00 00  - mov edx,[rdi+00000110]
// ---------- DONE INJECTING  ----------
P3R.exe+147B491: 48 8B CB           - mov rcx,rbx
P3R.exe+147B494: E8 D7 F0 D2 FF     - call P3R.exe+11AA570
P3R.exe+147B499: 48 8B D7           - mov rdx,rdi
P3R.exe+147B49C: 48 8B CB           - mov rcx,rbx
P3R.exe+147B49F: 48 8B 5C 24 30     - mov rbx,[rsp+30]
P3R.exe+147B4A4: 48 83 C4 20        - add rsp,20
P3R.exe+147B4A8: 5F                 - pop rdi
P3R.exe+147B4A9: E9 92 F3 D2 FF     - jmp P3R.exe+11AA840
P3R.exe+147B4AE: CC                 - int 3 
P3R.exe+147B4AF: CC                 - int 3 
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>34</ID>
          <Description>"multiplier"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>Float</VariableType>
          <Address>vf_xp_multi</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>95</ID>
          <Description>"Extra XP"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>Float</VariableType>
          <Address>vf_xp_extra</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>102</ID>
          <Description>"XP allocated after distribution"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C0C0C0</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_orig_xp</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>104</ID>
          <Description>"new XP (without extra)"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C0C0C0</Color>
          <VariableType>Float</VariableType>
          <Address>i_new_xp</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>93</ID>
      <Description>"Set items quantity+"</Description>
      <Options moHideChildren="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Set item consumables quantity"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">{ Game   : P3R.exe
  Version: 
  Date   : 2024-02-03
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

//aobscanmodule(INJECT_SET_COMSUMABLE_CNT,$process,0F B6 84 03 00 0E 00 00) // should be unique
aobscanmodule(INJECT_SET_COMSUMABLE_CNT,$process,48 89 C1 E8 ?? ?? ?? ?? 0F B6 84 03 ?? ?? 00 ?? 48 83 C4 20 5B C3) // should be unique
alloc(newmem,$1000,INJECT_SET_COMSUMABLE_CNT)

alloc(INJECT_SET_COMSUMABLE_CNTo,8)

label(code)
label(return)
label(ib_min_cons_value)
label(ib_max_cons_value)


INJECT_SET_COMSUMABLE_CNTo:
  readmem(INJECT_SET_COMSUMABLE_CNT+8, 8)

newmem:
  push r15
  push rcx
  push r14
  mov r14d, [INJECT_SET_COMSUMABLE_CNTo+4]
  xor r15, r15
  lea r15, [r15+r14d]
  lea r15, [r15+rbx]
  lea r15, [r15+rax]

  //lea r15, [rbx+rax+00000E00]
  mov cl, [r15]
  cmp cl, [ib_min_cons_value]
  jb endp
  cmp cl, [ib_max_cons_value]
  jae endp

  mov cl, [ib_max_cons_value]
  mov [r15], cl


endp:
  pop r14
  pop rcx
  pop r15

code:
  readmem(INJECT_SET_COMSUMABLE_CNT+8, 8)
  //movzx eax,byte ptr [rbx+rax+00000E00]
  jmp return
align 10 cc
  ib_min_cons_value:
  db 2
  ib_max_cons_value:
  db 50

INJECT_SET_COMSUMABLE_CNT+8:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_SET_COMSUMABLE_CNT)
registersymbol(ib_min_cons_value)
registersymbol(ib_max_cons_value)
registersymbol(INJECT_SET_COMSUMABLE_CNTo)
[DISABLE]

INJECT_SET_COMSUMABLE_CNT+8:
  //db 0F B6 84 03 00 0E 00 00
  readmem(INJECT_SET_COMSUMABLE_CNTo, 8)

dealloc(INJECT_SET_COMSUMABLE_CNTo)
unregistersymbol(*)
dealloc(newmem)
unregistersymbol(INJECT_SET_COMSUMABLE_CNTo)
{
// ORIGINAL CODE - INJECTION POINT: P3R.exe+B8AE4A1

P3R.exe+B8AE482: 48 83 EC 20              - sub rsp,20
P3R.exe+B8AE486: 0F B7 D9                 - movzx ebx,cx
P3R.exe+B8AE489: E8 D2 5B 91 F5           - call P3R.exe+11C4060
P3R.exe+B8AE48E: 48 85 C0                 - test rax,rax
P3R.exe+B8AE491: 75 06                    - jne P3R.exe+B8AE499
P3R.exe+B8AE493: 48 83 C4 20              - add rsp,20
P3R.exe+B8AE497: 5B                       - pop rbx
P3R.exe+B8AE498: C3                       - ret 
P3R.exe+B8AE499: 48 89 C1                 - mov rcx,rax
P3R.exe+B8AE49C: E8 5F 4B 92 F5           - call P3R.exe+11D3000
// ---------- INJECTING HERE ----------
P3R.exe+B8AE4A1: 0F B6 84 03 00 0E 00 00  - movzx eax,byte ptr [rbx+rax+00000E00]
// ---------- DONE INJECTING  ----------
P3R.exe+B8AE4A9: 48 83 C4 20              - add rsp,20
P3R.exe+B8AE4AD: 5B                       - pop rbx
P3R.exe+B8AE4AE: C3                       - ret 
P3R.exe+B8AE4AF: CC                       - int 3 
P3R.exe+B8AE4B0: B1 4E                    - mov cl,4E
P3R.exe+B8AE4B2: EA 00 00 00 00 B8 5E     - jmp 5EB8:00000000
P3R.exe+B8AE4B9: 49 7C 4A                 - jl P3R.exe+B8AE506
P3R.exe+B8AE4BC: 01 00                    - add [rax],eax
P3R.exe+B8AE4BE: 00 00                    - add [rax],al
P3R.exe+B8AE4C0: 50                       - push rax
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>5</ID>
              <Description>"Usage: open the consumables menu"</Description>
              <Color>8000FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>3</ID>
              <Description>"value must &gt;="</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>Byte</VariableType>
              <Address>ib_min_cons_value</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>4</ID>
              <Description>"Set to"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>Byte</VariableType>
              <Address>ib_max_cons_value</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>58</ID>
          <Description>"(A) Set accessories quantity"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : P3R.exe
  Version: 
  Date   : 2024-02-03
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_SET_ACCE_ITEM,$process,0F B6 84 03 00 0C 00 00) // should be unique
//C3 48 8B C8 E8 ?? ?? ?? ?? 0F B6 84 03 ?? ?? ?? ?? 48 83 C4 20 5B C3 CC 40 53
alloc(newmem,$1000,INJECT_SET_ACCE_ITEM)

label(code)
label(return)
label(i_min_acce_cnt)
label(i_max_acce_cnt)

newmem:
  pushfq
  push rdx

  mov dl, byte ptr [rbx+rax+00000C00]
  cmp dl, [i_min_acce_cnt]
  jb endp
  cmp dl, [i_max_acce_cnt]
  jae endp
  mov dl, [i_max_acce_cnt]
  mov byte ptr [rbx+rax+00000C00], dl


endp:
  pop rdx
  popfq

code:
  movzx eax,byte ptr [rbx+rax+00000C00]
  jmp return
align 10 cc
  i_min_acce_cnt:
  db 2
  i_max_acce_cnt:
  db 50

INJECT_SET_ACCE_ITEM:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_SET_ACCE_ITEM)
registersymbol(i_min_acce_cnt)
registersymbol(i_max_acce_cnt)

[DISABLE]

INJECT_SET_ACCE_ITEM:
  db 0F B6 84 03 00 0C 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: P3R.exe+11B5B41

P3R.exe+11B5B22: 48 83 EC 20              - sub rsp,20
P3R.exe+11B5B26: 0F B7 D9                 - movzx ebx,cx
P3R.exe+11B5B29: E8 32 E5 00 00           - call P3R.exe+11C4060
P3R.exe+11B5B2E: 48 85 C0                 - test rax,rax
P3R.exe+11B5B31: 75 06                    - jne P3R.exe+11B5B39
P3R.exe+11B5B33: 48 83 C4 20              - add rsp,20
P3R.exe+11B5B37: 5B                       - pop rbx
P3R.exe+11B5B38: C3                       - ret 
P3R.exe+11B5B39: 48 8B C8                 - mov rcx,rax
P3R.exe+11B5B3C: E8 BF D4 01 00           - call P3R.exe+11D3000
// ---------- INJECTING HERE ----------
P3R.exe+11B5B41: 0F B6 84 03 00 0C 00 00  - movzx eax,byte ptr [rbx+rax+00000C00]
// ---------- DONE INJECTING  ----------
P3R.exe+11B5B49: 48 83 C4 20              - add rsp,20
P3R.exe+11B5B4D: 5B                       - pop rbx
P3R.exe+11B5B4E: C3                       - ret 
P3R.exe+11B5B4F: CC                       - int 3 
P3R.exe+11B5B50: 40 53                    - push rbx
P3R.exe+11B5B52: 48 83 EC 20              - sub rsp,20
P3R.exe+11B5B56: 0F B7 D9                 - movzx ebx,cx
P3R.exe+11B5B59: E8 02 E5 00 00           - call P3R.exe+11C4060
P3R.exe+11B5B5E: 48 85 C0                 - test rax,rax
P3R.exe+11B5B61: 75 06                    - jne P3R.exe+11B5B69
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>61</ID>
              <Description>"Usage: Menu -&gt; Equip -&gt; Select char -&gt; select accessories"</Description>
              <Color>8000FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>59</ID>
              <Description>"# of stock must &gt;="</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>Byte</VariableType>
              <Address>i_min_acce_cnt</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>60</ID>
              <Description>"Set value to"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>Byte</VariableType>
              <Address>i_max_acce_cnt</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"(B) Set items # (materials, sold for cash) to 80, if &gt;= 1"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : P3R.exe
  Version: 
  Date   : 2024-02-03
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_SET_ITEM_SOLD_4_CASH,$process,0F B6 84 03 00 13 00 00) // should be unique
alloc(newmem,$1000,INJECT_SET_ITEM_SOLD_4_CASH)

label(code)
label(return)

newmem:

  pushfq
  push rdx

  mov dl, [rbx+rax+00001300]
  cmp dl, 0
  je endp
  cmp dl, 50
  jae endp
  mov dl, 50
  mov [rbx+rax+00001300], dl


endp:
  pop rdx
  popfq

code:
  movzx eax,byte ptr [rbx+rax+00001300]
  jmp return

INJECT_SET_ITEM_SOLD_4_CASH:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_SET_ITEM_SOLD_4_CASH)

[DISABLE]

INJECT_SET_ITEM_SOLD_4_CASH:
  db 0F B6 84 03 00 13 00 00

unregistersymbol(INJECT_SET_ITEM_SOLD_4_CASH)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: P3R.exe+11B5C31

P3R.exe+11B5C12: 48 83 EC 20              - sub rsp,20
P3R.exe+11B5C16: 0F B7 D9                 - movzx ebx,cx
P3R.exe+11B5C19: E8 42 E4 00 00           - call P3R.exe+11C4060
P3R.exe+11B5C1E: 48 85 C0                 - test rax,rax
P3R.exe+11B5C21: 75 06                    - jne P3R.exe+11B5C29
P3R.exe+11B5C23: 48 83 C4 20              - add rsp,20
P3R.exe+11B5C27: 5B                       - pop rbx
P3R.exe+11B5C28: C3                       - ret 
P3R.exe+11B5C29: 48 8B C8                 - mov rcx,rax
P3R.exe+11B5C2C: E8 CF D3 01 00           - call P3R.exe+11D3000
// ---------- INJECTING HERE ----------
P3R.exe+11B5C31: 0F B6 84 03 00 13 00 00  - movzx eax,byte ptr [rbx+rax+00001300]
// ---------- DONE INJECTING  ----------
P3R.exe+11B5C39: 48 83 C4 20              - add rsp,20
P3R.exe+11B5C3D: 5B                       - pop rbx
P3R.exe+11B5C3E: C3                       - ret 
P3R.exe+11B5C3F: CC                       - int 3 
P3R.exe+11B5C40: 40 53                    - push rbx
P3R.exe+11B5C42: 48 83 EC 20              - sub rsp,20
P3R.exe+11B5C46: 0F B7 D9                 - movzx ebx,cx
P3R.exe+11B5C49: E8 12 E4 00 00           - call P3R.exe+11C4060
P3R.exe+11B5C4E: 48 85 C0                 - test rax,rax
P3R.exe+11B5C51: 75 06                    - jne P3R.exe+11B5C59
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>91</ID>
          <Description>"__in testing"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>92</ID>
              <Description>"** Only use them when you enabled (A) &amp; (B)"</Description>
              <Color>8000FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>83</ID>
              <Description>"(Step1: Set Other items quantity #1"</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : P3R.exe
  Version: 
  Date   : 2024-02-04
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

//aobscanmodule(INJECT_SET_ACCE_ITEM,$process,0F B6 84 03 00 0C 00 00) // should be unique
aobscanmodule(INJECT_SET_ACCE_ITEM_O1,$process,48 8B C8 E8 ?? ?? ?? ?? 0F B6 84 03 ?? ?? ?? ?? 48 83 C4 20 5B C3 CC 40 53)
//C3 48 8B C8 E8 ?? ?? ?? ?? 0F B6 84 03 ?? ?? ?? ?? 48 83 C4 20 5B C3 CC 40 53
alloc(newmem,$1000,INJECT_SET_ACCE_ITEM_O1)

alloc(INJECT_SET_ACCE_ITEM_O1o,8)


label(code)
label(return)
label(i_min_acce_cnt_o1)
label(i_max_acce_cnt_o1)

INJECT_SET_ACCE_ITEM_O1o:
  readmem(INJECT_SET_ACCE_ITEM_O1+8, 8)


newmem:
  pushfq
  push r15
  push rcx
  push r14
  mov r14d, [INJECT_SET_ACCE_ITEM_O1o+4]
  xor r15, r15
  lea r15, [r15+r14d]
  lea r15, [r15+rbx]
  lea r15, [r15+rax]

  //lea r15, [rbx+rax+00000E00]
  mov cl, [r15]
  cmp cl, [i_min_acce_cnt_o1]
  jb endp
  cmp cl, [i_max_acce_cnt_o1]
  jae endp

  mov cl, [i_max_acce_cnt_o1]
  mov [r15], cl


endp:
  pop r14
  pop rcx
  pop r15
  popfq

code:
  //movzx eax,byte ptr [rbx+rax+0000????], ???? = 0800 or 1700
  readmem(INJECT_SET_ACCE_ITEM_O1+8, 8)
  jmp return
align 10 cc
  i_min_acce_cnt_o1:
  db 2
  i_max_acce_cnt_o1:
  db 50

INJECT_SET_ACCE_ITEM_O1+8:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_SET_ACCE_ITEM_O1)
registersymbol(i_min_acce_cnt_o1)
registersymbol(i_max_acce_cnt_o1)
registersymbol(INJECT_SET_ACCE_ITEM_O1o)
[DISABLE]

INJECT_SET_ACCE_ITEM_O1+8:
  //db 0F B6 84 03 00 0C 00 00
  readmem(INJECT_SET_ACCE_ITEM_O1o, 8)

dealloc(INJECT_SET_ACCE_ITEM_O1o)
unregistersymbol(*)
dealloc(newmem)
unregistersymbol(INJECT_SET_ACCE_ITEM_O1o)
{
// ORIGINAL CODE - INJECTION POINT: P3R.exe+11B5B41

P3R.exe+11B5B22: 48 83 EC 20              - sub rsp,20
P3R.exe+11B5B26: 0F B7 D9                 - movzx ebx,cx
P3R.exe+11B5B29: E8 32 E5 00 00           - call P3R.exe+11C4060
P3R.exe+11B5B2E: 48 85 C0                 - test rax,rax
P3R.exe+11B5B31: 75 06                    - jne P3R.exe+11B5B39
P3R.exe+11B5B33: 48 83 C4 20              - add rsp,20
P3R.exe+11B5B37: 5B                       - pop rbx
P3R.exe+11B5B38: C3                       - ret 
P3R.exe+11B5B39: 48 8B C8                 - mov rcx,rax
P3R.exe+11B5B3C: E8 BF D4 01 00           - call P3R.exe+11D3000
// ---------- INJECTING HERE ----------
P3R.exe+11B5B41: 0F B6 84 03 00 0C 00 00  - movzx eax,byte ptr [rbx+rax+0000????]
// ---------- DONE INJECTING  ----------
P3R.exe+11B5B49: 48 83 C4 20              - add rsp,20
P3R.exe+11B5B4D: 5B                       - pop rbx
P3R.exe+11B5B4E: C3                       - ret 
P3R.exe+11B5B4F: CC                       - int 3 
P3R.exe+11B5B50: 40 53                    - push rbx
P3R.exe+11B5B52: 48 83 EC 20              - sub rsp,20
P3R.exe+11B5B56: 0F B7 D9                 - movzx ebx,cx
P3R.exe+11B5B59: E8 02 E5 00 00           - call P3R.exe+11C4060
P3R.exe+11B5B5E: 48 85 C0                 - test rax,rax
P3R.exe+11B5B61: 75 06                    - jne P3R.exe+11B5B69
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>84</ID>
                  <Description>"Usage: Menu -&gt; Equip -&gt; Select char -&gt; select protector-foot"</Description>
                  <Color>8000FF</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>85</ID>
                  <Description>"# of stock must &gt;="</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>C08000</Color>
                  <VariableType>Byte</VariableType>
                  <Address>i_min_acce_cnt_o1</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>86</ID>
                  <Description>"Set value to"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>C08000</Color>
                  <VariableType>Byte</VariableType>
                  <Address>i_max_acce_cnt_o1</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>87</ID>
                  <Description>"Step 2: no-use: set protector-foot: Set Other items quantity #2"</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{ Game   : P3R.exe
  Version: 
  Date   : 2024-02-04
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

//aobscanmodule(INJECT_SET_ACCE_ITEM,$process,0F B6 84 03 00 0C 00 00) // should be unique
aobscanmodule(INJECT_SET_ACCE_ITEM_O2,$process,C3 48 8B C8 E8 ?? ?? ?? ?? 0F B6 84 03 ?? ?? ?? ?? 48 83 C4 20 5B C3 CC 40 53) // should be unique
//C3 48 8B C8 E8 ?? ?? ?? ?? 0F B6 84 03 ?? ?? ?? ?? 48 83 C4 20 5B C3 CC 40 53
alloc(newmem,$1000,INJECT_SET_ACCE_ITEM_O2)

alloc(INJECT_SET_ACCE_ITEM_O2o,8)


label(code)
label(return)
label(i_min_acce_cnt_o2)
label(i_max_acce_cnt_o2)

INJECT_SET_ACCE_ITEM_O2o:
  readmem(INJECT_SET_ACCE_ITEM_O2+9, 8)


newmem:
  pushfq
  push r15
  push rcx
  push r14
  mov r14d, [INJECT_SET_ACCE_ITEM_O2o+4]
  xor r15, r15
  lea r15, [r15+r14d]
  lea r15, [r15+rbx]
  lea r15, [r15+rax]

  //lea r15, [rbx+rax+00000E00]
  mov cl, [r15]
  cmp cl, [i_min_acce_cnt_o2]
  jb endp
  cmp cl, [i_max_acce_cnt_o2]
  jae endp

  mov cl, [i_max_acce_cnt_o2]
  mov [r15], cl


endp:
  pop r14
  pop rcx
  pop r15
  popfq

code:
  //movzx eax,byte ptr [rbx+rax+0000????], ???? = 0800 or 1700
  readmem(INJECT_SET_ACCE_ITEM_O2+9, 8)
  jmp return
align 10 cc
  i_min_acce_cnt_o2:
  db 2
  i_max_acce_cnt_o2:
  db 50

INJECT_SET_ACCE_ITEM_O2+9:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_SET_ACCE_ITEM_O2)
registersymbol(i_min_acce_cnt_o2)
registersymbol(i_max_acce_cnt_o2)
registersymbol(INJECT_SET_ACCE_ITEM_O2o)

[DISABLE]

INJECT_SET_ACCE_ITEM_O2+9:
  //db 0F B6 84 03 00 0C 00 00
  readmem(INJECT_SET_ACCE_ITEM_O2o, 8)

dealloc(INJECT_SET_ACCE_ITEM_O2o)
unregistersymbol(*)
dealloc(newmem)
unregistersymbol(INJECT_SET_ACCE_ITEM_O2o)
{
// ORIGINAL CODE - INJECTION POINT: P3R.exe+11B5B41

P3R.exe+11B5B22: 48 83 EC 20              - sub rsp,20
P3R.exe+11B5B26: 0F B7 D9                 - movzx ebx,cx
P3R.exe+11B5B29: E8 32 E5 00 00           - call P3R.exe+11C4060
P3R.exe+11B5B2E: 48 85 C0                 - test rax,rax
P3R.exe+11B5B31: 75 06                    - jne P3R.exe+11B5B39
P3R.exe+11B5B33: 48 83 C4 20              - add rsp,20
P3R.exe+11B5B37: 5B                       - pop rbx
P3R.exe+11B5B38: C3                       - ret 
P3R.exe+11B5B39: 48 8B C8                 - mov rcx,rax
P3R.exe+11B5B3C: E8 BF D4 01 00           - call P3R.exe+11D3000
// ---------- INJECTING HERE ----------
P3R.exe+11B5B41: 0F B6 84 03 00 0C 00 00  - movzx eax,byte ptr [rbx+rax+0000????]
// ---------- DONE INJECTING  ----------
P3R.exe+11B5B49: 48 83 C4 20              - add rsp,20
P3R.exe+11B5B4D: 5B                       - pop rbx
P3R.exe+11B5B4E: C3                       - ret 
P3R.exe+11B5B4F: CC                       - int 3 
P3R.exe+11B5B50: 40 53                    - push rbx
P3R.exe+11B5B52: 48 83 EC 20              - sub rsp,20
P3R.exe+11B5B56: 0F B7 D9                 - movzx ebx,cx
P3R.exe+11B5B59: E8 02 E5 00 00           - call P3R.exe+11C4060
P3R.exe+11B5B5E: 48 85 C0                 - test rax,rax
P3R.exe+11B5B61: 75 06                    - jne P3R.exe+11B5B69
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>88</ID>
                      <Description>"Usage: Menu -&gt; Equip -&gt; Select char -&gt; select ?????"</Description>
                      <Color>8000FF</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>89</ID>
                      <Description>"# of stock must &gt;="</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>C08000</Color>
                      <VariableType>Byte</VariableType>
                      <Address>i_min_acce_cnt_o2</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>90</ID>
                      <Description>"Set value to"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>C08000</Color>
                      <VariableType>Byte</VariableType>
                      <Address>i_max_acce_cnt_o2</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>43</ID>
      <Description>"Set skill cards quantity"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : P3R.exe
  Version: 
  Date   : 2024-02-03
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_SET_SKILL_CARD_CNT,$process,0F B6 84 03 00 17 00 00) // should be unique
alloc(newmem,$1000,INJECT_SET_SKILL_CARD_CNT)

label(code)
label(return)
label(i_min_skc_cnt)
label(i_max_skc_cnt)

newmem:
  pushfq
  push rdx

  mov dl, byte ptr [rbx+rax+00001700]
  cmp dl, [i_min_skc_cnt]
  jb endp
  cmp dl, [i_max_skc_cnt]
  jae endp
  mov dl, [i_max_skc_cnt]
  mov byte ptr [rbx+rax+00001700], dl


endp:
  pop rdx
  popfq

code:
  movzx eax,byte ptr [rbx+rax+00001700]
  jmp return
align 10 cc
  i_min_skc_cnt:
  db 2
  i_max_skc_cnt:
  db 50



INJECT_SET_SKILL_CARD_CNT:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_SET_SKILL_CARD_CNT)
registersymbol(i_min_skc_cnt)
registersymbol(i_max_skc_cnt)


[DISABLE]

INJECT_SET_SKILL_CARD_CNT:
  db 0F B6 84 03 00 17 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: P3R.exe+11B5C91

P3R.exe+11B5C72: 48 83 EC 20              - sub rsp,20
P3R.exe+11B5C76: 0F B7 D9                 - movzx ebx,cx
P3R.exe+11B5C79: E8 E2 E3 00 00           - call P3R.exe+11C4060
P3R.exe+11B5C7E: 48 85 C0                 - test rax,rax
P3R.exe+11B5C81: 75 06                    - jne P3R.exe+11B5C89
P3R.exe+11B5C83: 48 83 C4 20              - add rsp,20
P3R.exe+11B5C87: 5B                       - pop rbx
P3R.exe+11B5C88: C3                       - ret 
P3R.exe+11B5C89: 48 8B C8                 - mov rcx,rax
P3R.exe+11B5C8C: E8 6F D3 01 00           - call P3R.exe+11D3000
// ---------- INJECTING HERE ----------
P3R.exe+11B5C91: 0F B6 84 03 00 17 00 00  - movzx eax,byte ptr [rbx+rax+00001700]
// ---------- DONE INJECTING  ----------
P3R.exe+11B5C99: 48 83 C4 20              - add rsp,20
P3R.exe+11B5C9D: 5B                       - pop rbx
P3R.exe+11B5C9E: C3                       - ret 
P3R.exe+11B5C9F: CC                       - int 3 
P3R.exe+11B5CA0: 40 53                    - push rbx
P3R.exe+11B5CA2: 48 83 EC 20              - sub rsp,20
P3R.exe+11B5CA6: 0F B7 D9                 - movzx ebx,cx
P3R.exe+11B5CA9: E8 B2 E3 00 00           - call P3R.exe+11C4060
P3R.exe+11B5CAE: 48 85 C0                 - test rax,rax
P3R.exe+11B5CB1: 75 06                    - jne P3R.exe+11B5CB9
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>46</ID>
          <Description>"Usage: open the item menu =&gt; skill cards"</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"# of stock must &gt;="</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>Byte</VariableType>
          <Address>i_min_skc_cnt</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>45</ID>
          <Description>"Set to"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>Byte</VariableType>
          <Address>i_max_skc_cnt</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"Get money"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : P3R.exe
  Version: 
  Date   : 2024-02-02
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_MONEY,$process,44 8B 88 F8 3C 00 00) // should be unique
alloc(newmem,$1000,INJECT_GET_MONEY)

label(code)
label(return)
label(i_base_money_addr)

newmem:
  mov [i_base_money_addr], rax

code:
  mov r9d,[rax+00003CF8]
  jmp return
align 10 cc
  i_base_money_addr:
  dq 0

INJECT_GET_MONEY:
  jmp newmem
  nop 2
return:
registersymbol(INJECT_GET_MONEY)
registersymbol(i_base_money_addr)

[DISABLE]

INJECT_GET_MONEY:
  db 44 8B 88 F8 3C 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: P3R.exe+12D3215

P3R.exe+12D31E4: 89 44 24 58           - mov [rsp+58],eax
P3R.exe+12D31E8: 49 8B D7              - mov rdx,r15
P3R.exe+12D31EB: C7 45 A4 0C 00 00 00  - mov [rbp-5C],0000000C
P3R.exe+12D31F2: 48 8D 4C 24 40        - lea rcx,[rsp+40]
P3R.exe+12D31F7: E8 B4 E8 04 00        - call P3R.exe+1321AB0
P3R.exe+12D31FC: E8 5F 0E EF FF        - call P3R.exe+11C4060
P3R.exe+12D3201: 48 89 5D C0           - mov [rbp-40],rbx
P3R.exe+12D3205: 4C 8D 05 68 13 FB 02  - lea r8,[P3R.exe+4284574]
P3R.exe+12D320C: BA 08 00 00 00        - mov edx,00000008
P3R.exe+12D3211: 48 8D 4D C0           - lea rcx,[rbp-40]
// ---------- INJECTING HERE ----------
P3R.exe+12D3215: 44 8B 88 F8 3C 00 00  - mov r9d,[rax+00003CF8]
// ---------- DONE INJECTING  ----------
P3R.exe+12D321C: E8 5F 1C D1 FF        - call P3R.exe+FE4E80
P3R.exe+12D3221: BF 07 00 00 00        - mov edi,00000007
P3R.exe+12D3226: 48 8B C3              - mov rax,rbx
P3R.exe+12D3229: 44 8B F7              - mov r14d,edi
P3R.exe+12D322C: 0F 1F 40 00           - nop dword ptr [rax+00]
P3R.exe+12D3230: 80 7C 05 C0 30        - cmp byte ptr [rbp+rax-40],30
P3R.exe+12D3235: 75 0B                 - jne P3R.exe+12D3242
P3R.exe+12D3237: 41 FF CE              - dec r14d
P3R.exe+12D323A: 48 FF C0              - inc rax
P3R.exe+12D323D: 48 3B C7              - cmp rax,rdi
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Usage: open menu"</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"value"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_money_addr</Address>
          <Offsets>
            <Offset>3CF8</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>51</ID>
      <Description>"Get social status"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">{ Game   : P3R.exe
  Version: 
  Date   : 2024-02-03
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_PER_PARAM,$process,42 8B 44 D9 04 44) // should be unique
alloc(newmem,$1000,INJECT_GET_PER_PARAM)

label(code)
label(return)
label(i_base_courage)
label(i_base_charm)
label(i_base_knowledge)

newmem:
  push r15
  lea r15, [rcx+r11*8+04]

  cmp qword ptr [i_base_knowledge], r15
  je endp
  cmp qword ptr [i_base_charm], r15
  je endp
  cmp qword ptr [i_base_courage], r15
  je endp


  cmp qword ptr [i_base_knowledge], 0
  jne next2
  mov [i_base_knowledge], r15
  jmp endp

next2:
  cmp qword ptr [i_base_charm], 0
  jne next3
  mov [i_base_charm], r15
  jmp endp

next3:
  cmp qword ptr [i_base_courage], 0
  jne endp
  mov [i_base_courage], r15

endp:
next_s0:
  mov r15, [i_base_courage]
  cmp r15, [i_base_charm]
  ja next_s1

  mov [i_temp1], r15
  mov r15, [i_base_charm]
  mov [i_base_courage], r15
  mov r15, [i_temp1]
  mov [i_base_charm], r15

next_s1:
  mov r15, [i_base_charm]
  cmp r15, [i_base_knowledge]
  ja next_s2

  mov [i_temp1], r15
  mov r15, [i_base_knowledge]
  mov [i_base_charm], r15
  mov r15, [i_temp1]
  mov [i_base_knowledge], r15

next_s2:
  pop r15

code:
  mov eax,[rcx+r11*8+04]
  jmp return
align 10 cc
  i_base_courage:
  dq 0
  i_base_charm:
  dq 0
  i_base_knowledge:
  dq 0
  i_temp1:
  dq 0

INJECT_GET_PER_PARAM:
  jmp newmem
return:
registersymbol(INJECT_GET_PER_PARAM)
registersymbol(i_base_courage)
registersymbol(i_base_charm)
registersymbol(i_base_knowledge)
[DISABLE]

INJECT_GET_PER_PARAM:
  db 42 8B 44 D9 04

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: P3R.exe+AAC7A3C

P3R.exe+AAC7A1A: 45 89 CA        - mov r10d,r9d
P3R.exe+AAC7A1D: 4D 89 D8        - mov r8,r11
P3R.exe+AAC7A20: 49 C1 E0 04     - shl r8,04
P3R.exe+AAC7A24: 4C 03 40 30     - add r8,[rax+30]
P3R.exe+AAC7A28: 49 8B 10        - mov rdx,[r8]
P3R.exe+AAC7A2B: 49 63 40 08     - movsxd  rax,dword ptr [r8+08]
P3R.exe+AAC7A2F: 4C 8D 04 82     - lea r8,[rdx+rax*4]
P3R.exe+AAC7A33: 4C 39 C2        - cmp rdx,r8
P3R.exe+AAC7A36: 74 1D           - je P3R.exe+AAC7A55
P3R.exe+AAC7A38: 48 8B 49 28     - mov rcx,[rcx+28]
// ---------- INJECTING HERE ----------
P3R.exe+AAC7A3C: 42 8B 44 D9 04  - mov eax,[rcx+r11*8+04]
// ---------- DONE INJECTING  ----------
P3R.exe+AAC7A41: 44 03 12        - add r10d,[rdx]
P3R.exe+AAC7A44: 44 39 D0        - cmp eax,r10d
P3R.exe+AAC7A47: 7C 0C           - jl P3R.exe+AAC7A55
P3R.exe+AAC7A49: 41 FF C1        - inc r9d
P3R.exe+AAC7A4C: 48 83 C2 04     - add rdx,04
P3R.exe+AAC7A50: 4C 39 C2        - cmp rdx,r8
P3R.exe+AAC7A53: 75 EC           - jne P3R.exe+AAC7A41
P3R.exe+AAC7A55: 44 89 C8        - mov eax,r9d
P3R.exe+AAC7A58: C3              - ret 
P3R.exe+AAC7A59: 00 00           - add [rax],al
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>55</ID>
          <Description>"Usage: Menu -&gt; Status -&gt; Select main hero -&gt; press [S]"</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>80</ID>
          <Description>"Re-enable when load from save / or data is incorrect"</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>52</ID>
          <Description>"Courage / 勇気"</Description>
          <DropDownList DisplayValueAsItem="1">45:4
60:5
79:Before 6
80:6
</DropDownList>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_courage</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>53</ID>
          <Description>"Charm / 魅力"</Description>
          <DropDownList DisplayValueAsItem="1">45:4
70:5
99:Before 6
100:6
</DropDownList>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_charm</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"Academics / 学力"</Description>
          <DropDownList DisplayValueAsItem="1">100:4
155:5
229:Before 6
230:6
</DropDownList>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_knowledge</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>63</ID>
      <Description>"Get persona base attributes"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : P3R.exe
  Version: 
  Date   : 2024-02-04
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_EQUIP_PERSONA_DATA,$process,0F B6 44 08 1C C3) // should be unique
alloc(newmem,$1000,INJECT_GET_EQUIP_PERSONA_DATA)

label(code)
label(return)
label(i_base_str_addr)

newmem:
  pushfq
  cmp eax, 0
  je code_pre

  push r14
  lea r14, [rax+rcx+1C]
  mov [i_base_str_addr], r14
  pop r14

code_pre:
  popfq

code:
  movzx eax,byte ptr [rax+rcx+1C]
  jmp return
align 10 cc
  i_base_str_addr:
  dq 0


INJECT_GET_EQUIP_PERSONA_DATA:
  jmp newmem

return:
registersymbol(INJECT_GET_EQUIP_PERSONA_DATA)
registersymbol(i_base_str_addr)

[DISABLE]

INJECT_GET_EQUIP_PERSONA_DATA:
  db 0F B6 44 08 1C

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: P3R.exe+11AC653

P3R.exe+11AC62D: 48 8B 43 30     - mov rax,[rbx+30]
P3R.exe+11AC631: 48 6B CE 13     - imul rcx,rsi,13
P3R.exe+11AC635: 48 03 CF        - add rcx,rdi
P3R.exe+11AC638: 0F B7 0C 48     - movzx ecx,word ptr [rax+rcx*2]
P3R.exe+11AC63C: 48 8B 5C 24 30  - mov rbx,[rsp+30]
P3R.exe+11AC641: 48 8B 74 24 38  - mov rsi,[rsp+38]
P3R.exe+11AC646: 48 83 C4 20     - add rsp,20
P3R.exe+11AC64A: 5F              - pop rdi
P3R.exe+11AC64B: E9 80 FB 00 00  - jmp P3R.exe+11BC1D0
P3R.exe+11AC650: 0F B7 C2        - movzx eax,dx
// ---------- INJECTING HERE ----------
P3R.exe+11AC653: 0F B6 44 08 1C  - movzx eax,byte ptr [rax+rcx+1C]
// ---------- DONE INJECTING  ----------
P3R.exe+11AC658: C3              - ret 
P3R.exe+11AC659: CC              - int 3 
P3R.exe+11AC65A: CC              - int 3 
P3R.exe+11AC65B: CC              - int 3 
P3R.exe+11AC65C: CC              - int 3 
P3R.exe+11AC65D: CC              - int 3 
P3R.exe+11AC65E: CC              - int 3 
P3R.exe+11AC65F: CC              - int 3 
P3R.exe+11AC660: 48 89 5C 24 08  - mov [rsp+08],rbx
P3R.exe+11AC665: 48 89 6C 24 10  - mov [rsp+10],rbp
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>78</ID>
          <Description>"Usage: Menu -&gt; Status -&gt; Select char -&gt; press [X] or RT"</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>79</ID>
          <Description>"Or: Menu -&gt; Persona (for hero)"</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>77</ID>
          <Description>"Team pos? (valid: &lt;5)"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_str_addr</Address>
          <Offsets>
            <Offset>-48</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>100</ID>
          <Description>"Persona ID?"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_str_addr</Address>
          <Offsets>
            <Offset>-1E</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>101</ID>
          <Description>"Level"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_str_addr</Address>
          <Offsets>
            <Offset>-1C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>99</ID>
          <Description>"EXP"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_str_addr</Address>
          <Offsets>
            <Offset>-18</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>98</ID>
          <Description>"St / 力"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Byte</VariableType>
          <Address>i_base_str_addr</Address>
          <Offsets>
            <Offset>-4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>65</ID>
          <Description>"Ma / 魔"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Byte</VariableType>
          <Address>i_base_str_addr</Address>
          <Offsets>
            <Offset>-3</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>66</ID>
          <Description>"En / 耐"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Byte</VariableType>
          <Address>i_base_str_addr</Address>
          <Offsets>
            <Offset>-2</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>67</ID>
          <Description>"Ag / 速"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Byte</VariableType>
          <Address>i_base_str_addr</Address>
          <Offsets>
            <Offset>-1</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>68</ID>
          <Description>"Lu / 運"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Byte</VariableType>
          <Address>i_base_str_addr</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>69</ID>
          <Description>"Skill #1"</Description>
          <DropDownList DisplayValueAsItem="1">0:--NONE--
10:アギ
11:アギラオ
13:マハラギ
15:マハラギダイン
16:インフェルノ
17:未使用
18:マララギダイン
19:未使用
20:ブフ
21:ブフーラ
23:マハブフ
25:マハブフダイン
26:ダイアモンドダスト
30:ガル
33:マハガル
35:マハガルダイン
36:万物流転
37:未使用
40:ジオ
41:ジオンガ
43:マハジオ
45:マハジオダイン
46:真理の雷
47:未使用
50:ハマ
51:ハマオン
52:マハンマ
53:マハンマオン
54:回転説法
56:コウハ
58:コウガオン
59:マハコウハ
60:マハコウガ
61:マハコウガオン
62:神の審判
63:未使用
64:ムド
66:マハムド
67:マハムドオン
68:死んでくれる？
69:未使用
70:エイハ
72:エイガオン
73:マハエイハ
75:マハエイガオン
76:悪魔の審判
77:未使用
78:メギド
80:メギドラオン
81:漆黒の蛇
82:明けの明星
83:未使用
84:未使用
85:ポイズマ
89:ネコダマシ
90:フラッシュノイズ
91:プリンパ
93:デビルタッチ
94:デビルスマイル
95:バリゾーゴン
96:終末の予言
101:淀んだ吐息
102:淀んだ空気
103:吸血
104:吸魔
105:ウィルスブレス
110:パワースラッシュ
111:デッドエンド
113:真空斬
117:空間殺法
120:残影
125:突撃
126:アサルトダイブ
129:金剛発破
130:ヒートウェイブ
132:アカシャアーツ
133:ソニックパンチ
139:シングルショット
140:エンジェルアロー
141:ミリオンシュート
143:アローシャワー
144:刹那五月雨撃
145:バスタアタック
146:イノセントタック
147:プララヤ
148:ポイズンアロー
155:ディア
160:メディア
170:パトラ
172:バイスディ
176:アムリタシャワー
181:ラクカジャ
184:未使用
185:マハタルカジャ
186:マハラクカジャ
187:マハスクカジャ
190:タルンダ
191:ラクンダ
192:スクンダ
196:マハラクンダ
197:マハスクンダ
198:ランダマイザ
199:未使用
205:チャージ
206:コンセントレイト
207:ブラッディチャージ
208:未使用
210:リベリオン
215:テトラカーン
216:マカラカーン
217:未使用
220:火炎ガードキル
221:氷結ガードキル
222:疾風ガードキル
223:電撃ガードキル
224:未使用
226:未使用
228:未使用
229:未使用
230:大罪の徹甲弾
231:エル・ジハード
232:真空波
233:大炎上
234:大氷河期
235:コズミックフレア
236:ワンショットキル
237:反逆の刃
238:マスカレイド
239:十文字斬り
240:マガツマンダラ
241:輝矢
242:未使用
250:(!)ショックノイズ
251:未使用
255:未使用
260:(!)カデンツァ
261:(!)ジャックブラザイズ
262:(!)おおさまとおいら
263:(!)ベストフレンド
264:(!)紅蓮華斬殺
265:(!)トリックスター
266:(!)ハルマゲドン
267:未使用
280:(!)サイクロンアロー
281:(!)バーストスイング
282:(!)ライトニングスフィア
283:(!)ブリザードイッジ
284:(!)オラクル
702:斬撃反射
703:斬撃吸収
715:火炎吸収
719:氷結吸収
720:疾風耐性
723:疾風吸收
727:電撃吸収
731:光吸収
735:闇吸収
736:未使用
746:混乱耐性
756:不動心
757:狀態異常耐性
758:未使用
759:斬撃見切リ
779:カウンタ
780:ヘビーカウンタ
781:ハイパーカウンタ
784:小治癒促進
786:大治癒促進
798:火炎ブースタ
799:火炎ハイブースタ
800:氷結ブースタ
801:氷結ハイブースタ
802:電撃ブースタ
803:電撃ハイブースタ
804:疾風ブースタ
805:疾風ハイブースタ
806:光ブースタ
807:光ハイブースタ
808:闇ブースタ
809:闇ハイブースタ
810:未使用
811:気絶率UP
814:動揺率UP
816:恐怖率UP
818:凍結率UP
819:感電率UP
820:狀態異常成功率UP
825:スクカジャオート
827:スクカジャオート
830:マハスクカオート
840:未使用
841:神々の加護
842:大天使の加護
843:大虎
844:明王の加護
846:ミドルグロウ
847:ハイグロウ
851:光からの生還
852:闇からの生還
862:未使用
863:万能ブースタ
864:万能ハイブースタ
865:魔導の才能
866:魔導の極意
867:未使用
</DropDownList>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_str_addr</Address>
          <Offsets>
            <Offset>-14</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>70</ID>
          <Description>"Skill #2"</Description>
          <DropDownListLink>Skill #1</DropDownListLink>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_str_addr</Address>
          <Offsets>
            <Offset>-12</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>71</ID>
          <Description>"Skill #3"</Description>
          <DropDownListLink>Skill #1</DropDownListLink>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_str_addr</Address>
          <Offsets>
            <Offset>-10</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>72</ID>
          <Description>"Skill #4"</Description>
          <DropDownListLink>Skill #1</DropDownListLink>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_str_addr</Address>
          <Offsets>
            <Offset>-E</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>73</ID>
          <Description>"Skill #5"</Description>
          <DropDownListLink>Skill #1</DropDownListLink>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_str_addr</Address>
          <Offsets>
            <Offset>-C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>74</ID>
          <Description>"Skill #6"</Description>
          <DropDownListLink>Skill #1</DropDownListLink>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_str_addr</Address>
          <Offsets>
            <Offset>-A</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>75</ID>
          <Description>"Skill #7"</Description>
          <DropDownListLink>Skill #1</DropDownListLink>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_str_addr</Address>
          <Offsets>
            <Offset>-8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>76</ID>
          <Description>"Skill #8"</Description>
          <DropDownListLink>Skill #1</DropDownListLink>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_str_addr</Address>
          <Offsets>
            <Offset>-6</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>108</ID>
      <Description>"Get day progress"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : P3R.exe
  Version: 
  Date   : 2024-02-05
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_DAY_PROGRESS,$process,0F B6 40 0C EB 02) // should be unique
alloc(newmem,$1000,INJECT_GET_DAY_PROGRESS)

label(code)
label(return)
label(i_base_day_data_addr)

newmem:
  mov [i_base_day_data_addr], rax

code:
  movzx eax,byte ptr [rax+0C]
  reassemble(INJECT_GET_DAY_PROGRESS+4)
  //jmp P3R.exe+A688009
  jmp return
align 10 cc
  i_base_day_data_addr:
  dq 0

INJECT_GET_DAY_PROGRESS:
  jmp newmem
  nop
return:
registersymbol(INJECT_GET_DAY_PROGRESS)
registersymbol(i_base_day_data_addr)

[DISABLE]

INJECT_GET_DAY_PROGRESS:
  db 0F B6 40 0C EB 02

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: P3R.exe+A688001

P3R.exe+A687FE0: 74 05                 - je P3R.exe+A687FE7
P3R.exe+A687FE2: 8B 48 08              - mov ecx,[rax+08]
P3R.exe+A687FE5: EB 02                 - jmp P3R.exe+A687FE9
P3R.exe+A687FE7: 31 C9                 - xor ecx,ecx
P3R.exe+A687FE9: 89 8F 8C 02 00 00     - mov [rdi+0000028C],ecx
P3R.exe+A687FEF: E8 6C C0 B3 F6        - call P3R.exe+11C4060
P3R.exe+A687FF4: 48 85 C0              - test rax,rax
P3R.exe+A687FF7: 74 0E                 - je P3R.exe+A688007
P3R.exe+A687FF9: 48 05 78 A3 00 00     - add rax,0000A378
P3R.exe+A687FFF: 74 06                 - je P3R.exe+A688007
// ---------- INJECTING HERE ----------
P3R.exe+A688001: 0F B6 40 0C           - movzx eax,byte ptr [rax+0C]
// ---------- DONE INJECTING  ----------
P3R.exe+A688005: EB 02                 - jmp P3R.exe+A688009
P3R.exe+A688007: B0 01                 - mov al,01
P3R.exe+A688009: 88 87 90 02 00 00     - mov [rdi+00000290],al
P3R.exe+A68800F: 0F B6 97 90 02 00 00  - movzx edx,byte ptr [rdi+00000290]
P3R.exe+A688016: 8B 8F 8C 02 00 00     - mov ecx,[rdi+0000028C]
P3R.exe+A68801C: 80 FA 09              - cmp dl,09
P3R.exe+A68801F: 75 30                 - jne P3R.exe+A688051
P3R.exe+A688021: 8D 59 01              - lea ebx,[rcx+01]
P3R.exe+A688024: E8 37 C0 B3 F6        - call P3R.exe+11C4060
P3R.exe+A688029: 48 85 C0              - test rax,rax
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>117</ID>
          <Description>"Quick get day progress"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : P3R.exe
  Version: 
  Date   : 2024-02-05
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_DAY_PROGRESS_M2,$process,0F B6 40 04 48 83 C4 28) // should be unique
alloc(newmem,$1000,INJECT_GET_DAY_PROGRESS_M2)

label(code)
label(return)

newmem:
  cmp qword ptr [i_base_day_data_addr], rax
  je code

  mov [i_base_day_data_addr], rax

code:
  movzx eax,byte ptr [rax+04]
  add rsp,28
  jmp return

INJECT_GET_DAY_PROGRESS_M2:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_GET_DAY_PROGRESS_M2)

[DISABLE]

INJECT_GET_DAY_PROGRESS_M2:
  db 0F B6 40 04 48 83 C4 28

unregistersymbol(INJECT_GET_DAY_PROGRESS_M2)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: P3R.exe+1026BB6

P3R.exe+1026B9C: CC                 - int 3 
P3R.exe+1026B9D: CC                 - int 3 
P3R.exe+1026B9E: CC                 - int 3 
P3R.exe+1026B9F: CC                 - int 3 
P3R.exe+1026BA0: 48 83 EC 28        - sub rsp,28
P3R.exe+1026BA4: E8 B7 D4 19 00     - call P3R.exe+11C4060
P3R.exe+1026BA9: 48 85 C0           - test rax,rax
P3R.exe+1026BAC: 74 11              - je P3R.exe+1026BBF
P3R.exe+1026BAE: 48 05 78 A3 00 00  - add rax,0000A378
P3R.exe+1026BB4: 74 09              - je P3R.exe+1026BBF
// ---------- INJECTING HERE ----------
P3R.exe+1026BB6: 0F B6 40 04        - movzx eax,byte ptr [rax+04]
// ---------- DONE INJECTING  ----------
P3R.exe+1026BBA: 48 83 C4 28        - add rsp,28
P3R.exe+1026BBE: C3                 - ret 
P3R.exe+1026BBF: B0 01              - mov al,01
P3R.exe+1026BC1: 48 83 C4 28        - add rsp,28
P3R.exe+1026BC5: C3                 - ret 
P3R.exe+1026BC6: CC                 - int 3 
P3R.exe+1026BC7: CC                 - int 3 
P3R.exe+1026BC8: CC                 - int 3 
P3R.exe+1026BC9: CC                 - int 3 
P3R.exe+1026BCA: CC                 - int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>109</ID>
          <Description>"Day ?"</Description>
          <DropDownList DisplayValueAsItem="1">68:6/8
</DropDownList>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_day_data_addr</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>112</ID>
          <Description>"=&gt; Time peroid #1?"</Description>
          <DropDownList DisplayValueAsItem="1">2:Morning / 早朝
4:noon break / 昼休み
6:after school / 放課後
7:Night / 夜
8:Dark Hour / 影時間
</DropDownList>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Byte</VariableType>
          <Address>i_base_day_data_addr</Address>
          <Offsets>
            <Offset>4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>113</ID>
          <Description>"??"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Byte</VariableType>
          <Address>i_base_day_data_addr</Address>
          <Offsets>
            <Offset>5</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>114</ID>
          <Description>"??"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Byte</VariableType>
          <Address>i_base_day_data_addr</Address>
          <Offsets>
            <Offset>6</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>115</ID>
          <Description>"??"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Byte</VariableType>
          <Address>i_base_day_data_addr</Address>
          <Offsets>
            <Offset>7</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>111</ID>
          <Description>"Day?"</Description>
          <DropDownListLink>Day ?</DropDownListLink>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_day_data_addr</Address>
          <Offsets>
            <Offset>8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>110</ID>
          <Description>"=&gt;Time peroid #2?"</Description>
          <DropDownList DisplayValueAsItem="1">3:Morning / 早朝
5:noon break / 昼休み
7:after school / 放課後
8:Night / 夜
9:Dark Hour / 影時間
</DropDownList>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_day_data_addr</Address>
          <Offsets>
            <Offset>C</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"Weapon Shop: money will not decrease"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : P3R.exe
  Version: 
  Date   : 2024-02-03
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_BUY_ITEM_SET_MONEY,$process,48 8B D9 41 B8 7F 96 98 00) // should be unique
alloc(newmem,$1000,INJECT_BUY_ITEM_SET_MONEY)

label(code)
label(return)

newmem:
  // abs edx
  mov ebx, edx
  neg edx
  cmovl edx, ebx
  //

code:
  mov rbx,rcx
  mov r8d,0098967F
  jmp return

INJECT_BUY_ITEM_SET_MONEY:
  jmp newmem
  nop 4
return:
registersymbol(INJECT_BUY_ITEM_SET_MONEY)

[DISABLE]

INJECT_BUY_ITEM_SET_MONEY:
  db 48 8B D9 41 B8 7F 96 98 00

unregistersymbol(INJECT_BUY_ITEM_SET_MONEY)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: P3R.exe+11B8706

P3R.exe+11B86F8: CC                 - int 3 
P3R.exe+11B86F9: CC                 - int 3 
P3R.exe+11B86FA: CC                 - int 3 
P3R.exe+11B86FB: CC                 - int 3 
P3R.exe+11B86FC: CC                 - int 3 
P3R.exe+11B86FD: CC                 - int 3 
P3R.exe+11B86FE: CC                 - int 3 
P3R.exe+11B86FF: CC                 - int 3 
P3R.exe+11B8700: 40 53              - push rbx
P3R.exe+11B8702: 48 83 EC 20        - sub rsp,20
// ---------- INJECTING HERE ----------
P3R.exe+11B8706: 48 8B D9           - mov rbx,rcx
// ---------- DONE INJECTING  ----------
P3R.exe+11B8709: 41 B8 7F 96 98 00  - mov r8d,0098967F
P3R.exe+11B870F: 8B 89 F8 3C 00 00  - mov ecx,[rcx+00003CF8]
P3R.exe+11B8715: 03 CA              - add ecx,edx
P3R.exe+11B8717: 33 D2              - xor edx,edx
P3R.exe+11B8719: E8 C2 10 EB FF     - call P3R.exe+10697E0
P3R.exe+11B871E: 89 83 F8 3C 00 00  - mov [rbx+00003CF8],eax
P3R.exe+11B8724: 48 83 C4 20        - add rsp,20
P3R.exe+11B8728: 5B                 - pop rbx
P3R.exe+11B8729: C3                 - ret 
P3R.exe+11B872A: CC                 - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>129</ID>
      <Description>"Commu+"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>124</ID>
          <Description>"** may not triggered every time"</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>122</ID>
          <Description>"Commu: pt. multiplier for event, interception point #1"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : P3R.exe
  Version: 
  Date   : 2024-02-06
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_COMMU_EXTRA_GAIN1,$process,66 44 03 C3 66 45 89 81 26 01 00 00) // should be unique
alloc(newmem,$1000,INJECT_COMMU_EXTRA_GAIN1)

label(code)
label(return)
label(vf_commu_gain_multi)
label(i_last_commu_addr1)

newmem:
  mov [i_last_commu_addr1], r9

  push rcx
  xor rcx, rcx
  mov cx, bx

  vcvtsi2ss xmm15, xmm15, ecx
  vmovss xmm14, [vf_commu_gain_multi]
  vmulss xmm15, xmm14, xmm15
  vcvtss2si ecx, xmm15

  cmp ecx, #10000
  jbe last_p
  mov cx, #10000

last_p:
  mov bx, cx

  pop rcx

code:
  add r8w,bx
  mov [r9+00000126],r8w
  jmp return
align 10 cc
  vf_commu_gain_multi:
  dd (float)1.25
  i_last_commu_addr1:
  dq 0

INJECT_COMMU_EXTRA_GAIN1:
  jmp newmem
  nop 7
return:
registersymbol(INJECT_COMMU_EXTRA_GAIN1)
registersymbol(vf_commu_gain_multi)
registersymbol(i_last_commu_addr1)

[DISABLE]

INJECT_COMMU_EXTRA_GAIN1:
  db 66 44 03 C3 66 45 89 81 26 01 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: P3R.exe+106E32A

P3R.exe+106E305: 48 05 70 15 01 00        - add rax,00011570
P3R.exe+106E30B: 83 FF 19                 - cmp edi,19
P3R.exe+106E30E: 73 39                    - jae P3R.exe+106E349
P3R.exe+106E310: BA FF FF 00 00           - mov edx,0000FFFF
P3R.exe+106E315: 4C 8D 0C 78              - lea r9,[rax+rdi*2]
P3R.exe+106E319: 45 0F B7 81 26 01 00 00  - movzx r8d,word ptr [r9+00000126]
P3R.exe+106E321: 8B CA                    - mov ecx,edx
P3R.exe+106E323: 2B CB                    - sub ecx,ebx
P3R.exe+106E325: 44 3B C1                 - cmp r8d,ecx
P3R.exe+106E328: 7F 17                    - jg P3R.exe+106E341
// ---------- INJECTING HERE ----------
P3R.exe+106E32A: 66 44 03 C3              - add r8w,bx
// ---------- DONE INJECTING  ----------
P3R.exe+106E32E: 66 45 89 81 26 01 00 00  - mov [r9+00000126],r8w
P3R.exe+106E336: 48 8B 5C 24 30           - mov rbx,[rsp+30]
P3R.exe+106E33B: 48 83 C4 20              - add rsp,20
P3R.exe+106E33F: 5F                       - pop rdi
P3R.exe+106E340: C3                       - ret 
P3R.exe+106E341: 66 41 89 91 26 01 00 00  - mov [r9+00000126],dx
P3R.exe+106E349: 48 8B 5C 24 30           - mov rbx,[rsp+30]
P3R.exe+106E34E: 48 83 C4 20              - add rsp,20
P3R.exe+106E352: 5F                       - pop rdi
P3R.exe+106E353: C3                       - ret 
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>123</ID>
              <Description>"multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>Float</VariableType>
              <Address>vf_commu_gain_multi</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>126</ID>
              <Description>"Last commu pt."</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>i_last_commu_addr1</Address>
              <Offsets>
                <Offset>126</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>119</ID>
          <Description>"Commu: Extra pt. for event, interception point #2"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : P3R.exe
  Version: 
  Date   : 2024-02-06
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_COMMU_EXTRA_GAIN,$process,41 0F B7 04 10 66 41 89 04 08 C3 CC CC CC CC CC CC CC CC CC CC CC CC CC 40) // should be unique
alloc(newmem,$1000,INJECT_COMMU_EXTRA_GAIN)

label(code)
label(return)
label(i_commu_extra_gain)
label(i_last_commu_addr)

newmem:
  push rdx
  push rbx
  push rcx

  lea rbx, [r8+rdx]

  mov [i_last_commu_addr], rbx

  mov cx, [rbx]
  add cx, [i_commu_extra_gain]
  mov [rbx], cx

  pop rcx
  pop rbx
  pop rdx

code:
  movzx eax,word ptr [r8+rdx]
  jmp return
align 10 cc
  i_commu_extra_gain:
  dw B
  i_last_commu_addr:
  dq 0

INJECT_COMMU_EXTRA_GAIN:
  jmp newmem
return:
registersymbol(INJECT_COMMU_EXTRA_GAIN)
registersymbol(i_commu_extra_gain)
registersymbol(i_last_commu_addr)

[DISABLE]

INJECT_COMMU_EXTRA_GAIN:
  db 41 0F B7 04 10

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: P3R.exe+1070C98

P3R.exe+1070C70: C7 04 51 00 00 00 00     - mov [rcx+rdx*2],00000000
P3R.exe+1070C77: 66 C7 44 51 04 00 00     - mov word ptr [rcx+rdx*2+04],0000
P3R.exe+1070C7E: C3                       - ret 
P3R.exe+1070C7F: CC                       - int 3 
P3R.exe+1070C80: 48 63 02                 - movsxd  rax,dword ptr [rdx]
P3R.exe+1070C83: 4C 8D 04 45 1E 0C 00 00  - lea r8,[rax*2+00000C1E]
P3R.exe+1070C8B: 48 8B 41 08              - mov rax,[rcx+08]
P3R.exe+1070C8F: 48 8B 10                 - mov rdx,[rax]
P3R.exe+1070C92: 48 8B 01                 - mov rax,[rcx]
P3R.exe+1070C95: 48 8B 08                 - mov rcx,[rax]
// ---------- INJECTING HERE ----------
P3R.exe+1070C98: 41 0F B7 04 10           - movzx eax,word ptr [r8+rdx]
// ---------- DONE INJECTING  ----------
P3R.exe+1070C9D: 66 41 89 04 08           - mov [r8+rcx],ax
P3R.exe+1070CA2: C3                       - ret 
P3R.exe+1070CA3: CC                       - int 3 
P3R.exe+1070CA4: CC                       - int 3 
P3R.exe+1070CA5: CC                       - int 3 
P3R.exe+1070CA6: CC                       - int 3 
P3R.exe+1070CA7: CC                       - int 3 
P3R.exe+1070CA8: CC                       - int 3 
P3R.exe+1070CA9: CC                       - int 3 
P3R.exe+1070CAA: CC                       - int 3 
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>125</ID>
              <Description>"** Please disable it before the time period ends, "</Description>
              <Color>8000FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>128</ID>
              <Description>"otherwise it will affect every commu"</Description>
              <Color>8000FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>120</ID>
              <Description>"Extra pt"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>i_commu_extra_gain</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>127</ID>
              <Description>"Last commu pt."</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>i_last_commu_addr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>47</ID>
      <Description>"(2024/02/06 v5) Persona 3 Reload  /  https://opencheattables.com  /  CE 7.5+"</Description>
      <Color>00BB00</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>AddressList.Header.OnSectionClick = nil

</LuaScript>
</CheatTable>
