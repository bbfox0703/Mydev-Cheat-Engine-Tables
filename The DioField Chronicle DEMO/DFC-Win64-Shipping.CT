<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="42">
  <CheatEntries>
    <CheatEntry>
      <ID>6</ID>
      <Description>"HP (may not fully work)"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DFC-Win64-Shipping.exe
  Version: 
  Date   : 2022-09-01
  Author : bbfox@https://opencheattables.com
}
{$STRICT}
[ENABLE]
{$asm}
aobscanmodule(INJECT_SET_HP,DFC-Win64-Shipping.exe,48 8B 43 48 42 8B 0C 81) // should be unique
alloc(newmem,$1000,INJECT_SET_HP)

label(code)
label(return)
label(vf_damage_factor_multi)

label(endp)
label(i_buf1)
label(i_buf2)

newmem:

  push r14
  mov r14, [rbx+68]
  test r14, r14
  jz endp
  mov r14d, [r14+28]
  cmp r14d, #16
  ja endp

  mov r14, [rbx+28]
  test r14, r14
  jz endp
  //mov r14d, [r14]
  //mov [i_buf1], r14d

  mov r14, [rbx+38]
  test r14, r14
  jz endp
  //mov r14d, [r14+10]
  //cmp r14d, [i_buf1]
  //jne endp



  //mov r14, [rbx+28]
  //mov r14d, [rbx+10]
  //cmp r14d, 006F004E
  //jne endp


  {
  mov r14, [rbx+28]
  mov r14d, [r14]
  mov [i_buf2], r14d
  mov r14, [rbx+48]
  mov r14d, [r14+40]
  cmp r14d, [i_buf2]
  jne endp
  }

  cvtsi2ss xmm15, r11d
  vmovss xmm14, [vf_damage_factor_multi]
  vmulss xmm13, xmm14, xmm15
  cvtss2si r11d, xmm13

  mov r11d, 0


endp:
  pop r14

code:
  mov rax,[rbx+48]
  mov ecx,[rcx+r8*4]
  jmp return
align 10 cc
  i_buf1:
  dd 0
  i_buf2:
  dd 0
  vf_damage_factor_multi:
  dd (float)0.3222222222222222

INJECT_SET_HP:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_SET_HP)
registersymbol(vf_damage_factor_multi)

[DISABLE]

INJECT_SET_HP:
  db 48 8B 43 48 42 8B 0C 81

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: DFC-Win64-Shipping.exe+DC411D

DFC-Win64-Shipping.exe+DC40FA: 4C 63 53 5C  - movsxd  r10,dword ptr [rbx+5C]
DFC-Win64-Shipping.exe+DC40FE: 8B 53 60     - mov edx,[rbx+60]
DFC-Win64-Shipping.exe+DC4101: 44 3B D2     - cmp r10d,edx
DFC-Win64-Shipping.exe+DC4104: 48 8B 4B 28  - mov rcx,[rbx+28]
DFC-Win64-Shipping.exe+DC4108: 44 8D 4A FF  - lea r9d,[rdx-01]
DFC-Win64-Shipping.exe+DC410C: 41 8B C1     - mov eax,r9d
DFC-Win64-Shipping.exe+DC410F: 45 0F 4C CA  - cmovl r9d,r10d
DFC-Win64-Shipping.exe+DC4113: 41 0F 4C C2  - cmovl eax,r10d
DFC-Win64-Shipping.exe+DC4117: 49 63 D1     - movsxd  rdx,r9d
DFC-Win64-Shipping.exe+DC411A: 4C 63 C0     - movsxd  r8,eax
// ---------- INJECTING HERE ----------
DFC-Win64-Shipping.exe+DC411D: 48 8B 43 48  - mov rax,[rbx+48]
// ---------- DONE INJECTING  ----------
DFC-Win64-Shipping.exe+DC4121: 42 8B 0C 81  - mov ecx,[rcx+r8*4]
DFC-Win64-Shipping.exe+DC4125: 8B 14 90     - mov edx,[rax+rdx*4]
DFC-Win64-Shipping.exe+DC4128: 48 8B 43 38  - mov rax,[rbx+38]
DFC-Win64-Shipping.exe+DC412C: 03 D1        - add edx,ecx
DFC-Win64-Shipping.exe+DC412E: 46 8B 04 90  - mov r8d,[rax+r10*4]
DFC-Win64-Shipping.exe+DC4132: 45 2B C3     - sub r8d,r11d
DFC-Win64-Shipping.exe+DC4135: 79 06        - jns DFC-Win64-Shipping.exe+DC413D
DFC-Win64-Shipping.exe+DC4137: 42 89 3C 90  - mov [rax+r10*4],edi
DFC-Win64-Shipping.exe+DC413B: EB 0F        - jmp DFC-Win64-Shipping.exe+DC414C
DFC-Win64-Shipping.exe+DC413D: 44 3B C2     - cmp r8d,edx
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Damage to player multiplier"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>vf_damage_factor_multi</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"EP"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DFC-Win64-Shipping.exe
  Version: 
  Date   : 2022-09-01
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_SET_EP2,DFC-Win64-Shipping.exe,8B 51 2C 2B D0 78) // should be unique
alloc(newmem,$1000,INJECT_SET_EP2)

label(code)
label(return)

newmem:
  push r14

  mov r14d, [rcx+8]
  test r14d, r14d
  jnz endp
  mov r14d, [rcx+38]
  test r14d, r14d
  jnz endp

  mov r14d, [rcx+3C]
  test r14d, r14d
  jnz endp
  mov eax, 0

endp:
  pop r14

code:
  mov edx,[rcx+2C]
  sub edx,eax
  jmp return

INJECT_SET_EP2:
  jmp newmem
return:
registersymbol(INJECT_SET_EP2)

[DISABLE]

INJECT_SET_EP2:
  db 8B 51 2C 2B D0

unregistersymbol(INJECT_SET_EP2)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: DFC-Win64-Shipping.exe+DC4979

DFC-Win64-Shipping.exe+DC4964: 8B C2           - mov eax,edx
DFC-Win64-Shipping.exe+DC4966: 99              - cdq 
DFC-Win64-Shipping.exe+DC4967: 33 C2           - xor eax,edx
DFC-Win64-Shipping.exe+DC4969: 2B C2           - sub eax,edx
DFC-Win64-Shipping.exe+DC496B: 79 0C           - jns DFC-Win64-Shipping.exe+DC4979
DFC-Win64-Shipping.exe+DC496D: 99              - cdq 
DFC-Win64-Shipping.exe+DC496E: 33 C2           - xor eax,edx
DFC-Win64-Shipping.exe+DC4970: 2B C2           - sub eax,edx
DFC-Win64-Shipping.exe+DC4972: 8B D0           - mov edx,eax
DFC-Win64-Shipping.exe+DC4974: E9 47 F3 FF FF  - jmp DFC-Win64-Shipping.exe+DC3CC0
// ---------- INJECTING HERE ----------
DFC-Win64-Shipping.exe+DC4979: 8B 51 2C        - mov edx,[rcx+2C]
// ---------- DONE INJECTING  ----------
DFC-Win64-Shipping.exe+DC497C: 2B D0           - sub edx,eax
DFC-Win64-Shipping.exe+DC497E: 78 18           - js DFC-Win64-Shipping.exe+DC4998
DFC-Win64-Shipping.exe+DC4980: 8B 41 38        - mov eax,[rcx+38]
DFC-Win64-Shipping.exe+DC4983: 03 41 28        - add eax,[rcx+28]
DFC-Win64-Shipping.exe+DC4986: 3B D0           - cmp edx,eax
DFC-Win64-Shipping.exe+DC4988: 0F 4C C2        - cmovl eax,edx
INJECT_SET_EP: 89 41 2C        - mov [rcx+2C],eax
DFC-Win64-Shipping.exe+DC498E: C3              - ret 
DFC-Win64-Shipping.exe+DC498F: 44 8B 41 2C     - mov r8d,[rcx+2C]
DFC-Win64-Shipping.exe+DC4993: 44 03 C2        - add r8d,edx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"Set min. SP (When spend)"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DFC-Win64-Shipping.exe
  Version: 
  Date   : 2022-09-06
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_INF_SP,DFC-Win64-Shipping.exe,89 9F DC 00 00 00 48) // should be unique
alloc(newmem,$1000,INJECT_INF_SP)

label(code)
label(return)
label(i_min_sp)

newmem:
  cmp ebx, [i_min_sp]
  jae code
  mov ebx, [i_min_sp]
code:
  mov [rdi+000000DC],ebx
  jmp return
align 10 cc
  i_min_sp:
  dd #10

INJECT_INF_SP:
  jmp newmem
  nop
return:
registersymbol(INJECT_INF_SP)
registersymbol(i_min_sp)
[DISABLE]

INJECT_INF_SP:
  db 89 9F DC 00 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: DFC-Win64-Shipping.exe+B8462DD

DFC-Win64-Shipping.exe+B8462BA: 89 FB                 - mov ebx,edi
DFC-Win64-Shipping.exe+B8462BC: EB 0A                 - jmp DFC-Win64-Shipping.exe+B8462C8
DFC-Win64-Shipping.exe+B8462BE: BB 3F 42 0F 00        - mov ebx,000F423F
DFC-Win64-Shipping.exe+B8462C3: 39 DE                 - cmp esi,ebx
DFC-Win64-Shipping.exe+B8462C5: 0F 4C DE              - cmovl ebx,esi
DFC-Win64-Shipping.exe+B8462C8: E8 D3 CA 4A F5        - call DFC-Win64-Shipping.exe+CF2DA0
DFC-Win64-Shipping.exe+B8462CD: 84 C0                 - test al,al
DFC-Win64-Shipping.exe+B8462CF: 74 0C                 - je DFC-Win64-Shipping.exe+B8462DD
DFC-Win64-Shipping.exe+B8462D1: E8 FA C2 4B F5        - call DFC-Win64-Shipping.exe+D025D0
DFC-Win64-Shipping.exe+B8462D6: 48 8B B8 08 02 00 00  - mov rdi,[rax+00000208]
// ---------- INJECTING HERE ----------
DFC-Win64-Shipping.exe+B8462DD: 89 9F DC 00 00 00     - mov [rdi+000000DC],ebx
// ---------- DONE INJECTING  ----------
DFC-Win64-Shipping.exe+B8462E3: 48 8B 7C 24 38        - mov rdi,[rsp+38]
DFC-Win64-Shipping.exe+B8462E8: 48 8B 5C 24 30        - mov rbx,[rsp+30]
DFC-Win64-Shipping.exe+B8462ED: 48 83 C4 20           - add rsp,20
DFC-Win64-Shipping.exe+B8462F1: 5E                    - pop rsi
DFC-Win64-Shipping.exe+B8462F2: C3                    - ret 
DFC-Win64-Shipping.exe+B8462F3: CC                    - int 3 
DFC-Win64-Shipping.exe+B8462F4: 09 81 0C 00 00 00     - or [rcx+0000000C],eax
DFC-Win64-Shipping.exe+B8462FA: 00 00                 - add [rax],al
DFC-Win64-Shipping.exe+B8462FC: 1D 86 74 52 01        - sbb eax,01527486
DFC-Win64-Shipping.exe+B846301: 00 00                 - add [rax],al
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>24</ID>
          <Description>"Min. SP"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_min_sp</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>22</ID>
      <Description>"Min. 20 AP (Usage: when spend)"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DFC-Win64-Shipping.exe
  Version: 
  Date   : 2022-09-06
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_INF_AP,DFC-Win64-Shipping.exe,89 59 58 48 8B 74 24 30) // should be unique
alloc(newmem,$1000,INJECT_INF_AP)

label(code)
label(return)
label(i_min_ap)
newmem:
  cmp ebx, [i_min_ap]
  jae code
  mov ebx, [i_min_ap]

code:
  mov [rcx+58],ebx
  mov rsi,[rsp+30]
  jmp return
align 10 cc
  i_min_ap:
  dd #20

INJECT_INF_AP:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_INF_AP)

[DISABLE]

INJECT_INF_AP:
  db 89 59 58 48 8B 74 24 30

unregistersymbol(INJECT_INF_AP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: DFC-Win64-Shipping.exe+B75906

DFC-Win64-Shipping.exe+B758E7: 7E 20                 - jle DFC-Win64-Shipping.exe+B75909
DFC-Win64-Shipping.exe+B758E9: 48 98                 - cdqe 
DFC-Win64-Shipping.exe+B758EB: 48 6B C8 78           - imul rcx,rax,78
DFC-Win64-Shipping.exe+B758EF: 48 03 8E 80 01 00 00  - add rcx,[rsi+00000180]
DFC-Win64-Shipping.exe+B758F6: 85 FF                 - test edi,edi
DFC-Win64-Shipping.exe+B758F8: 78 0C                 - js DFC-Win64-Shipping.exe+B75906
DFC-Win64-Shipping.exe+B758FA: B8 3F 42 0F 00        - mov eax,000F423F
DFC-Win64-Shipping.exe+B758FF: 3B F8                 - cmp edi,eax
DFC-Win64-Shipping.exe+B75901: 0F 4C C7              - cmovl eax,edi
DFC-Win64-Shipping.exe+B75904: 8B D8                 - mov ebx,eax
// ---------- INJECTING HERE ----------
DFC-Win64-Shipping.exe+B75906: 89 59 58              - mov [rcx+58],ebx
// ---------- DONE INJECTING  ----------
DFC-Win64-Shipping.exe+B75909: 48 8B 74 24 30        - mov rsi,[rsp+30]
DFC-Win64-Shipping.exe+B7590E: 8B CD                 - mov ecx,ebp
DFC-Win64-Shipping.exe+B75910: 48 8B 5C 24 38        - mov rbx,[rsp+38]
DFC-Win64-Shipping.exe+B75915: 48 8B 6C 24 40        - mov rbp,[rsp+40]
DFC-Win64-Shipping.exe+B7591A: 48 83 C4 20           - add rsp,20
DFC-Win64-Shipping.exe+B7591E: 5F                    - pop rdi
DFC-Win64-Shipping.exe+B7591F: E9 DC 28 01 00        - jmp DFC-Win64-Shipping.exe+B88200
DFC-Win64-Shipping.exe+B75924: CC                    - int 3 
DFC-Win64-Shipping.exe+B75925: CC                    - int 3 
DFC-Win64-Shipping.exe+B75926: CC                    - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>23</ID>
      <Description>"Set min. AP (Usage: Edit equips before battle)"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DFC-Win64-Shipping.exe
  Version: 
  Date   : 2022-09-06
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_BROWSE_AP,DFC-Win64-Shipping.exe,8B 43 58 48 8D 53 60 89) // should be unique
alloc(newmem,$1000,INJECT_BROWSE_AP)

label(code)
label(return)
label(i_min_ap_b)

newmem:
  mov eax,[rbx+58]
  cmp eax, [i_min_ap_b]
  jae code
  mov eax, [i_min_ap_b]
  mov [rbx+58],eax

code:
  mov eax,[rbx+58]
  lea rdx,[rbx+60]
  jmp return
align 10 cc
  i_min_ap_b:
  dd #20

INJECT_BROWSE_AP:
  jmp newmem
  nop 2
return:
registersymbol(INJECT_BROWSE_AP)
registersymbol(i_min_ap_b)
[DISABLE]

INJECT_BROWSE_AP:
  db 8B 43 58 48 8D 53 60

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: DFC-Win64-Shipping.exe+B5F79FC

DFC-Win64-Shipping.exe+B5F79D0: E8 7B 09 3F F5  - call DFC-Win64-Shipping.exe+9E8350
DFC-Win64-Shipping.exe+B5F79D5: 48 8D 53 28     - lea rdx,[rbx+28]
DFC-Win64-Shipping.exe+B5F79D9: 48 8D 4F 28     - lea rcx,[rdi+28]
DFC-Win64-Shipping.exe+B5F79DD: E8 6E 09 3F F5  - call DFC-Win64-Shipping.exe+9E8350
DFC-Win64-Shipping.exe+B5F79E2: 48 8D 53 38     - lea rdx,[rbx+38]
DFC-Win64-Shipping.exe+B5F79E6: 48 8D 4F 38     - lea rcx,[rdi+38]
DFC-Win64-Shipping.exe+B5F79EA: E8 61 09 3F F5  - call DFC-Win64-Shipping.exe+9E8350
DFC-Win64-Shipping.exe+B5F79EF: 48 8D 53 48     - lea rdx,[rbx+48]
DFC-Win64-Shipping.exe+B5F79F3: 48 8D 4F 48     - lea rcx,[rdi+48]
DFC-Win64-Shipping.exe+B5F79F7: E8 54 09 3F F5  - call DFC-Win64-Shipping.exe+9E8350
// ---------- INJECTING HERE ----------
DFC-Win64-Shipping.exe+B5F79FC: 8B 43 58        - mov eax,[rbx+58]
// ---------- DONE INJECTING  ----------
DFC-Win64-Shipping.exe+B5F79FF: 48 8D 53 60     - lea rdx,[rbx+60]
DFC-Win64-Shipping.exe+B5F7A03: 89 47 58        - mov [rdi+58],eax
DFC-Win64-Shipping.exe+B5F7A06: 48 8D 4F 60     - lea rcx,[rdi+60]
DFC-Win64-Shipping.exe+B5F7A0A: 8B 43 5C        - mov eax,[rbx+5C]
DFC-Win64-Shipping.exe+B5F7A0D: 89 47 5C        - mov [rdi+5C],eax
DFC-Win64-Shipping.exe+B5F7A10: E8 3B 09 3F F5  - call DFC-Win64-Shipping.exe+9E8350
DFC-Win64-Shipping.exe+B5F7A15: 0F B6 43 70     - movzx eax,byte ptr [rbx+70]
DFC-Win64-Shipping.exe+B5F7A19: 48 8B 5C 24 30  - mov rbx,[rsp+30]
DFC-Win64-Shipping.exe+B5F7A1E: 88 47 70        - mov [rdi+70],al
DFC-Win64-Shipping.exe+B5F7A21: B0 01           - mov al,01
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>25</ID>
          <Description>"Set min. AP"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_min_ap_b</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"Get money / SP (Usage: buy/sell in shop)"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DFC-Win64-Shipping.exe
  Version: 
  Date   : 2022-09-01
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_MIN_MONEY,DFC-Win64-Shipping.exe,89 B8 D8 00 00 00 E8) // should be unique
alloc(newmem,$1000,INJECT_MIN_MONEY)

label(code)
label(return)
label(i_base_data_addr)

newmem:
  mov [i_base_data_addr], eax

code:
  mov [rax+000000D8],edi
  jmp return
align 10 cc
  i_base_data_addr:
  dq 0

INJECT_MIN_MONEY:
  jmp newmem
  nop
return:
registersymbol(INJECT_MIN_MONEY)
registersymbol(i_base_data_addr)

[DISABLE]

INJECT_MIN_MONEY:
  db 89 B8 D8 00 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: DFC-Win64-Shipping.exe+B8145DD

DFC-Win64-Shipping.exe+B8145B9: BF 3F 42 0F 00           - mov edi,000F423F
DFC-Win64-Shipping.exe+B8145BE: 39 FE                    - cmp esi,edi
DFC-Win64-Shipping.exe+B8145C0: 0F 4C FE                 - cmovl edi,esi
DFC-Win64-Shipping.exe+B8145C3: E8 D8 E7 4D F5           - call DFC-Win64-Shipping.exe+CF2DA0
DFC-Win64-Shipping.exe+B8145C8: 84 C0                    - test al,al
DFC-Win64-Shipping.exe+B8145CA: 75 05                    - jne DFC-Win64-Shipping.exe+B8145D1
DFC-Win64-Shipping.exe+B8145CC: 48 89 D8                 - mov rax,rbx
DFC-Win64-Shipping.exe+B8145CF: EB 0C                    - jmp DFC-Win64-Shipping.exe+B8145DD
DFC-Win64-Shipping.exe+B8145D1: E8 FA DF 4E F5           - call DFC-Win64-Shipping.exe+D025D0
DFC-Win64-Shipping.exe+B8145D6: 48 8B 80 08 02 00 00     - mov rax,[rax+00000208]
// ---------- INJECTING HERE ----------
DFC-Win64-Shipping.exe+B8145DD: 89 B8 D8 00 00 00        - mov [rax+000000D8],edi
// ---------- DONE INJECTING  ----------
DFC-Win64-Shipping.exe+B8145E3: E8 B8 E7 4D F5           - call DFC-Win64-Shipping.exe+CF2DA0
DFC-Win64-Shipping.exe+B8145E8: 84 C0                    - test al,al
DFC-Win64-Shipping.exe+B8145EA: 74 37                    - je DFC-Win64-Shipping.exe+B814623
DFC-Win64-Shipping.exe+B8145EC: E8 DF DF 4E F5           - call DFC-Win64-Shipping.exe+D025D0
DFC-Win64-Shipping.exe+B8145F1: 48 83 B8 08 02 00 00 00  - cmp qword ptr [rax+00000208],00
DFC-Win64-Shipping.exe+B8145F9: 74 28                    - je DFC-Win64-Shipping.exe+B814623
DFC-Win64-Shipping.exe+B8145FB: E8 A0 E7 4D F5           - call DFC-Win64-Shipping.exe+CF2DA0
DFC-Win64-Shipping.exe+B814600: 84 C0                    - test al,al
DFC-Win64-Shipping.exe+B814602: 75 0B                    - jne DFC-Win64-Shipping.exe+B81460F
DFC-Win64-Shipping.exe+B814604: 8B BB D8 00 00 00        - mov edi,[rbx+000000D8]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Money"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_data_addr</Address>
          <Offsets>
            <Offset>D8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"SP"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_data_addr</Address>
          <Offsets>
            <Offset>DC</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"The DioField Chronicle DEMO /  https://opencheattables.com  /  CE 7.4+"</Description>
      <Color>400080</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
