<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>32</ID>
      <Description>"Compact mode"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
--https://forum.cheatengine.org/viewtopic.php?t=570055
LuaCall(function cycleFullCompact(sender,force) local state = not(compactmenuitem.Caption == 'Compact View Mode'); if force~=nil then state = not force end; compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'; getMainForm().Splitter1.Visible = state; getMainForm().Panel4.Visible    = state; getMainForm().Panel5.Visible    = state; end; function addCompactMenu() if compactmenualreadyexists then return end; local parent = getMainForm().Menu.Items; compactmenuitem = createMenuItem(parent); parent.add(compactmenuitem); compactmenuitem.Caption = 'Compact View Mode'; compactmenuitem.OnClick = cycleFullCompact; compactmenualreadyexists = 'yes'; end; addCompactMenu(); cycleFullCompact(nil,true))

[DISABLE]
LuaCall(cycleFullCompact(nil,false))

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"Battle: inf. CP"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed8_3_PC_JP.exe
  Version: 
  Date   : 2024-03-27
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_INF_CP,$process,0F B7 83 70 03 00 00 33) // should be unique
alloc(newmem,$1000,INJECT_INF_CP)

aobscanmodule(INJECT_INF_CP2,$process,66 89 93 70 03 00 00) // should be unique
alloc(newmem2,$1000,INJECT_INF_CP2)

label(code)
label(return)

label(code2)
label(return2)

newmem:
  cmp byte ptr [rbx+360], 0
  jne code
  mov ax, [rbx+00000372]
  mov [rbx+00000372], ax

code:
  movzx eax,word ptr [rbx+00000370]
  jmp return

INJECT_INF_CP:
  jmp newmem
  nop 2
return:
registersymbol(INJECT_INF_CP)


newmem2:
  cmp byte ptr [rbx+360], 0
  jne code2
  mov dx, [rbx+00000372]
code2:
  mov [rbx+00000370],dx
  jmp return2

INJECT_INF_CP2:
  jmp newmem2
  nop 2
return2:
registersymbol(INJECT_INF_CP2)
[DISABLE]

INJECT_INF_CP:
  db 0F B7 83 70 03 00 00

INJECT_INF_CP2:
  db 66 89 93 70 03 00 00

unregistersymbol(INJECT_INF_CP)
dealloc(newmem)

unregistersymbol(INJECT_INF_CP2)
dealloc(newmem2)
{
// ORIGINAL CODE - INJECTION POINT: ed8_3_PC_JP.exe+152DB4

ed8_3_PC_JP.exe+152D89: 74 29                          - je ed8_3_PC_JP.exe+152DB4
ed8_3_PC_JP.exe+152D8B: 0F 1F 44 00 00                 - nop dword ptr [rax+rax+00]
ed8_3_PC_JP.exe+152D90: 0F B7 93 32 04 00 00           - movzx edx,word ptr [rbx+00000432]
ed8_3_PC_JP.exe+152D97: 48 8B 4B 08                    - mov rcx,[rbx+08]
ed8_3_PC_JP.exe+152D9B: E8 20 15 04 00                 - call ed8_3_PC_JP.exe+1942C0
ed8_3_PC_JP.exe+152DA0: 48 85 C0                       - test rax,rax
ed8_3_PC_JP.exe+152DA3: 74 0F                          - je ed8_3_PC_JP.exe+152DB4
ed8_3_PC_JP.exe+152DA5: F7 80 60 03 00 00 00 00 20 00  - test [rax+00000360],00200000
ed8_3_PC_JP.exe+152DAF: 48 8B D8                       - mov rbx,rax
ed8_3_PC_JP.exe+152DB2: 75 DC                          - jne ed8_3_PC_JP.exe+152D90
// ---------- INJECTING HERE ----------
ed8_3_PC_JP.exe+152DB4: 0F B7 83 70 03 00 00           - movzx eax,word ptr [rbx+00000370]
// ---------- DONE INJECTING  ----------
ed8_3_PC_JP.exe+152DBB: 33 C9                          - xor ecx,ecx
ed8_3_PC_JP.exe+152DBD: 0F B7 93 72 03 00 00           - movzx edx,word ptr [rbx+00000372]
ed8_3_PC_JP.exe+152DC4: 2B C7                          - sub eax,edi
ed8_3_PC_JP.exe+152DC6: 85 C0                          - test eax,eax
ed8_3_PC_JP.exe+152DC8: 0F 4F C8                       - cmovg ecx,eax
ed8_3_PC_JP.exe+152DCB: 3B CA                          - cmp ecx,edx
ed8_3_PC_JP.exe+152DCD: 66 0F 4C D1                    - cmovl dx,cx
ed8_3_PC_JP.exe+152DD1: 66 89 93 70 03 00 00           - mov [rbx+00000370],dx
ed8_3_PC_JP.exe+152DD8: 48 8B 5C 24 30                 - mov rbx,[rsp+30]
ed8_3_PC_JP.exe+152DDD: 48 83 C4 20                    - add rsp,20
}


{
// ORIGINAL CODE - INJECTION POINT: ed8_3_PC_JP.exe+152DD1

ed8_3_PC_JP.exe+152DB2: 75 DC                 - jne ed8_3_PC_JP.exe+152D90
INJECT_INF_CP: E9 47 D2 E6 FF        - jmp 13FFC0000
ed8_3_PC_JP.exe+152DB9: 66 90                 - nop 2
ed8_3_PC_JP.exe+152DBB: 33 C9                 - xor ecx,ecx
ed8_3_PC_JP.exe+152DBD: 0F B7 93 72 03 00 00  - movzx edx,word ptr [rbx+00000372]
ed8_3_PC_JP.exe+152DC4: 2B C7                 - sub eax,edi
ed8_3_PC_JP.exe+152DC6: 85 C0                 - test eax,eax
ed8_3_PC_JP.exe+152DC8: 0F 4F C8              - cmovg ecx,eax
ed8_3_PC_JP.exe+152DCB: 3B CA                 - cmp ecx,edx
ed8_3_PC_JP.exe+152DCD: 66 0F 4C D1           - cmovl dx,cx
// ---------- INJECTING HERE ----------
ed8_3_PC_JP.exe+152DD1: 66 89 93 70 03 00 00  - mov [rbx+00000370],dx
// ---------- DONE INJECTING  ----------
ed8_3_PC_JP.exe+152DD8: 48 8B 5C 24 30        - mov rbx,[rsp+30]
ed8_3_PC_JP.exe+152DDD: 48 83 C4 20           - add rsp,20
ed8_3_PC_JP.exe+152DE1: 5F                    - pop rdi
ed8_3_PC_JP.exe+152DE2: C3                    - ret
ed8_3_PC_JP.exe+152DE3: CC                    - int 3
ed8_3_PC_JP.exe+152DE4: CC                    - int 3
ed8_3_PC_JP.exe+152DE5: CC                    - int 3
ed8_3_PC_JP.exe+152DE6: CC                    - int 3
ed8_3_PC_JP.exe+152DE7: CC                    - int 3
ed8_3_PC_JP.exe+152DE8: CC                    - int 3
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"Battle: inf. EP"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed8_3_PC_JP.exe
  Version: 
  Date   : 2024-03-27
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_INF_EP,$process,0F B7 83 6C 03 00 00) // should be unique
alloc(newmem,$1000,INJECT_INF_EP)

label(code)
label(return)

newmem:
  cmp byte ptr [rbx+360], 0
  jne code

  mov ax, [rbx+0000036E]
  mov [rbx+0000036C], ax

code:
  movzx eax,word ptr [rbx+0000036C]
  jmp return

INJECT_INF_EP:
  jmp newmem
  nop 2
return:
registersymbol(INJECT_INF_EP)

[DISABLE]

INJECT_INF_EP:
  db 0F B7 83 6C 03 00 00

unregistersymbol(INJECT_INF_EP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed8_3_PC_JP.exe+152F34

ed8_3_PC_JP.exe+152F09: 74 29                          - je ed8_3_PC_JP.exe+152F34
ed8_3_PC_JP.exe+152F0B: 0F 1F 44 00 00                 - nop dword ptr [rax+rax+00]
ed8_3_PC_JP.exe+152F10: 0F B7 93 32 04 00 00           - movzx edx,word ptr [rbx+00000432]
ed8_3_PC_JP.exe+152F17: 48 8B 4B 08                    - mov rcx,[rbx+08]
ed8_3_PC_JP.exe+152F1B: E8 A0 13 04 00                 - call ed8_3_PC_JP.exe+1942C0
ed8_3_PC_JP.exe+152F20: 48 85 C0                       - test rax,rax
ed8_3_PC_JP.exe+152F23: 74 0F                          - je ed8_3_PC_JP.exe+152F34
ed8_3_PC_JP.exe+152F25: F7 80 60 03 00 00 00 00 20 00  - test [rax+00000360],00200000
ed8_3_PC_JP.exe+152F2F: 48 8B D8                       - mov rbx,rax
ed8_3_PC_JP.exe+152F32: 75 DC                          - jne ed8_3_PC_JP.exe+152F10
// ---------- INJECTING HERE ----------
ed8_3_PC_JP.exe+152F34: 0F B7 83 6C 03 00 00           - movzx eax,word ptr [rbx+0000036C]
// ---------- DONE INJECTING  ----------
ed8_3_PC_JP.exe+152F3B: 33 C9                          - xor ecx,ecx
ed8_3_PC_JP.exe+152F3D: 0F B7 93 6E 03 00 00           - movzx edx,word ptr [rbx+0000036E]
ed8_3_PC_JP.exe+152F44: 2B C7                          - sub eax,edi
ed8_3_PC_JP.exe+152F46: 85 C0                          - test eax,eax
ed8_3_PC_JP.exe+152F48: 0F 4F C8                       - cmovg ecx,eax
ed8_3_PC_JP.exe+152F4B: 3B CA                          - cmp ecx,edx
ed8_3_PC_JP.exe+152F4D: 66 0F 4C D1                    - cmovl dx,cx
ed8_3_PC_JP.exe+152F51: 66 89 93 6C 03 00 00           - mov [rbx+0000036C],dx
ed8_3_PC_JP.exe+152F58: 48 8B 5C 24 30                 - mov rbx,[rsp+30]
ed8_3_PC_JP.exe+152F5D: 48 83 C4 20                    - add rsp,20
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Battle: Damage multiplier"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed8_3_PC_JP.exe
  Version: 
  Date   : 2024-03-27
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_DAMAGE_MULTI,ed8_3_PC_JP.exe,89 9F 64 03 00 00) // should be unique
alloc(newmem,$1000,INJECT_DAMAGE_MULTI)

label(code)
label(return)
label(is_full_ep)
label(is_full_cp)
label(vf_dmg_to_player_multi)
label(vf_dmg_to_enemy_multi)
label(i_last_obj_addr)
label(i_dmg_orig)
label(i_dmg_new)
label(i_batt_target)

newmem:
  mov [i_last_obj_addr], rdi

check2:

  cmp byte [rdi+00000360], 0
  je to_player
  jmp to_enemy


to_player:
  mov dword ptr [i_batt_target], 1

  push r15

  // EP section
  cmp dword ptr [is_full_ep], 1
  jne next1
  mov r15w, [rdi+0000036E]
  mov [rdi+0000036C], r15w

next1:
  // CP section
  cmp dword ptr [is_full_cp], 1
  jne next2
  mov r15w, [rdi+00000372]
  mov [rdi+00000370], r15w

next2:
  // HP section
  mov r15d, [rdi+00000364]
  cmp r15d, ebx // new HP equal or greater old one
  jbe to_player_pre

  // HP multiplier section
  vmovss xmm15, [vf_dmg_to_player_multi]
  vcvtsi2ss xmm14, xmm14, ebx
  vmovss [i_dmg_orig], xmm14
  cvtsi2ss xmm13, [rdi+00000364]
  vsubss xmm12, xmm13, xmm14 // Delta (damage)
  vmulss xmm12, xmm12, xmm15 // final damage value
  //cvtsi2ss xmm14, [rdi+00000364]
  vsubss xmm12, xmm13, xmm12 // final HP = [orig HP] - [final damage value]

  vxorps xmm14, xmm14, xmm14
  vucomiss xmm12, xmm14
  ja next3
  vxorps xmm12, xmm12, xmm12

next3:
  vmovss [i_dmg_new], xmm12
  vcvtss2si ebx, xmm12

to_player_pre:
  pop r15
  jmp code

to_enemy:
  mov dword ptr [i_batt_target], 2
  cmp [rdi+00000364],ebx
  jbe code

  // 38C = break value current?
  // 390 = breat value full?

  vmovss xmm15, [vf_dmg_to_enemy_multi]
  vcvtsi2ss xmm14, xmm14, ebx
  vmovss [i_dmg_orig], xmm14
  cvtsi2ss xmm13, [rdi+00000364]
  vsubss xmm13, xmm13, xmm14 // Delta (damage)
  vmulss xmm13, xmm13, xmm15 // final damage
  cvtsi2ss xmm14, [rdi+00000364]
  vsubss xmm14, xmm14, xmm13

  //xorps xmm6, xmm6
  movss xmm13, [vf_1]
  ucomiss xmm14, xmm13
  ja to_enemy_1

  vxorps xmm14, xmm14, xmm14

to_enemy_1:
  vmovss [i_dmg_new], xmm14
  vcvtss2si ebx, xmm14


code:
  mov [rdi+00000364],ebx
  jmp return

align 10 cc
  is_full_ep:
  dd 1
  is_full_cp:
  dd 1
  vf_dmg_to_player_multi:
  dd (float)0.85
  vf_dmg_to_enemy_multi:
  dd (float)1.01
  i_last_obj_addr:
  dq 0
  i_dmg_orig:
  dd 0
  i_dmg_new:
  dd 0
  vf_1:
  dd (float)1
  i_batt_target:
  dd 0

INJECT_DAMAGE_MULTI:
  jmp newmem
  nop
return:
registersymbol(INJECT_DAMAGE_MULTI)
registersymbol(is_full_ep)
registersymbol(is_full_cp)
registersymbol(vf_dmg_to_player_multi)
registersymbol(vf_dmg_to_enemy_multi)
registersymbol(i_last_obj_addr)
registersymbol(i_dmg_orig)
registersymbol(i_dmg_new)
registersymbol(i_batt_target)
[DISABLE]

INJECT_DAMAGE_MULTI:
  db 89 9F 64 03 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed8_3_PC_JP.exe+1530C0

ed8_3_PC_JP.exe+15309A: F7 E1                    - mul ecx
ed8_3_PC_JP.exe+15309C: C1 EA 05                 - shr edx,05
ed8_3_PC_JP.exe+15309F: 03 DA                    - add ebx,edx
ed8_3_PC_JP.exe+1530A1: 45 2B FE                 - sub r15d,r14d
ed8_3_PC_JP.exe+1530A4: 45 85 FF                 - test r15d,r15d
ed8_3_PC_JP.exe+1530A7: 41 0F 4F F7              - cmovg esi,r15d
ed8_3_PC_JP.exe+1530AB: 4C 8B BC 24 90 00 00 00  - mov r15,[rsp+00000090]
ed8_3_PC_JP.exe+1530B3: 3B F3                    - cmp esi,ebx
ed8_3_PC_JP.exe+1530B5: 0F 4C DE                 - cmovl ebx,esi
ed8_3_PC_JP.exe+1530B8: 48 8B B4 24 98 00 00 00  - mov rsi,[rsp+00000098]
// ---------- INJECTING HERE ----------
ed8_3_PC_JP.exe+1530C0: 89 9F 64 03 00 00        - mov [rdi+00000364],ebx
// ---------- DONE INJECTING  ----------
ed8_3_PC_JP.exe+1530C6: 48 8B 9C 24 D0 00 00 00  - mov rbx,[rsp+000000D0]
ed8_3_PC_JP.exe+1530CE: 48 8B 4D 27              - mov rcx,[rbp+27]
ed8_3_PC_JP.exe+1530D2: 48 33 CC                 - xor rcx,rsp
ed8_3_PC_JP.exe+1530D5: E8 66 32 58 00           - call ed8_3_PC_JP.exe+6D6340
ed8_3_PC_JP.exe+1530DA: 48 81 C4 A0 00 00 00     - add rsp,000000A0
ed8_3_PC_JP.exe+1530E1: 41 5E                    - pop r14
ed8_3_PC_JP.exe+1530E3: 5F                       - pop rdi
ed8_3_PC_JP.exe+1530E4: 5D                       - pop rbp
ed8_3_PC_JP.exe+1530E5: C3                       - ret 
ed8_3_PC_JP.exe+1530E6: CC                       - int 3 
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Full EP when get hit?"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>is_full_ep</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Full CP when get hit?"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>is_full_cp</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Damage multiplier to player"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>Float</VariableType>
          <Address>vf_dmg_to_player_multi</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Damage multiplier to enemy"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>Float</VariableType>
          <Address>vf_dmg_to_enemy_multi</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"last object"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>808080</Color>
          <VariableType>8 Bytes</VariableType>
          <Address>i_last_obj_addr</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Target"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">1:我
2:敵
</DropDownList>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>808080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_batt_target</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Dmg. orig."</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>808080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_dmg_orig</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Dmg new"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>808080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_dmg_new</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>36</ID>
      <Description>"Battle: Break multiplier"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed8_3_PC_JP.exe
  Version: 
  Date   : 2024-03-27
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_BREAK_MULTI,$process,2B C7 3B C1 0F 4C C8 33 C0 85 C9 0F 48 C8 89 8B 8C 03 00 00 48 8B CB) // should be unique
alloc(newmem,$1000,INJECT_BREAK_MULTI)

label(code)
label(return)
label(vf_break_multi)

newmem:
  cmp byte ptr [rbx+00000360], 0
  je code

  vcvtsi2ss xmm15, xmm15, edi
  vmovss xmm14, [vf_break_multi]
  vmulss xmm13, xmm14, xmm15
  vcvtss2si edi, xmm13

  cmp eax, edi
  jae code
  mov edi, eax

code:
  sub eax,edi
  cmp eax,ecx
  cmovl ecx,eax
  jmp return
align 10 cc
  vf_break_multi:
  dd (float)1.666667

INJECT_BREAK_MULTI:
  jmp newmem
  nop 2
return:
registersymbol(INJECT_BREAK_MULTI)
registersymbol(vf_break_multi)

[DISABLE]

INJECT_BREAK_MULTI:
  db 2B C7 3B C1 0F 4C C8

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed8_3_PC_JP.exe+155900

ed8_3_PC_JP.exe+1558DB: E8 E0 E9 03 00     - call ed8_3_PC_JP.exe+1942C0
ed8_3_PC_JP.exe+1558E0: 48 85 C0           - test rax,rax
ed8_3_PC_JP.exe+1558E3: 74 0F              - je ed8_3_PC_JP.exe+1558F4
ed8_3_PC_JP.exe+1558E5: 45 33 C0           - xor r8d,r8d
ed8_3_PC_JP.exe+1558E8: 8B D7              - mov edx,edi
ed8_3_PC_JP.exe+1558EA: 48 8B C8           - mov rcx,rax
ed8_3_PC_JP.exe+1558ED: E8 CE D3 FF FF     - call ed8_3_PC_JP.exe+152CC0
ed8_3_PC_JP.exe+1558F2: EB 20              - jmp ed8_3_PC_JP.exe+155914
ed8_3_PC_JP.exe+1558F4: 8B 83 8C 03 00 00  - mov eax,[rbx+0000038C]
ed8_3_PC_JP.exe+1558FA: 8B 8B 90 03 00 00  - mov ecx,[rbx+00000390]
// ---------- INJECTING HERE ----------
ed8_3_PC_JP.exe+155900: 2B C7              - sub eax,edi
// ---------- DONE INJECTING  ----------
ed8_3_PC_JP.exe+155902: 3B C1              - cmp eax,ecx
ed8_3_PC_JP.exe+155904: 0F 4C C8           - cmovl ecx,eax
ed8_3_PC_JP.exe+155907: 33 C0              - xor eax,eax
ed8_3_PC_JP.exe+155909: 85 C9              - test ecx,ecx
ed8_3_PC_JP.exe+15590B: 0F 48 C8           - cmovs ecx,eax
ed8_3_PC_JP.exe+15590E: 89 8B 8C 03 00 00  - mov [rbx+0000038C],ecx
ed8_3_PC_JP.exe+155914: 48 8B CB           - mov rcx,rbx
ed8_3_PC_JP.exe+155917: E8 B4 12 00 00     - call ed8_3_PC_JP.exe+156BD0
ed8_3_PC_JP.exe+15591C: 83 78 28 00        - cmp dword ptr [rax+28],00
ed8_3_PC_JP.exe+155920: 75 23              - jne ed8_3_PC_JP.exe+155945
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>37</ID>
          <Description>"multiplier"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08000</Color>
          <VariableType>Float</VariableType>
          <Address>vf_break_multi</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>45</ID>
      <Description>"min. charge"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed8_3_PC_JP.exe
  Version: 
  Date   : 2024-03-28
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_MIN_CHARGE,$process,66 39 88 9C 66 35 00) // should be unique
alloc(newmem,$1000,INJECT_MIN_CHARGE)

label(code)
label(return)

newmem:
  cmp cx, 64
  jae code
  mov cx, 64

code:
  cmp [rax+0035669C],cx
  jmp return

INJECT_MIN_CHARGE:
  jmp newmem
  nop 2
return:
registersymbol(INJECT_MIN_CHARGE)

[DISABLE]

INJECT_MIN_CHARGE:
  db 66 39 88 9C 66 35 00

unregistersymbol(INJECT_MIN_CHARGE)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed8_3_PC_JP.exe+2F1261

ed8_3_PC_JP.exe+2F1235: 48 8D 45 D7              - lea rax,[rbp-29]
ed8_3_PC_JP.exe+2F1239: C6 44 24 30 00           - mov byte ptr [rsp+30],00
ed8_3_PC_JP.exe+2F123E: 66 44 89 7C 24 28        - mov [rsp+28],r15w
ed8_3_PC_JP.exe+2F1244: 48 89 44 24 20           - mov [rsp+20],rax
ed8_3_PC_JP.exe+2F1249: E8 42 62 00 00           - call ed8_3_PC_JP.exe+2F7490
ed8_3_PC_JP.exe+2F124E: FF C6                    - inc esi
ed8_3_PC_JP.exe+2F1250: 83 FE 09                 - cmp esi,09
ed8_3_PC_JP.exe+2F1253: 7C 8B                    - jl ed8_3_PC_JP.exe+2F11E0
ed8_3_PC_JP.exe+2F1255: 48 8B 87 D8 08 00 00     - mov rax,[rdi+000008D8]
ed8_3_PC_JP.exe+2F125C: B9 C8 00 00 00           - mov ecx,000000C8
// ---------- INJECTING HERE ----------
ed8_3_PC_JP.exe+2F1261: 66 39 88 9C 66 35 00     - cmp [rax+0035669C],cx
// ---------- DONE INJECTING  ----------
ed8_3_PC_JP.exe+2F1268: 74 7A                    - je ed8_3_PC_JP.exe+2F12E4
ed8_3_PC_JP.exe+2F126A: 66 44 89 75 17           - mov [rbp+17],r14w
ed8_3_PC_JP.exe+2F126F: 41 8B DE                 - mov ebx,r14d
ed8_3_PC_JP.exe+2F1272: 48 C7 45 1B 00 00 00 00  - mov qword ptr [rbp+1B],00000000
ed8_3_PC_JP.exe+2F127A: 44 89 75 23              - mov [rbp+23],r14d
ed8_3_PC_JP.exe+2F127E: 66 90                    - nop 2
ed8_3_PC_JP.exe+2F1280: 48 8B 8F D8 08 00 00     - mov rcx,[rdi+000008D8]
ed8_3_PC_JP.exe+2F1287: 48 8D 45 17              - lea rax,[rbp+17]
ed8_3_PC_JP.exe+2F128B: 48 81 C1 D8 65 35 00     - add rcx,003565D8
ed8_3_PC_JP.exe+2F1292: 4C 89 74 24 28           - mov [rsp+28],r14
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"Get Sepiths"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed8_3_PC_JP.exe
  Version: 
  Date   : 2024-03-27
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_SEPITH,$process,44 8B 80 4C 66 35 00) // should be unique
alloc(newmem,$1000,INJECT_GET_SEPITH)

label(code)
label(return)
label(i_base_seph_addr)

newmem:
  mov [i_base_seph_addr], rax

code:
  mov r8d,[rax+0035664C]
  jmp return
align 10 cc
  i_base_seph_addr:
  dq 0


INJECT_GET_SEPITH:
  jmp newmem
  nop 2
return:
registersymbol(INJECT_GET_SEPITH)
registersymbol(i_base_seph_addr)

[DISABLE]

INJECT_GET_SEPITH:
  db 44 8B 80 4C 66 35 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed8_3_PC_JP.exe+22E419

ed8_3_PC_JP.exe+22E3E8: 48 8B 01                 - mov rax,[rcx]
ed8_3_PC_JP.exe+22E3EB: 41 B9 02 00 00 00        - mov r9d,00000002
ed8_3_PC_JP.exe+22E3F1: F3 0F 10 15 43 8B 5C 00  - movss xmm2,[ed8_3_PC_JP.exe+7F6F3C]
ed8_3_PC_JP.exe+22E3F9: 0F 28 CF                 - movaps xmm1,xmm7
ed8_3_PC_JP.exe+22E3FC: FF 50 40                 - call qword ptr [rax+40]
ed8_3_PC_JP.exe+22E3FF: C6 87 D2 12 00 00 00     - mov byte ptr [rdi+000012D2],00
ed8_3_PC_JP.exe+22E406: 48 8B 8F 90 17 00 00     - mov rcx,[rdi+00001790]
ed8_3_PC_JP.exe+22E40D: 48 85 C9                 - test rcx,rcx
ed8_3_PC_JP.exe+22E410: 74 1A                    - je ed8_3_PC_JP.exe+22E42C
ed8_3_PC_JP.exe+22E412: 48 8B 05 47 EE A0 00     - mov rax,[ed8_3_PC_JP.exe+C3D260]
// ---------- INJECTING HERE ----------
ed8_3_PC_JP.exe+22E419: 44 8B 80 4C 66 35 00     - mov r8d,[rax+0035664C]
// ---------- DONE INJECTING  ----------
ed8_3_PC_JP.exe+22E420: 48 8D 15 61 BA 5C 00     - lea rdx,[ed8_3_PC_JP.exe+7F9E88]
ed8_3_PC_JP.exe+22E427: E8 94 0B 24 00           - call ed8_3_PC_JP.exe+46EFC0
ed8_3_PC_JP.exe+22E42C: 48 8B 8F 98 17 00 00     - mov rcx,[rdi+00001798]
ed8_3_PC_JP.exe+22E433: 48 85 C9                 - test rcx,rcx
ed8_3_PC_JP.exe+22E436: 74 1A                    - je ed8_3_PC_JP.exe+22E452
ed8_3_PC_JP.exe+22E438: 48 8B 05 21 EE A0 00     - mov rax,[ed8_3_PC_JP.exe+C3D260]
ed8_3_PC_JP.exe+22E43F: 44 8B 80 90 66 35 00     - mov r8d,[rax+00356690]
ed8_3_PC_JP.exe+22E446: 48 8D 15 3B BA 5C 00     - lea rdx,[ed8_3_PC_JP.exe+7F9E88]
ed8_3_PC_JP.exe+22E44D: E8 6E 0B 24 00           - call ed8_3_PC_JP.exe+46EFC0
ed8_3_PC_JP.exe+22E452: 4C 8D 8C 24 C0 00 00 00  - lea r9,[rsp+000000C0]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Usage: menu"</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"セピス(Orange)"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_seph_addr</Address>
          <Offsets>
            <Offset>356630</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"セピス(Blue)"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_seph_addr</Address>
          <Offsets>
            <Offset>356634</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"セピス(Red)"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_seph_addr</Address>
          <Offsets>
            <Offset>356638</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"セピス(Green)"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_seph_addr</Address>
          <Offsets>
            <Offset>35663C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"セピス(Black)"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_seph_addr</Address>
          <Offsets>
            <Offset>356640</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"セピス(Golden)"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_seph_addr</Address>
          <Offsets>
            <Offset>356644</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"セピス(Silver)"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_seph_addr</Address>
          <Offsets>
            <Offset>356648</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"セピス塊 (piece)"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_seph_addr</Address>
          <Offsets>
            <Offset>35664C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"Mira"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_seph_addr</Address>
          <Offsets>
            <Offset>356690</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>40</ID>
      <Description>"Set item # to 80, if &gt;=2"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed8_3_PC_JP.exe
  Version: 
  Date   : 2024-03-28
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_SET_ITEM_CNT,$process,66 42 83 7C 01 02 00) // should be unique
alloc(newmem,$1000,INJECT_SET_ITEM_CNT)

label(code)
label(return)

newmem:
  cmp word ptr [rcx+r8+02],2
  jb code
  cmp word ptr [rcx+r8+02],50
  jae code
  mov word ptr [rcx+r8+02],50

code:
  cmp word ptr [rcx+r8+02],00
  jmp return

INJECT_SET_ITEM_CNT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT_SET_ITEM_CNT)

[DISABLE]

INJECT_SET_ITEM_CNT:
  db 66 42 83 7C 01 02 00

unregistersymbol(INJECT_SET_ITEM_CNT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed8_3_PC_JP.exe+215F26

ed8_3_PC_JP.exe+215EFF: CC                    - int 3 
ed8_3_PC_JP.exe+215F00: 4C 8B 05 59 73 A2 00  - mov r8,[ed8_3_PC_JP.exe+C3D260]
ed8_3_PC_JP.exe+215F07: 33 C0                 - xor eax,eax
ed8_3_PC_JP.exe+215F09: 41 8B 90 E0 65 35 00  - mov edx,[r8+003565E0]
ed8_3_PC_JP.exe+215F10: 85 D2                 - test edx,edx
ed8_3_PC_JP.exe+215F12: 74 21                 - je ed8_3_PC_JP.exe+215F35
ed8_3_PC_JP.exe+215F14: 4D 8B 80 E8 65 35 00  - mov r8,[r8+003565E8]
ed8_3_PC_JP.exe+215F1B: 0F 1F 44 00 00        - nop dword ptr [rax+rax+00]
ed8_3_PC_JP.exe+215F20: 8B C8                 - mov ecx,eax
ed8_3_PC_JP.exe+215F22: 48 C1 E1 05           - shl rcx,05
// ---------- INJECTING HERE ----------
ed8_3_PC_JP.exe+215F26: 66 42 83 7C 01 02 00  - cmp word ptr [rcx+r8+02],00
// ---------- DONE INJECTING  ----------
ed8_3_PC_JP.exe+215F2D: 74 06                 - je ed8_3_PC_JP.exe+215F35
ed8_3_PC_JP.exe+215F2F: FF C0                 - inc eax
ed8_3_PC_JP.exe+215F31: 3B C2                 - cmp eax,edx
ed8_3_PC_JP.exe+215F33: 72 EB                 - jb ed8_3_PC_JP.exe+215F20
ed8_3_PC_JP.exe+215F35: C3                    - ret 
ed8_3_PC_JP.exe+215F36: CC                    - int 3 
ed8_3_PC_JP.exe+215F37: CC                    - int 3 
ed8_3_PC_JP.exe+215F38: CC                    - int 3 
ed8_3_PC_JP.exe+215F39: CC                    - int 3 
ed8_3_PC_JP.exe+215F3A: CC                    - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>41</ID>
      <Description>"Drop/equip item: set # to 80"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ed8_3_PC_JP.exe
  Version: 
  Date   : 2024-03-28
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_ITEM_CHG_CNT,$process,85 C9 66 44 0F 4F D1 66 46 89 54 0A 02 40) // should be unique
alloc(newmem,$1000,INJECT_ITEM_CHG_CNT)

label(code)
label(return)
label(i_base_ditem_addr)

newmem:
  push r15
  lea r15, [rdx+r9]
  mov [i_base_ditem_addr], r15
  pop r15

  mov cx, 50

code:
  test ecx,ecx
  cmovg r10w,cx
  jmp return
align 10 cc
  i_base_ditem_addr:
  dq 0

INJECT_ITEM_CHG_CNT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT_ITEM_CHG_CNT)
registersymbol(i_base_ditem_addr)

[DISABLE]

INJECT_ITEM_CHG_CNT:
  db 85 C9 66 44 0F 4F D1

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ed8_3_PC_JP.exe+339968

ed8_3_PC_JP.exe+339948: 66 42 39 1C 09     - cmp [rcx+r9],bx
ed8_3_PC_JP.exe+33994D: 74 09              - je ed8_3_PC_JP.exe+339958
ed8_3_PC_JP.exe+33994F: FF C0              - inc eax
ed8_3_PC_JP.exe+339951: 41 3B C0           - cmp eax,r8d
ed8_3_PC_JP.exe+339954: 72 EA              - jb ed8_3_PC_JP.exe+339940
ed8_3_PC_JP.exe+339956: EB 1D              - jmp ed8_3_PC_JP.exe+339975
ed8_3_PC_JP.exe+339958: 48 C1 E2 05        - shl rdx,05
ed8_3_PC_JP.exe+33995C: 41 0F B7 C6        - movzx eax,r14w
ed8_3_PC_JP.exe+339960: 42 0F B7 4C 0A 02  - movzx ecx,word ptr [rdx+r9+02]
ed8_3_PC_JP.exe+339966: 2B C8              - sub ecx,eax
// ---------- INJECTING HERE ----------
ed8_3_PC_JP.exe+339968: 85 C9              - test ecx,ecx
// ---------- DONE INJECTING  ----------
ed8_3_PC_JP.exe+33996A: 66 44 0F 4F D1     - cmovg r10w,cx
ed8_3_PC_JP.exe+33996F: 66 46 89 54 0A 02  - mov [rdx+r9+02],r10w
ed8_3_PC_JP.exe+339975: 40 84 F6           - test sil,sil
ed8_3_PC_JP.exe+339978: 74 0B              - je ed8_3_PC_JP.exe+339985
ed8_3_PC_JP.exe+33997A: 48 8B D7           - mov rdx,rdi
ed8_3_PC_JP.exe+33997D: 48 8B CD           - mov rcx,rbp
ed8_3_PC_JP.exe+339980: E8 2B F6 FF FF     - call ed8_3_PC_JP.exe+338FB0
ed8_3_PC_JP.exe+339985: 48 8B 5C 24 30     - mov rbx,[rsp+30]
ed8_3_PC_JP.exe+33998A: 48 8B 6C 24 38     - mov rbp,[rsp+38]
ed8_3_PC_JP.exe+33998F: 48 8B 74 24 40     - mov rsi,[rsp+40]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>43</ID>
          <Description>"Last item id"</Description>
          <DropDownList DisplayValueAsItem="1">3413:ファイアボルトR
3443:憤怒
3444:朱雀刃
3445:武神珠
3446:炎帝珠
3463:ブレスR
3488:白虎刃
3489:風神珠
3490:雷神珠
3564:熾天使
3571:アナライズ
3581:アナライズR
3589:月鏡
3590:虎威
3595:アナライズSR
3596:セイントフォースSR
3603:玉藻
3605:賢王珠
52685:Error
</DropDownList>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>i_base_ditem_addr</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"英雄伝説 閃の軌跡III  /  https://opencheattables.com  /  CE 7.5+"</Description>
      <Options moHideChildren="1"/>
      <Color>009100</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>6</ID>
          <Description>"https://kamikouryaku.net/sennokiseki3/"</Description>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :movzx eax,word ptr [rdx+r10+02]</Description>
      <AddressString>ed8_3_PC_JP.exe+334B9E</AddressString>
      <Before>
        <Byte>30</Byte>
        <Byte>48</Byte>
        <Byte>C1</Byte>
        <Byte>E2</Byte>
        <Byte>05</Byte>
      </Before>
      <Actual>
        <Byte>42</Byte>
        <Byte>0F</Byte>
        <Byte>B7</Byte>
        <Byte>44</Byte>
        <Byte>12</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>20</Byte>
        <Byte>5F</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
