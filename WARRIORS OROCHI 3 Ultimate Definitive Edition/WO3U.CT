<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="42">
  <CheatEntries>
    <CheatEntry>
      <ID>19</ID>
      <Description>"Compact Mode"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
--https://forum.cheatengine.org/viewtopic.php?t=570055
LuaCall(function cycleFullCompact(sender,force) local state = not(compactmenuitem.Caption == 'Compact View Mode'); if force~=nil then state = not force end; compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'; getMainForm().Splitter1.Visible = state; getMainForm().Panel4.Visible    = state; getMainForm().Panel5.Visible    = state; end; function addCompactMenu() if compactmenualreadyexists then return end; local parent = getMainForm().Menu.Items; compactmenuitem = createMenuItem(parent); parent.add(compactmenuitem); compactmenuitem.Caption = 'Compact View Mode'; compactmenuitem.OnClick = cycleFullCompact; compactmenualreadyexists = 'yes'; end; addCompactMenu(); cycleFullCompact(nil,true))

[DISABLE]
LuaCall(cycleFullCompact(nil,false))
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Min. stock EXP (Usage: spend EXP)"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : WO3U.exe
  Version: 
  Date   : 2022-09-25
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_MIN_STOCK_EXP,WO3U.exe,8B 90 D8 4E 03 00 E8) // should be unique
alloc(newmem,$1000,INJECT_MIN_STOCK_EXP)

label(code)
label(return)

newmem:

code:
  mov edx,[rax+00034ED8]
  //
  cmp edx, #99999
  jae endp
  mov edx, #99999
  mov [rax+00034ED8], edx

endp:
  //
  jmp return

INJECT_MIN_STOCK_EXP:
  jmp newmem
  nop
return:
registersymbol(INJECT_MIN_STOCK_EXP)

[DISABLE]

INJECT_MIN_STOCK_EXP:
  db 8B 90 D8 4E 03 00

unregistersymbol(INJECT_MIN_STOCK_EXP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: WO3U.exe+32EDD6

WO3U.exe+32EDA4: 83 79 20 01                    - cmp dword ptr [rcx+20],01
WO3U.exe+32EDA8: 74 22                          - je WO3U.exe+32EDCC
WO3U.exe+32EDAA: 48 8B 01                       - mov rax,[rcx]
WO3U.exe+32EDAD: 48 C7 41 20 01 00 00 00        - mov qword ptr [rcx+20],00000001
WO3U.exe+32EDB5: 89 69 28                       - mov [rcx+28],ebp
WO3U.exe+32EDB8: C7 41 2C 0C 00 00 00           - mov [rcx+2C],0000000C
WO3U.exe+32EDBF: C7 81 94 00 00 00 03 00 00 00  - mov [rcx+00000094],00000003
WO3U.exe+32EDC9: FF 50 30                       - call qword ptr [rax+30]
WO3U.exe+32EDCC: 48 8B 05 75 5F 89 00           - mov rax,[WO3U.exe+BC4D48]
WO3U.exe+32EDD3: 48 8B CB                       - mov rcx,rbx
// ---------- INJECTING HERE ----------
WO3U.exe+32EDD6: 8B 90 D8 4E 03 00              - mov edx,[rax+00034ED8]
// ---------- DONE INJECTING  ----------
WO3U.exe+32EDDC: E8 2F 02 00 00                 - call WO3U.exe+32F010
WO3U.exe+32EDE1: 48 8B 05 60 5F 89 00           - mov rax,[WO3U.exe+BC4D48]
WO3U.exe+32EDE8: F6 80 B2 4D 03 00 01           - test byte ptr [rax+00034DB2],01
WO3U.exe+32EDEF: 75 21                          - jne WO3U.exe+32EE12
WO3U.exe+32EDF1: 48 8B 05 28 93 89 00           - mov rax,[WO3U.exe+BC8120]
WO3U.exe+32EDF8: 8B 48 08                       - mov ecx,[rax+08]
WO3U.exe+32EDFB: 8D 41 F9                       - lea eax,[rcx-07]
WO3U.exe+32EDFE: A9 F6 FF FF FF                 - test eax,FFFFFFF6
WO3U.exe+32EE03: 75 0D                          - jne WO3U.exe+32EE12
WO3U.exe+32EE05: 83 F9 10                       - cmp ecx,10
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"Min. money (Usage: visit vendor)"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : WO3U.exe
  Version: 
  Date   : 2022-09-25
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_MIN_MONEY,WO3U.exe,8B 98 DC 4E 03 00) // should be unique
alloc(newmem,$1000,INJECT_MIN_MONEY)

label(code)
label(return)
label(i_base_money_addr)

newmem:
  mov [i_base_money_addr], rax

code:
  mov ebx,[rax+00034EDC]

  //
  cmp ebx, #300000
  jae endp
  mov ebx, #300000
  mov [rax+00034EDC], ebx
endp:
  //

  jmp return
align 10 cc
  i_base_money_addr:
  dq 0


INJECT_MIN_MONEY:
  jmp newmem
  nop
return:
registersymbol(INJECT_MIN_MONEY)
registersymbol(i_base_money_addr)

[DISABLE]

INJECT_MIN_MONEY:
  db 8B 98 DC 4E 03 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: WO3U.exe+34F212

WO3U.exe+34F1DB: F3 0F 11 74 24 20        - movss [rsp+20],xmm6
WO3U.exe+34F1E1: 41 B1 01                 - mov r9l,01
WO3U.exe+34F1E4: 48 8D 96 68 02 00 00     - lea rdx,[rsi+00000268]
WO3U.exe+34F1EB: 4C 8B C0                 - mov r8,rax
WO3U.exe+34F1EE: 49 8B CE                 - mov rcx,r14
WO3U.exe+34F1F1: E8 4A AB E9 FF           - call WO3U.exe+1E9D40
WO3U.exe+34F1F6: 48 8B 05 4B 5B 87 00     - mov rax,[WO3U.exe+BC4D48]
WO3U.exe+34F1FD: B9 70 00 00 00           - mov ecx,00000070
WO3U.exe+34F202: 4C 89 A4 24 98 02 00 00  - mov [rsp+00000298],r12
WO3U.exe+34F20A: 4C 89 AC 24 58 02 00 00  - mov [rsp+00000258],r13
// ---------- INJECTING HERE ----------
WO3U.exe+34F212: 8B 98 DC 4E 03 00        - mov ebx,[rax+00034EDC]
// ---------- DONE INJECTING  ----------
WO3U.exe+34F218: E8 D3 08 F2 FF           - call WO3U.exe+26FAF0
WO3U.exe+34F21D: 48 8B D0                 - mov rdx,rax
WO3U.exe+34F220: 48 8D 4D A0              - lea rcx,[rbp-60]
WO3U.exe+34F224: 44 8B C3                 - mov r8d,ebx
WO3U.exe+34F227: E8 D4 6F E3 FF           - call WO3U.exe+186200
WO3U.exe+34F22C: F3 0F 10 44 24 64        - movss xmm0,[rsp+64]
WO3U.exe+34F232: 4C 8D 44 24 50           - lea r8,[rsp+50]
WO3U.exe+34F237: F3 0F 58 86 9C 00 00 00  - addss xmm0,[rsi+0000009C]
WO3U.exe+34F23F: 41 B9 07 00 00 00        - mov r9d,00000007
WO3U.exe+34F245: C7 44 24 50 00 00 C0 41  - mov [rsp+50],41C00000
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Stock EXP"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_money_addr</Address>
          <Offsets>
            <Offset>34ED8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Money"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_money_addr</Address>
          <Offsets>
            <Offset>34EDC</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"??"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_money_addr</Address>
          <Offsets>
            <Offset>34EE0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Fast Musou gauge"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : WO3U.exe
  Version: 
  Date   : 2022-09-25
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_FAST_MUSOU_GAUGE,WO3U.exe,66 03 C3 66 3B C2) // should be unique
alloc(newmem,$1000,INJECT_FAST_MUSOU_GAUGE)

label(code)
label(return)
label(vf_musou_multi)

newmem:
  push r15
  push r14
  xor r15, r15
  xor r14, r14
  mov r15w, ax
  mov r14w, bx
  cvtsi2ss xmm15, r15d
  cvtsi2ss xmm14, r14d
  vmovss xmm13, [vf_musou_multi]
  vmulss xmm14, xmm14, xmm13
  cvtss2si r14d, xmm14
  mov bx, r14w

next1:

endp:
  pop r14
  pop r15

code:
  add ax,bx
  cmp ax,dx
  jmp return
align 10 cc
  vf_musou_multi:
  dd (float)4
  vf_30000:
  dd (float)30000.0


INJECT_FAST_MUSOU_GAUGE:
  jmp newmem
  nop
return:
registersymbol(INJECT_FAST_MUSOU_GAUGE)
registersymbol(vf_musou_multi)

[DISABLE]

INJECT_FAST_MUSOU_GAUGE:
  db 66 03 C3 66 3B C2

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: WO3U.exe+C8E0B

WO3U.exe+C8DE3: F3 41 0F 5E C3        - divss xmm0,xmm11
WO3U.exe+C8DE8: EB 04                 - jmp WO3U.exe+C8DEE
WO3U.exe+C8DEA: 41 0F 28 C2           - movaps xmm0,xmm10
WO3U.exe+C8DEE: F3 41 0F 59 C3        - mulss xmm0,xmm11
WO3U.exe+C8DF3: F3 48 0F 2C C0        - cvttss2si rax,xmm0
WO3U.exe+C8DF8: 03 D8                 - add ebx,eax
WO3U.exe+C8DFA: 0F B7 87 A4 05 00 00  - movzx eax,word ptr [rdi+000005A4]
WO3U.exe+C8E01: BA 30 75 00 00        - mov edx,00007530
WO3U.exe+C8E06: 66 3B C2              - cmp ax,dx
WO3U.exe+C8E09: 73 11                 - jae WO3U.exe+C8E1C
// ---------- INJECTING HERE ----------
WO3U.exe+C8E0B: 66 03 C3              - add ax,bx
// ---------- DONE INJECTING  ----------
WO3U.exe+C8E0E: 66 3B C2              - cmp ax,dx
WO3U.exe+C8E11: 66 0F 47 C2           - cmova ax,dx
WO3U.exe+C8E15: 66 89 87 A4 05 00 00  - mov [rdi+000005A4],ax
WO3U.exe+C8E1C: 66 44 3B FA           - cmp r15w,dx
WO3U.exe+C8E20: 73 60                 - jae WO3U.exe+C8E82
WO3U.exe+C8E22: BB 68 19 00 00        - mov ebx,00001968
WO3U.exe+C8E27: 41 F6 04 24 01        - test byte ptr [r12],01
WO3U.exe+C8E2C: 74 08                 - je WO3U.exe+C8E36
WO3U.exe+C8E2E: 45 33 FF              - xor r15d,r15d
WO3U.exe+C8E31: 41 8B CF              - mov ecx,r15d
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Multiplier (don't set too high)"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>vf_musou_multi</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"_WIP"</Description>
      <Options moHideChildren="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Musou gauge"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : WO3U.exe
  Version: 
  Date   : 2022-09-25
  Author :
}

[ENABLE]

aobscanmodule(INJECT_MUSOU_GAUGE,WO3U.exe,F3 0F 11 87 F0 33 00 00) // should be unique
alloc(newmem,$1000,INJECT_MUSOU_GAUGE)

label(code)
label(return)

newmem:
  vmovss xmm15, [vf_299]
  vucomiss xmm0, xmm15
  jae code
  vmovss xmm0, [vf_299]
  movss [rdi+000033F8],xmm0

code:
  movss [rdi+000033F0],xmm0
  jmp return
align 10 cc
  vf_299:
  dd (float)299

INJECT_MUSOU_GAUGE:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_MUSOU_GAUGE)

[DISABLE]

INJECT_MUSOU_GAUGE:
  db F3 0F 11 87 F0 33 00 00

unregistersymbol(INJECT_MUSOU_GAUGE)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: WO3U.exe+17DD0E

WO3U.exe+17DCD1: 48 8D 8F 88 2D 00 00           - lea rcx,[rdi+00002D88]
WO3U.exe+17DCD8: E8 23 E8 FF FF                 - call WO3U.exe+17C500
WO3U.exe+17DCDD: 4C 63 1F                       - movsxd  r11,dword ptr [rdi]
WO3U.exe+17DCE0: 49 69 CB 68 19 00 00           - imul rcx,r11,00001968
WO3U.exe+17DCE7: 48 03 0D 32 70 A4 00           - add rcx,[WO3U.exe+BC4D20]
WO3U.exe+17DCEE: 0F B7 81 A4 05 00 00           - movzx eax,word ptr [rcx+000005A4]
WO3U.exe+17DCF5: C7 87 F4 33 00 00 00 00 96 43  - mov [rdi+000033F4],43960000
WO3U.exe+17DCFF: 66 0F 6E C0                    - movd xmm0,eax
WO3U.exe+17DD03: 0F 5B C0                       - cvtdq2ps xmm0,xmm0
WO3U.exe+17DD06: F3 0F 5E 05 4E 20 96 00        - divss xmm0,[WO3U.exe+ADFD5C]
// ---------- INJECTING HERE ----------
WO3U.exe+17DD0E: F3 0F 11 87 F0 33 00 00        - movss [rdi+000033F0],xmm0
// ---------- DONE INJECTING  ----------
WO3U.exe+17DD16: 0F B7 91 A4 05 00 00           - movzx edx,word ptr [rcx+000005A4]
WO3U.exe+17DD1D: B9 30 75 00 00                 - mov ecx,00007530
WO3U.exe+17DD22: F3 0F 5E 05 4A 23 96 00        - divss xmm0,[WO3U.exe+AE0074]
WO3U.exe+17DD2A: 66 3B D1                       - cmp dx,cx
WO3U.exe+17DD2D: 0F 93 C0                       - setae al
WO3U.exe+17DD30: 88 87 00 34 00 00              - mov [rdi+00003400],al
WO3U.exe+17DD36: F3 0F 11 87 F8 33 00 00        - movss [rdi+000033F8],xmm0
WO3U.exe+17DD3E: 73 09                          - jae WO3U.exe+17DD49
WO3U.exe+17DD40: 44 89 BF FC 33 00 00           - mov [rdi+000033FC],r15d
WO3U.exe+17DD47: EB 29                          - jmp WO3U.exe+17DD72
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"WARRIORS OROCHI 3 Ultimate Definitive Edition  /  https://opencheattables.com  /  CE 7.4+"</Description>
      <Color>400080</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
