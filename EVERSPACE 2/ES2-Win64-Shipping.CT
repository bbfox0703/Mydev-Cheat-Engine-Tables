<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>26254</ID>
      <Description>"Get last 2 items level &amp; count"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ES2-Win64-Shipping.exe
  Version: 
  Date   : 2025-02-11
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_ITEM_RAL,$process,41 80 7D 60 05 4C) // should be unique
alloc(newmem,$1000,INJECT_GET_ITEM_RAL)

label(code)
label(return i_base_item_r_addr i_base_item_r_addr2)

newmem:
  pushfq

  cmp dword ptr [i_idx], 0
  je set1
  cmp dword ptr [i_idx], 1
  je set2

set1:
  mov [i_base_item_r_addr], r13
  mov dword ptr [i_idx], 1
  jmp code_pre

set2:
  mov [i_base_item_r_addr2], r13
  mov dword ptr [i_idx], 0
  jmp code_pre

code_pre:
  popfq

code:
  cmp byte ptr [r13+60],05
  jmp return
align 10 cc
  i_base_item_r_addr:
  dq 0
  i_base_item_r_addr2:
  dq 0
  i_idx:
  dd 0

INJECT_GET_ITEM_RAL:
  jmp newmem
return:
registersymbol(INJECT_GET_ITEM_RAL i_base_item_r_addr i_base_item_r_addr2)

[DISABLE]

INJECT_GET_ITEM_RAL:
  db 41 80 7D 60 05

unregistersymbol(INJECT_GET_ITEM_RAL i_base_item_r_addr i_base_item_r_addr2)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ES2-Win64-Shipping.exe+4BA8CB4

ES2-Win64-Shipping.exe+4BA8C91: 3B 43 0C                 - cmp eax,[rbx+0C]
ES2-Win64-Shipping.exe+4BA8C94: 76 0A                    - jna ES2-Win64-Shipping.exe+4BA8CA0
ES2-Win64-Shipping.exe+4BA8C96: 8B D5                    - mov edx,ebp
ES2-Win64-Shipping.exe+4BA8C98: 48 8B CB                 - mov rcx,rbx
ES2-Win64-Shipping.exe+4BA8C9B: E8 E0 7C 5A FC           - call ES2-Win64-Shipping.ffxFsr3UpscalerResourceIsNull+CDB0
ES2-Win64-Shipping.exe+4BA8CA0: 48 8B 03                 - mov rax,[rbx]
ES2-Win64-Shipping.exe+4BA8CA3: 49 83 C7 08              - add r15,08
ES2-Win64-Shipping.exe+4BA8CA7: 48 89 3C E8              - mov [rax+rbp*8],rdi
ES2-Win64-Shipping.exe+4BA8CAB: 4D 3B FC                 - cmp r15,r12
ES2-Win64-Shipping.exe+4BA8CAE: 0F 85 3C FF FF FF        - jne ES2-Win64-Shipping.exe+4BA8BF0
// ---------- INJECTING HERE ----------
ES2-Win64-Shipping.exe+4BA8CB4: 41 80 7D 60 05           - cmp byte ptr [r13+60],05
// ---------- DONE INJECTING  ----------
ES2-Win64-Shipping.exe+4BA8CB9: 4C 8B 7C 24 50           - mov r15,[rsp+50]
ES2-Win64-Shipping.exe+4BA8CBE: 4C 8B A4 24 98 00 00 00  - mov r12,[rsp+00000098]
ES2-Win64-Shipping.exe+4BA8CC6: 48 8B AC 24 88 00 00 00  - mov rbp,[rsp+00000088]
ES2-Win64-Shipping.exe+4BA8CCE: 0F 85 AB 00 00 00        - jne ES2-Win64-Shipping.exe+4BA8D7F
ES2-Win64-Shipping.exe+4BA8CD4: 49 8B CD                 - mov rcx,r13
ES2-Win64-Shipping.exe+4BA8CD7: E8 44 E4 00 00           - call ES2-Win64-Shipping.exe+4BB7120
ES2-Win64-Shipping.exe+4BA8CDC: 84 C0                    - test al,al
ES2-Win64-Shipping.exe+4BA8CDE: 0F 84 9B 00 00 00        - je ES2-Win64-Shipping.exe+4BA8D7F
ES2-Win64-Shipping.exe+4BA8CE4: E8 67 0B 0A 00           - call ES2-Win64-Shipping.exe+4C49850
ES2-Win64-Shipping.exe+4BA8CE9: 41 B0 01                 - mov r8b,01
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>26255</ID>
          <Description>"item level"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_item_r_addr</Address>
          <Offsets>
            <Offset>58</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>26301</ID>
          <Description>"??"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Float</VariableType>
          <Address>i_base_item_r_addr</Address>
          <Offsets>
            <Offset>5C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>26300</ID>
          <Description>"item rarity"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Byte</VariableType>
          <Address>i_base_item_r_addr</Address>
          <Offsets>
            <Offset>60</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>26256</ID>
          <Description>"Stack count"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Byte</VariableType>
          <Address>i_base_item_r_addr</Address>
          <Offsets>
            <Offset>19C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>26257</ID>
          <Description>"stock"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Byte</VariableType>
          <Address>i_base_item_r_addr</Address>
          <Offsets>
            <Offset>1A0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>26286</ID>
          <Description>"item level #2"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_item_r_addr2</Address>
          <Offsets>
            <Offset>58</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>26303</ID>
          <Description>"??"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Float</VariableType>
          <Address>i_base_item_r_addr2</Address>
          <Offsets>
            <Offset>5C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>26302</ID>
          <Description>"item rarity #2"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Byte</VariableType>
          <Address>i_base_item_r_addr2</Address>
          <Offsets>
            <Offset>60</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>26287</ID>
          <Description>"Stack count  #2"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Byte</VariableType>
          <Address>i_base_item_r_addr2</Address>
          <Offsets>
            <Offset>19C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>26288</ID>
          <Description>"stock #2"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Byte</VariableType>
          <Address>i_base_item_r_addr2</Address>
          <Offsets>
            <Offset>1A0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>26263</ID>
      <Description>"Get credits &amp; level"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ES2-Win64-Shipping.exe
  Version: 
  Date   : 2025-02-11
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_CREDITS,$process,39 8A 20 01 00 00 0F 9D C0 C3) // should be unique
alloc(newmem,$1000,INJECT_GET_CREDITS)

label(code)
label(return i_base_money_addr)

newmem:
  mov [i_base_money_addr], rdx
code:
  cmp [rdx+00000120],ecx
  jmp return
align 10 cc
  i_base_money_addr:
  dq 0

INJECT_GET_CREDITS:
  jmp newmem
  nop
return:
registersymbol(INJECT_GET_CREDITS i_base_money_addr)

[DISABLE]

INJECT_GET_CREDITS:
  db 39 8A 20 01 00 00

unregistersymbol(INJECT_GET_CREDITS i_base_money_addr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ES2-Win64-Shipping.exe+4A99108

ES2-Win64-Shipping.exe+4A990EC: CC                    - int 3 
ES2-Win64-Shipping.exe+4A990ED: CC                    - int 3 
ES2-Win64-Shipping.exe+4A990EE: CC                    - int 3 
ES2-Win64-Shipping.exe+4A990EF: CC                    - int 3 
ES2-Win64-Shipping.exe+4A990F0: 48 8B 05 81 6F A9 04  - mov rax,[ES2-Win64-Shipping.exe+9530078]
ES2-Win64-Shipping.exe+4A990F7: 48 85 C0              - test rax,rax
ES2-Win64-Shipping.exe+4A990FA: 74 16                 - je ES2-Win64-Shipping.exe+4A99112
ES2-Win64-Shipping.exe+4A990FC: 48 8B 90 C0 01 00 00  - mov rdx,[rax+000001C0]
ES2-Win64-Shipping.exe+4A99103: 48 85 D2              - test rdx,rdx
ES2-Win64-Shipping.exe+4A99106: 74 0A                 - je ES2-Win64-Shipping.exe+4A99112
// ---------- INJECTING HERE ----------
ES2-Win64-Shipping.exe+4A99108: 39 8A 20 01 00 00     - cmp [rdx+00000120],ecx
// ---------- DONE INJECTING  ----------
ES2-Win64-Shipping.exe+4A9910E: 0F 9D C0              - setge al
ES2-Win64-Shipping.exe+4A99111: C3                    - ret 
ES2-Win64-Shipping.exe+4A99112: 32 C0                 - xor al,al
ES2-Win64-Shipping.exe+4A99114: C3                    - ret 
ES2-Win64-Shipping.exe+4A99115: CC                    - int 3 
ES2-Win64-Shipping.exe+4A99116: CC                    - int 3 
ES2-Win64-Shipping.exe+4A99117: CC                    - int 3 
ES2-Win64-Shipping.exe+4A99118: CC                    - int 3 
ES2-Win64-Shipping.exe+4A99119: CC                    - int 3 
ES2-Win64-Shipping.exe+4A9911A: CC                    - int 3 
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>26264</ID>
          <Description>"Money"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_money_addr</Address>
          <Offsets>
            <Offset>120</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>26265</ID>
          <Description>"Level"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_money_addr</Address>
          <Offsets>
            <Offset>124</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>26266</ID>
          <Description>"Exp"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>Float</VariableType>
          <Address>i_base_money_addr</Address>
          <Offsets>
            <Offset>128</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>26268</ID>
      <Description>"inf. sub weapon"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ES2-Win64-Shipping.exe
  Version: 
  Date   : 2025-02-11
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_INF_SUBWEAPON,$process,FF C8 48 8B D7) // should be unique



INJECT_INF_SUBWEAPON:
  db 90 90

registersymbol(INJECT_INF_SUBWEAPON)

[DISABLE]

INJECT_INF_SUBWEAPON:
  db FF C8

unregistersymbol(INJECT_INF_SUBWEAPON)


{
// ORIGINAL CODE - INJECTION POINT: ES2-Win64-Shipping.exe+499B4C3

ES2-Win64-Shipping.exe+499B49C: 48 3B DA              - cmp rbx,rdx
ES2-Win64-Shipping.exe+499B49F: 75 EF                 - jne ES2-Win64-Shipping.exe+499B490
ES2-Win64-Shipping.exe+499B4A1: E9 E2 01 00 00        - jmp ES2-Win64-Shipping.exe+499B688
ES2-Win64-Shipping.exe+499B4A6: 45 84 C0              - test r8b,r8b
ES2-Win64-Shipping.exe+499B4A9: 0F 84 D9 01 00 00     - je ES2-Win64-Shipping.exe+499B688
ES2-Win64-Shipping.exe+499B4AF: 83 7B 38 00           - cmp dword ptr [rbx+38],00
ES2-Win64-Shipping.exe+499B4B3: 0F 8E CF 01 00 00     - jng ES2-Win64-Shipping.exe+499B688
ES2-Win64-Shipping.exe+499B4B9: 8B 81 A0 01 00 00     - mov eax,[rcx+000001A0]
ES2-Win64-Shipping.exe+499B4BF: 85 C0                 - test eax,eax
ES2-Win64-Shipping.exe+499B4C1: 7E 32                 - jle ES2-Win64-Shipping.exe+499B4F5
// ---------- INJECTING HERE ----------
ES2-Win64-Shipping.exe+499B4C3: FF C8                 - dec eax
// ---------- DONE INJECTING  ----------
ES2-Win64-Shipping.exe+499B4C5: 48 8B D7              - mov rdx,rdi
ES2-Win64-Shipping.exe+499B4C8: 89 81 A0 01 00 00     - mov [rcx+000001A0],eax
ES2-Win64-Shipping.exe+499B4CE: 48 8D 8E 88 06 00 00  - lea rcx,[rsi+00000688]
ES2-Win64-Shipping.exe+499B4D5: E8 56 3D A3 FE        - call ES2-Win64-Shipping.exe+33CF230
ES2-Win64-Shipping.exe+499B4DA: 48 8B 03              - mov rax,[rbx]
ES2-Win64-Shipping.exe+499B4DD: 83 B8 A0 01 00 00 00  - cmp dword ptr [rax+000001A0],00
ES2-Win64-Shipping.exe+499B4E4: 75 0F                 - jne ES2-Win64-Shipping.exe+499B4F5
ES2-Win64-Shipping.exe+499B4E6: 48 8D 8E A8 06 00 00  - lea rcx,[rsi+000006A8]
ES2-Win64-Shipping.exe+499B4ED: 48 8B D7              - mov rdx,rdi
ES2-Win64-Shipping.exe+499B4F0: E8 3B 3D A3 FE        - call ES2-Win64-Shipping.exe+33CF230
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>26309</ID>
      <Description>"inf. thruster"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ES2-Win64-Shipping.exe
  Version: 
  Date   : 2025-02-11
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_INF_THRUSTER,$process,F3 0F 5C C1 F3 41 0F 5F C5) // should be unique
alloc(newmem,$1000,INJECT_INF_THRUSTER)

label(code)
label(return)

newmem:
  xorps xmm1, xmm1

code:
  subss xmm0,xmm1
  maxss xmm0,xmm13
  jmp return

INJECT_INF_THRUSTER:
  jmp newmem
  nop 4
return:
registersymbol(INJECT_INF_THRUSTER)

[DISABLE]

INJECT_INF_THRUSTER:
  db F3 0F 5C C1 F3 41 0F 5F C5

unregistersymbol(INJECT_INF_THRUSTER)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ES2-Win64-Shipping.exe+49B5CF3

ES2-Win64-Shipping.exe+49B5CBE: 44 38 B3 A4 00 00 00     - cmp [rbx+000000A4],r14b
ES2-Win64-Shipping.exe+49B5CC5: 75 0E                    - jne ES2-Win64-Shipping.exe+49B5CD5
ES2-Win64-Shipping.exe+49B5CC7: F3 0F 10 83 A8 00 00 00  - movss xmm0,[rbx+000000A8]
ES2-Win64-Shipping.exe+49B5CCF: 0F 2E 43 70              - ucomiss xmm0,[rbx+70]
ES2-Win64-Shipping.exe+49B5CD3: 74 09                    - je ES2-Win64-Shipping.exe+49B5CDE
ES2-Win64-Shipping.exe+49B5CD5: 48 8D 4B 70              - lea rcx,[rbx+70]
ES2-Win64-Shipping.exe+49B5CD9: E8 22 F8 04 00           - call ES2-Win64-Shipping.exe+4A05500
ES2-Win64-Shipping.exe+49B5CDE: F3 0F 10 8B A0 00 00 00  - movss xmm1,[rbx+000000A0]
ES2-Win64-Shipping.exe+49B5CE6: F3 0F 10 87 90 0A 00 00  - movss xmm0,[rdi+00000A90]
ES2-Win64-Shipping.exe+49B5CEE: F3 41 0F 59 CC           - mulss xmm1,xmm12
// ---------- INJECTING HERE ----------
ES2-Win64-Shipping.exe+49B5CF3: F3 0F 5C C1              - subss xmm0,xmm1
// ---------- DONE INJECTING  ----------
ES2-Win64-Shipping.exe+49B5CF7: F3 41 0F 5F C5           - maxss xmm0,xmm13
ES2-Win64-Shipping.exe+49B5CFC: 48 8B CF                 - mov rcx,rdi
ES2-Win64-Shipping.exe+49B5CFF: F3 0F 11 87 90 0A 00 00  - movss [rdi+00000A90],xmm0
ES2-Win64-Shipping.exe+49B5D07: E8 14 8A FE FF           - call ES2-Win64-Shipping.exe+499E720
ES2-Win64-Shipping.exe+49B5D0C: 48 8D 8F 70 09 00 00     - lea rcx,[rdi+00000970]
ES2-Win64-Shipping.exe+49B5D13: 41 0F 28 D4              - movaps xmm2,xmm12
ES2-Win64-Shipping.exe+49B5D17: 0F 28 C8                 - movaps xmm1,xmm0
ES2-Win64-Shipping.exe+49B5D1A: E8 B1 76 F6 FF           - call ES2-Win64-Shipping.exe+491D3D0
ES2-Win64-Shipping.exe+49B5D1F: 44 0F 2F AF 90 0A 00 00  - comiss xmm13,[rdi+00000A90]
ES2-Win64-Shipping.exe+49B5D27: 0F 82 61 01 00 00        - jb ES2-Win64-Shipping.exe+49B5E8E
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>26313</ID>
      <Description>"inf. main weapon EN"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ES2-Win64-Shipping.exe
  Version: 
  Date   : 2025-02-11
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_INF_EN_WEAPON,$process,0F 28 CE 0F 28 FE F3) // should be unique
alloc(newmem,$1000,INJECT_INF_EN_WEAPON)

label(code)
label(return)

newmem:
  pushfq
  vxorps xmm15, xmm15, xmm15
  vucomiss xmm6, xmm15
  ja @F
  vmovss xmm6, [vf_1]

@@:
  popfq
code:
  movaps xmm1,xmm6
  movaps xmm7,xmm6
  jmp return
align 10 cc
  vf_1:
  dd (float)1


INJECT_INF_EN_WEAPON:
  jmp newmem
  nop
return:
registersymbol(INJECT_INF_EN_WEAPON)

[DISABLE]

INJECT_INF_EN_WEAPON:
  db 0F 28 CE 0F 28 FE

unregistersymbol(INJECT_INF_EN_WEAPON)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ES2-Win64-Shipping.exe+49C4AC8

ES2-Win64-Shipping.exe+49C4AA3: 74 13                          - je ES2-Win64-Shipping.exe+49C4AB8
ES2-Win64-Shipping.exe+49C4AA5: 0F 28 CE                       - movaps xmm1,xmm6
ES2-Win64-Shipping.exe+49C4AA8: 48 8B C8                       - mov rcx,rax
ES2-Win64-Shipping.exe+49C4AAB: E8 C0 5C FD FF                 - call ES2-Win64-Shipping.exe+499A770
ES2-Win64-Shipping.exe+49C4AB0: 48 8B CF                       - mov rcx,rdi
ES2-Win64-Shipping.exe+49C4AB3: E8 C8 FE FD FF                 - call ES2-Win64-Shipping.exe+49A4980
ES2-Win64-Shipping.exe+49C4AB8: 48 8B 7C 24 70                 - mov rdi,[rsp+70]
ES2-Win64-Shipping.exe+49C4ABD: EB 31                          - jmp ES2-Win64-Shipping.exe+49C4AF0
ES2-Win64-Shipping.exe+49C4ABF: E8 CC D6 00 00                 - call ES2-Win64-Shipping.exe+49D2190
ES2-Win64-Shipping.exe+49C4AC4: 41 0F 2F F0                    - comiss xmm6,xmm8
// ---------- INJECTING HERE ----------
ES2-Win64-Shipping.exe+49C4AC8: 0F 28 CE                       - movaps xmm1,xmm6
// ---------- DONE INJECTING  ----------
ES2-Win64-Shipping.exe+49C4ACB: 0F 28 FE                       - movaps xmm7,xmm6
ES2-Win64-Shipping.exe+49C4ACE: F3 0F 58 8B E4 0B 00 00        - addss xmm1,[rbx+00000BE4]
ES2-Win64-Shipping.exe+49C4AD6: 0F 57 3D B3 D4 49 02           - xorps xmm7,[ES2-Win64-Shipping.exe+6E61F90]
ES2-Win64-Shipping.exe+49C4ADD: F3 0F 5D C8                    - minss xmm1,xmm0
ES2-Win64-Shipping.exe+49C4AE1: F3 41 0F 5F C8                 - maxss xmm1,xmm8
ES2-Win64-Shipping.exe+49C4AE6: F3 0F 11 8B E4 0B 00 00        - movss [rbx+00000BE4],xmm1
ES2-Win64-Shipping.exe+49C4AEE: 73 42                          - jae ES2-Win64-Shipping.exe+49C4B32
ES2-Win64-Shipping.exe+49C4AF0: C7 83 EC 0B 00 00 00 00 00 00  - mov [rbx+00000BEC],00000000
ES2-Win64-Shipping.exe+49C4AFA: 0F 28 F7                       - movaps xmm6,xmm7
ES2-Win64-Shipping.exe+49C4AFD: 48 8B 8B 40 01 00 00           - mov rcx,[rbx+00000140]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>26269</ID>
      <Description>"inf. consumable usage in slots"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ES2-Win64-Shipping.exe
  Version: 
  Date   : 2025-02-11
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_INF_COMSUMABLE,$process,FF 88 ?? 0? 00 00 48 8B 83) // should be unique

//label(INJECT_INF_COMSUMABLEo)
alloc(INJECT_INF_COMSUMABLEo, 6)
INJECT_INF_COMSUMABLEo:
  readmem(INJECT_INF_COMSUMABLE, 6)

INJECT_INF_COMSUMABLE:
  nop 6

registersymbol(INJECT_INF_COMSUMABLE)

registersymbol(INJECT_INF_COMSUMABLEo)

[DISABLE]

INJECT_INF_COMSUMABLE:
  //db FF 88 9C 01 00 00
  readmem(INJECT_INF_COMSUMABLEo, 6)

unregistersymbol(INJECT_INF_COMSUMABLE)
unregistersymbol(INJECT_INF_COMSUMABLEo)
dealloc(INJECT_INF_COMSUMABLEo)


{
// ORIGINAL CODE - INJECTION POINT: ES2-Win64-Shipping.exe+498E767

ES2-Win64-Shipping.exe+498E73E: 48 8B 15 2B 39 B9 04  - mov rdx,[ES2-Win64-Shipping.exe+9522070]
ES2-Win64-Shipping.exe+498E745: 49 8B 04 C8           - mov rax,[r8+rcx*8]
ES2-Win64-Shipping.exe+498E749: 48 39 50 28           - cmp [rax+28],rdx
ES2-Win64-Shipping.exe+498E74D: 75 10                 - jne ES2-Win64-Shipping.exe+498E75F
ES2-Win64-Shipping.exe+498E74F: E8 CC 77 0F 00        - call ES2-Win64-Shipping.exe+4A85F20
ES2-Win64-Shipping.exe+498E754: 84 C0                 - test al,al
ES2-Win64-Shipping.exe+498E756: 75 15                 - jne ES2-Win64-Shipping.exe+498E76D
ES2-Win64-Shipping.exe+498E758: 4C 8B 83 A0 00 00 00  - mov r8,[rbx+000000A0]
ES2-Win64-Shipping.exe+498E75F: 4B 8D 0C 64           - lea rcx,[r12+r12*2]
ES2-Win64-Shipping.exe+498E763: 49 8B 04 C8           - mov rax,[r8+rcx*8]
// ---------- INJECTING HERE ----------
ES2-Win64-Shipping.exe+498E767: FF 88 9C 01 00 00     - dec [rax+0000019C]
// ---------- DONE INJECTING  ----------
ES2-Win64-Shipping.exe+498E76D: 48 8B 83 A0 00 00 00  - mov rax,[rbx+000000A0]
ES2-Win64-Shipping.exe+498E774: 4B 8D 0C 64           - lea rcx,[r12+r12*2]
ES2-Win64-Shipping.exe+498E778: 48 8B 0C C8           - mov rcx,[rax+rcx*8]
ES2-Win64-Shipping.exe+498E77C: 83 B9 9C 01 00 00 00  - cmp dword ptr [rcx+0000019C],00
ES2-Win64-Shipping.exe+498E783: 0F 8F 85 00 00 00     - jg ES2-Win64-Shipping.exe+498E80E
ES2-Win64-Shipping.exe+498E789: 48 8B BB 90 00 00 00  - mov rdi,[rbx+00000090]
ES2-Win64-Shipping.exe+498E790: 48 85 FF              - test rdi,rdi
ES2-Win64-Shipping.exe+498E793: 74 3E                 - je ES2-Win64-Shipping.exe+498E7D3
ES2-Win64-Shipping.exe+498E795: E8 66 B6 EF FF        - call ES2-Win64-Shipping.exe+4889E00
ES2-Win64-Shipping.exe+498E79A: 48 8B 4F 10           - mov rcx,[rdi+10]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>26307</ID>
      <Description>"inf material when crafting"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ES2-Win64-Shipping.exe
  Version: 
  Date   : 2025-02-11
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_INF_CRAFTING,$process,2B C8 89 8E 9C 01 00 00) // should be unique
alloc(newmem,$1000,INJECT_INF_CRAFTING)

label(code)
label(return)

newmem:
  pushfq
  cmp ecx, 67
  jae @F
  mov ecx, 67
@@:
  xor eax, eax
  popfq
code:
  sub ecx,eax
  mov [rsi+0000019C],ecx
  jmp return

INJECT_INF_CRAFTING:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_INF_CRAFTING)

[DISABLE]

INJECT_INF_CRAFTING:
  db 2B C8 89 8E 9C 01 00 00

unregistersymbol(INJECT_INF_CRAFTING)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ES2-Win64-Shipping.exe+4CBB145

ES2-Win64-Shipping.exe+4CBB124: 49 8B 34 36              - mov rsi,[r14+rsi]
ES2-Win64-Shipping.exe+4CBB128: 48 85 F6                 - test rsi,rsi
ES2-Win64-Shipping.exe+4CBB12B: 74 5E                    - je ES2-Win64-Shipping.exe+4CBB18B
ES2-Win64-Shipping.exe+4CBB12D: 48 39 7E 28              - cmp [rsi+28],rdi
ES2-Win64-Shipping.exe+4CBB131: 75 58                    - jne ES2-Win64-Shipping.exe+4CBB18B
ES2-Win64-Shipping.exe+4CBB133: 8B 8E 9C 01 00 00        - mov ecx,[rsi+0000019C]
ES2-Win64-Shipping.exe+4CBB139: 41 8B C7                 - mov eax,r15d
ES2-Win64-Shipping.exe+4CBB13C: 41 3B CF                 - cmp ecx,r15d
ES2-Win64-Shipping.exe+4CBB13F: 0F 4C C1                 - cmovl eax,ecx
ES2-Win64-Shipping.exe+4CBB142: 44 2B F8                 - sub r15d,eax
// ---------- INJECTING HERE ----------
ES2-Win64-Shipping.exe+4CBB145: 2B C8                    - sub ecx,eax
// ---------- DONE INJECTING  ----------
ES2-Win64-Shipping.exe+4CBB147: 89 8E 9C 01 00 00        - mov [rsi+0000019C],ecx
ES2-Win64-Shipping.exe+4CBB14D: 75 37                    - jne ES2-Win64-Shipping.exe+4CBB186
ES2-Win64-Shipping.exe+4CBB14F: 49 8B 04 24              - mov rax,[r12]
ES2-Win64-Shipping.exe+4CBB153: 49 C7 04 06 00 00 00 00  - mov qword ptr [r14+rax],00000000
ES2-Win64-Shipping.exe+4CBB15B: 80 FB 0A                 - cmp bl,0A
ES2-Win64-Shipping.exe+4CBB15E: 74 26                    - je ES2-Win64-Shipping.exe+4CBB186
ES2-Win64-Shipping.exe+4CBB160: E8 DB 5F EC FF           - call ES2-Win64-Shipping.exe+4B81140
ES2-Win64-Shipping.exe+4CBB165: 49 3B C5                 - cmp rax,r13
ES2-Win64-Shipping.exe+4CBB168: 75 1C                    - jne ES2-Win64-Shipping.exe+4CBB186
ES2-Win64-Shipping.exe+4CBB16A: 48 8B CE                 - mov rcx,rsi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>26281</ID>
      <Description>"Get focused attribute value (Firepower/utility/resistance...)"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ES2-Win64-Shipping.exe
  Version: 
  Date   : 2025-02-11
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_ATTRS,$process,8B 00 48 8B 5C 24 30 48 83 C4 20 5F C3 CC CC CC CC 48 83) // should be unique
alloc(newmem,$1000,INJECT_GET_ATTRS)

label(code)
label(return i_base_attr_addr1 i_base_attr_addr2)

newmem:
  cmp qword ptr [i_base_attr_addr1], rax
  je code
  cmp qword ptr [i_base_attr_addr2], rax
  je code
  cmp qword ptr [i_base_attr_addr1], 0
  je write1

  mov [i_base_attr_addr2], rax
  jmp code

write1:
  mov [i_base_attr_addr1], rax
  jmp code

code:
  mov eax,[rax]
  mov rbx,[rsp+30]
  jmp return
align 10 cc
  i_base_attr_addr1:
  dq 0
  i_base_attr_addr2:
  dq 0
  align 100 0
  db 0

INJECT_GET_ATTRS:
  jmp newmem
  nop 2
return:
registersymbol(INJECT_GET_ATTRS i_base_attr_addr1 i_base_attr_addr2)

[DISABLE]

INJECT_GET_ATTRS:
  db 8B 00 48 8B 5C 24 30

unregistersymbol(INJECT_GET_ATTRS i_base_attr_addr1 i_base_attr_addr2)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ES2-Win64-Shipping.exe+4A589EF

ES2-Win64-Shipping.exe+4A589D4: 48 83 C4 20     - add rsp,20
ES2-Win64-Shipping.exe+4A589D8: 5F              - pop rdi
ES2-Win64-Shipping.exe+4A589D9: C3              - ret 
ES2-Win64-Shipping.exe+4A589DA: 48 8B C2        - mov rax,rdx
ES2-Win64-Shipping.exe+4A589DD: 33 D2           - xor edx,edx
ES2-Win64-Shipping.exe+4A589DF: 48 03 C1        - add rax,rcx
ES2-Win64-Shipping.exe+4A589E2: 48 8D 40 08     - lea rax,[rax+08]
ES2-Win64-Shipping.exe+4A589E6: 48 0F 44 C2     - cmove rax,rdx
ES2-Win64-Shipping.exe+4A589EA: 48 85 C0        - test rax,rax
ES2-Win64-Shipping.exe+4A589ED: 74 DE           - je ES2-Win64-Shipping.exe+4A589CD
// ---------- INJECTING HERE ----------
ES2-Win64-Shipping.exe+4A589EF: 8B 00           - mov eax,[rax]
// ---------- DONE INJECTING  ----------
ES2-Win64-Shipping.exe+4A589F1: 48 8B 5C 24 30  - mov rbx,[rsp+30]
ES2-Win64-Shipping.exe+4A589F6: 48 83 C4 20     - add rsp,20
ES2-Win64-Shipping.exe+4A589FA: 5F              - pop rdi
ES2-Win64-Shipping.exe+4A589FB: C3              - ret 
ES2-Win64-Shipping.exe+4A589FC: CC              - int 3 
ES2-Win64-Shipping.exe+4A589FD: CC              - int 3 
ES2-Win64-Shipping.exe+4A589FE: CC              - int 3 
ES2-Win64-Shipping.exe+4A589FF: CC              - int 3 
ES2-Win64-Shipping.exe+4A58A00: 48 83 EC 28     - sub rsp,28
ES2-Win64-Shipping.exe+4A58A04: E8 47 FF FF FF  - call ES2-Win64-Shipping.exe+4A58950
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>26289</ID>
          <Description>"Must be non-zero, can over than 5"</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>26282</ID>
          <Description>"#1 (Structure)"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_attr_addr1</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>26283</ID>
          <Description>"#2"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_attr_addr2</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>26274</ID>
      <Description>"Get Mainframe Expansions"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ES2-Win64-Shipping.exe
  Version: 
  Date   : 2025-02-11
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_MAINFRAME,$process,03 BA ?? ?? 00 00 48 83 C1 08) // should be unique
alloc(newmem,$1000,INJECT_GET_MAINFRAME)

alloc(INJECT_GET_MAINFRAMEo, 6)

INJECT_GET_MAINFRAMEo:
  readmem(INJECT_GET_MAINFRAME, 6)

label(code)
label(return i_base_mf_addr i_base_mf_offset)

newmem:
  mov [i_base_mf_addr], rdx
  push r15
  xor r15, r15
  db 49 C7 C7
  readmem(INJECT_GET_MAINFRAME+2, 4)
  mov [i_base_mf_offset], r15
  pop r15

code:
  //add edi,[rdx+0000019C]
  readmem(INJECT_GET_MAINFRAME, 6)
  jmp return
align 10 cc
  i_base_mf_addr:
  dq 0
  i_base_mf_offset:
  dq 0

INJECT_GET_MAINFRAME:
  jmp newmem
  nop
return:
registersymbol(INJECT_GET_MAINFRAME i_base_mf_addr i_base_mf_offset)
registersymbol(INJECT_GET_MAINFRAMEo)

[DISABLE]

INJECT_GET_MAINFRAME:
  //db 03 BA 9C 01 00 00
  readmem(INJECT_GET_MAINFRAMEo, 6)

unregistersymbol(INJECT_GET_MAINFRAME i_base_mf_addr i_base_mf_offset)
dealloc(newmem)
unregistersymbol(INJECT_GET_MAINFRAMEo)
dealloc(newmem)
{
// ORIGINAL CODE - INJECTION POINT: ES2-Win64-Shipping.exe+4C477D6

ES2-Win64-Shipping.exe+4C477B8: 48 8B 08           - mov rcx,[rax]
ES2-Win64-Shipping.exe+4C477BB: 48 63 40 08        - movsxd  rax,dword ptr [rax+08]
ES2-Win64-Shipping.exe+4C477BF: 4C 8D 04 C1        - lea r8,[rcx+rax*8]
ES2-Win64-Shipping.exe+4C477C3: 49 3B C8           - cmp rcx,r8
ES2-Win64-Shipping.exe+4C477C6: 74 1D              - je ES2-Win64-Shipping.exe+4C477E5
ES2-Win64-Shipping.exe+4C477C8: 48 8B 11           - mov rdx,[rcx]
ES2-Win64-Shipping.exe+4C477CB: 48 85 D2           - test rdx,rdx
ES2-Win64-Shipping.exe+4C477CE: 74 0C              - je ES2-Win64-Shipping.exe+4C477DC
ES2-Win64-Shipping.exe+4C477D0: 48 39 5A 28        - cmp [rdx+28],rbx
ES2-Win64-Shipping.exe+4C477D4: 75 06              - jne ES2-Win64-Shipping.exe+4C477DC
// ---------- INJECTING HERE ----------
ES2-Win64-Shipping.exe+4C477D6: 03 BA 9C 01 00 00  - add edi,[rdx+0000019C]
// ---------- DONE INJECTING  ----------
ES2-Win64-Shipping.exe+4C477DC: 48 83 C1 08        - add rcx,08
ES2-Win64-Shipping.exe+4C477E0: 49 3B C8           - cmp rcx,r8
ES2-Win64-Shipping.exe+4C477E3: 75 E3              - jne ES2-Win64-Shipping.exe+4C477C8
ES2-Win64-Shipping.exe+4C477E5: 48 8B 5C 24 30     - mov rbx,[rsp+30]
ES2-Win64-Shipping.exe+4C477EA: 8B C7              - mov eax,edi
ES2-Win64-Shipping.exe+4C477EC: 48 83 C4 20        - add rsp,20
ES2-Win64-Shipping.exe+4C477F0: 5F                 - pop rdi
ES2-Win64-Shipping.exe+4C477F1: C3                 - ret 
ES2-Win64-Shipping.exe+4C477F2: CC                 - int 3 
ES2-Win64-Shipping.exe+4C477F3: CC                 - int 3 
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>26290</ID>
          <Description>"Must be non 0"</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>26275</ID>
          <Description>"Stock"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF8080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>i_base_mf_addr</Address>
          <Offsets>
            <Offset>[i_base_mf_offset]</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>26310</ID>
      <Description>"_not working"</Description>
      <Options moHideChildren="1"/>
      <Color>808080</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>675</ID>
          <Description>"Get renown"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : ES2-Win64-Shipping.exe
  Version: 
  Date   : 2023-04-25
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_RENOWN,$process,41 8B 9B 88 0E 00 00 48) // should be unique
alloc(newmem,$1000,INJECT_GET_RENOWN)

label(code)
label(return)
label(i_base_renown_addr)

newmem:
  mov [i_base_renown_addr], r11

code:
  mov ebx,[r11+00000E88]
  jmp return
align 10 cc
  i_base_renown_addr:
  dq 0

INJECT_GET_RENOWN:
  jmp newmem
  nop 2
return:
registersymbol(INJECT_GET_RENOWN)
registersymbol(i_base_renown_addr)

[DISABLE]

INJECT_GET_RENOWN:
  db 41 8B 9B 88 0E 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ES2-Win64-Shipping.exe+13CD1D1

ES2-Win64-Shipping.exe+13CD1A0: 40 53                 - push rbx
ES2-Win64-Shipping.exe+13CD1A2: 4C 8B 15 07 0F 92 04  - mov r10,[ES2-Win64-Shipping.exe+5CEE0B0]
ES2-Win64-Shipping.exe+13CD1A9: 4D 85 D2              - test r10,r10
ES2-Win64-Shipping.exe+13CD1AC: 0F 84 E6 00 00 00     - je ES2-Win64-Shipping.exe+13CD298
ES2-Win64-Shipping.exe+13CD1B2: 4D 8B 9A A8 01 00 00  - mov r11,[r10+000001A8]
ES2-Win64-Shipping.exe+13CD1B9: 4D 85 DB              - test r11,r11
ES2-Win64-Shipping.exe+13CD1BC: 0F 84 D6 00 00 00     - je ES2-Win64-Shipping.exe+13CD298
ES2-Win64-Shipping.exe+13CD1C2: 84 C9                 - test cl,cl
ES2-Win64-Shipping.exe+13CD1C4: 0F 84 CE 00 00 00     - je ES2-Win64-Shipping.exe+13CD298
ES2-Win64-Shipping.exe+13CD1CA: 41 8B 82 40 04 00 00  - mov eax,[r10+00000440]
// ---------- INJECTING HERE ----------
ES2-Win64-Shipping.exe+13CD1D1: 41 8B 9B 88 0E 00 00  - mov ebx,[r11+00000E88]
// ---------- DONE INJECTING  ----------
ES2-Win64-Shipping.exe+13CD1D8: 48 89 7C 24 10        - mov [rsp+10],rdi
ES2-Win64-Shipping.exe+13CD1DD: 33 FF                 - xor edi,edi
ES2-Win64-Shipping.exe+13CD1DF: 41 3B 82 6C 04 00 00  - cmp eax,[r10+0000046C]
ES2-Win64-Shipping.exe+13CD1E6: 74 58                 - je ES2-Win64-Shipping.exe+13CD240
ES2-Win64-Shipping.exe+13CD1E8: 4D 63 82 80 04 00 00  - movsxd  r8,dword ptr [r10+00000480]
ES2-Win64-Shipping.exe+13CD1EF: 4D 8D 8A 70 04 00 00  - lea r9,[r10+00000470]
ES2-Win64-Shipping.exe+13CD1F6: 49 8B 51 08           - mov rdx,[r9+08]
ES2-Win64-Shipping.exe+13CD1FA: 49 FF C8              - dec r8
ES2-Win64-Shipping.exe+13CD1FD: 0F B6 C1              - movzx eax,cl
ES2-Win64-Shipping.exe+13CD200: 4C 23 C0              - and r8,rax
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>677</ID>
              <Description>"Usage: Menu-&gt;Data-&gt;Renown"</Description>
              <Color>8000FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>676</ID>
              <Description>"Renown"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>i_base_renown_addr</Address>
              <Offsets>
                <Offset>E88</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>658</ID>
          <Description>"Set some attributes (range, shield capacitry..)"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : ES2-Win64-Shipping.exe
  Version: 
  Date   : 2023-04-24
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_SET_SOME_ATTRS,$process,0F 2E 81 90 00 00 00 74 05 E8 F1) // should be unique
alloc(newmem,$1000,INJECT_SET_SOME_ATTRS)

label(code)
label(return)
label(vf_min_range)
label(vf_min_capacity)
label(vf_repair_per_kill)
label(vf_rehcarge_delay)
label(vf_shutdown_duration)
label(vf_min_armor)

newmem:
  push rax
  // 0001596E: Range
  // 00015751: Capacity (from shield)
  // 000157C9: Armor (from plating)
  // 000157D3: Repair per kill (from plating)
  // 0001577F: recharge delay
  // 00015799: Shutdown duration
  // 00015CD0: repair ??% (nanobots)
  // 00015CF0: over ? seconds (nanobots)

  mov eax, [rcx+00000088]
  cmp eax, 0001596E
  jne chk_2
  vmovss xmm15, [rcx+00000090]
  vmovss xmm14, [vf_min_range]
  vucomiss xmm15, xmm14
  jae chk_2
  vmovss [rcx+00000090], xmm14
  vmovss [rcx+000000C0], xmm14
  vmovss [rcx+000000C8], xmm14
  vmovss [rcx+000000FC], xmm14
  vmovss [rcx+00000100], xmm14
  vmovaps xmm0, xmm14

chk_2:
  mov eax, [rcx+00000088]
  cmp eax, 00015751
  jne chk_3
  vmovss xmm15, [rcx+00000090]
  vmovss xmm14, [vf_min_capacity]
  vucomiss xmm15, xmm14
  jae chk_3
  vmovss [rcx+00000090], xmm14
  vmovss [rcx+000000C0], xmm14
  vmovss [rcx+000000C8], xmm14
  vmovss [rcx+000000FC], xmm14
  vmovss [rcx+00000100], xmm14
  vmovaps xmm0, xmm14

chk_3:
  mov eax, [rcx+00000088]
  cmp eax, 000157C9
  jne chk_4
  vmovss xmm15, [rcx+00000090]
  vmovss xmm14, [vf_min_armor]
  vucomiss xmm15, xmm14
  jae chk_4
  vmovss [rcx+00000090], xmm14
  vmovss [rcx+000000C0], xmm14
  vmovss [rcx+000000C8], xmm14
  vmovss [rcx+000000FC], xmm14
  vmovss [rcx+00000100], xmm14
  vmovaps xmm0, xmm14

chk_4:
  mov eax, [rcx+00000088]
  cmp eax, 000157D3
  jne chk_5
  vmovss xmm15, [rcx+00000090]
  vmovss xmm14, [vf_repair_per_kill]
  vucomiss xmm15, xmm14
  jae chk_5
  vmovss [rcx+00000090], xmm14
  vmovss [rcx+000000C0], xmm14
  vmovss [rcx+000000C8], xmm14
  vmovss [rcx+000000FC], xmm14
  vmovss [rcx+00000100], xmm14
  vmovaps xmm0, xmm14

chk_5:
  mov eax, [rcx+00000088]
  cmp eax, 0001577F
  jne chk_6
  vmovss xmm15, [rcx+00000090]
  vmovss xmm14, [vf_rehcarge_delay]
  vucomiss xmm15, xmm14
  je chk_6
  vmovss [rcx+00000090], xmm14
  vmovss [rcx+000000C0], xmm14
  vmovss [rcx+000000C8], xmm14
  vmovss [rcx+000000FC], xmm14
  vmovss [rcx+00000100], xmm14
  vmovaps xmm0, xmm14

chk_6:
  mov eax, [rcx+00000088]
  cmp eax, 00015799
  jne chk_7
  vmovss xmm15, [rcx+00000090]
  vmovss xmm14, [vf_shutdown_duration]
  vucomiss xmm15, xmm14
  je chk_7
  vmovss [rcx+00000090], xmm14
  vmovss [rcx+000000C0], xmm14
  vmovss [rcx+000000C8], xmm14
  vmovss [rcx+000000FC], xmm14
  vmovss [rcx+00000100], xmm14
  vmovaps xmm0, xmm14

chk_7:


endp:
  pop rax

code:
  ucomiss xmm0,[rcx+00000090]
  jmp return
align 10 cc
  vf_min_range:
  dd (float)861000
  vf_min_capacity:
  dd (float)531998
  vf_min_armor:
  dd (float)333998
  vf_repair_per_kill:
  dd (float)0.5
  vf_rehcarge_delay:
  dd (float)0.5
  vf_shutdown_duration:
  dd (float)1


INJECT_SET_SOME_ATTRS:
  jmp newmem
  nop 2
return:
registersymbol(INJECT_SET_SOME_ATTRS)
registersymbol(vf_min_range)
registersymbol(vf_min_capacity)
registersymbol(vf_repair_per_kill)
registersymbol(vf_rehcarge_delay)
registersymbol(vf_shutdown_duration)
registersymbol(vf_min_armor)
[DISABLE]

INJECT_SET_SOME_ATTRS:
  db 0F 2E 81 90 00 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ES2-Win64-Shipping.exe+17992D1

ES2-Win64-Shipping.exe+17992AE: CC                       - int 3 
ES2-Win64-Shipping.exe+17992AF: CC                       - int 3 
ES2-Win64-Shipping.exe+17992B0: 48 89 5C 24 08           - mov [rsp+08],rbx
ES2-Win64-Shipping.exe+17992B5: 57                       - push rdi
ES2-Win64-Shipping.exe+17992B6: 48 83 EC 20              - sub rsp,20
ES2-Win64-Shipping.exe+17992BA: 80 B9 C4 00 00 00 00     - cmp byte ptr [rcx+000000C4],00
ES2-Win64-Shipping.exe+17992C1: 48 8B FA                 - mov rdi,rdx
ES2-Win64-Shipping.exe+17992C4: 48 8B D9                 - mov rbx,rcx
ES2-Win64-Shipping.exe+17992C7: 75 11                    - jne ES2-Win64-Shipping.exe+17992DA
ES2-Win64-Shipping.exe+17992C9: F3 0F 10 81 C8 00 00 00  - movss xmm0,[rcx+000000C8]
// ---------- INJECTING HERE ----------
ES2-Win64-Shipping.exe+17992D1: 0F 2E 81 90 00 00 00     - ucomiss xmm0,[rcx+00000090]
// ---------- DONE INJECTING  ----------
ES2-Win64-Shipping.exe+17992D8: 74 05                    - je ES2-Win64-Shipping.exe+17992DF
ES2-Win64-Shipping.exe+17992DA: E8 F1 A0 05 00           - call ES2-Win64-Shipping.exe+17F33D0
ES2-Win64-Shipping.exe+17992DF: 48 8B 43 28              - mov rax,[rbx+28]
ES2-Win64-Shipping.exe+17992E3: 48 89 07                 - mov [rdi],rax
ES2-Win64-Shipping.exe+17992E6: 48 8B 43 30              - mov rax,[rbx+30]
ES2-Win64-Shipping.exe+17992EA: 48 89 47 08              - mov [rdi+08],rax
ES2-Win64-Shipping.exe+17992EE: 48 85 C0                 - test rax,rax
ES2-Win64-Shipping.exe+17992F1: 74 04                    - je ES2-Win64-Shipping.exe+17992F7
ES2-Win64-Shipping.exe+17992F3: F0 FF 40 08              - lock inc [rax+08]
ES2-Win64-Shipping.exe+17992F7: 8B 43 38                 - mov eax,[rbx+38]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>660</ID>
              <Description>"Usage: browse item"</Description>
              <Color>8000FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>659</ID>
              <Description>"Weapon: min. range"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>Float</VariableType>
              <Address>vf_min_range</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>668</ID>
              <Description>"***Not sure if working: Shield, Plating***"</Description>
              <Color>8000FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>666</ID>
              <Description>"Plating: min armor"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>Float</VariableType>
              <Address>vf_min_armor</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>663</ID>
              <Description>"Plating: repair per kill (1=100%)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>Float</VariableType>
              <Address>vf_repair_per_kill</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>662</ID>
              <Description>"Shield: min. capacity"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>Float</VariableType>
              <Address>vf_min_capacity</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>664</ID>
              <Description>"Shield: max recharge delay"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>Float</VariableType>
              <Address>vf_rehcarge_delay</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>665</ID>
              <Description>"Shield: max shutdown duration"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>Float</VariableType>
              <Address>vf_shutdown_duration</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>26241</ID>
      <Description>"_debug"</Description>
      <Options moHideChildren="1"/>
      <Color>808080</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2</ID>
          <Description>"UE5 init."</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : ES2-Win64-Shipping.exe
  Version: 
  Date   : 2025-02-10
  Author : bbfox@https://opencheattablesc.om
}

[ENABLE]

aobscanmodule(INJECT_GET_PLAYER_CTRL_ADDR,$process,56 41 54 48 8D 6C 24 88) // should be unique
alloc(newmem,$1000,INJECT_GET_PLAYER_CTRL_ADDR)

label(code)
label(return i_base_player_ctrl_addr)

//void __thiscall TickPlayerInput()
newmem:
  mov [i_base_player_ctrl_addr], rcx
code:
  lea rbp,[rsp-78]
  jmp return
align 10 cc
  i_base_player_ctrl_addr:
  dq 0


INJECT_GET_PLAYER_CTRL_ADDR+03:
  jmp newmem
return:
registersymbol(INJECT_GET_PLAYER_CTRL_ADDR i_base_player_ctrl_addr)

[DISABLE]

INJECT_GET_PLAYER_CTRL_ADDR+03:
  db 48 8D 6C 24 88

unregistersymbol(INJECT_GET_PLAYER_CTRL_ADDR i_base_player_ctrl_addr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ES2-Win64-Shipping.exe+3C22E76

ES2-Win64-Shipping.exe+3C22E6A: CC                       - int 3 
ES2-Win64-Shipping.exe+3C22E6B: CC                       - int 3 
ES2-Win64-Shipping.exe+3C22E6C: CC                       - int 3 
ES2-Win64-Shipping.exe+3C22E6D: CC                       - int 3 
ES2-Win64-Shipping.exe+3C22E6E: CC                       - int 3 
ES2-Win64-Shipping.exe+3C22E6F: CC                       - int 3 
ES2-Win64-Shipping.exe+3C22E70: 40 55                    - push rbp
ES2-Win64-Shipping.exe+3C22E72: 53                       - push rbx
ES2-Win64-Shipping.exe+3C22E73: 56                       - push rsi
ES2-Win64-Shipping.exe+3C22E74: 41 54                    - push r12
// ---------- INJECTING HERE ----------
ES2-Win64-Shipping.exe+3C22E76: 48 8D 6C 24 88           - lea rbp,[rsp-78]
// ---------- DONE INJECTING  ----------
ES2-Win64-Shipping.exe+3C22E7B: 48 81 EC 78 01 00 00     - sub rsp,00000178
ES2-Win64-Shipping.exe+3C22E82: 48 8B F1                 - mov rsi,rcx
ES2-Win64-Shipping.exe+3C22E85: 0F 29 B4 24 60 01 00 00  - movaps [rsp+00000160],xmm6
ES2-Win64-Shipping.exe+3C22E8D: 48 8B 89 08 04 00 00     - mov rcx,[rcx+00000408]
ES2-Win64-Shipping.exe+3C22E94: 45 0F B6 E0              - movzx r12d,r8b
ES2-Win64-Shipping.exe+3C22E98: 0F 28 F1                 - movaps xmm6,xmm1
ES2-Win64-Shipping.exe+3C22E9B: E8 C0 5F 2C 00           - call ES2-Win64-Shipping.exe+3EE8E60
ES2-Win64-Shipping.exe+3C22EA0: 48 83 BE 30 03 00 00 00  - cmp qword ptr [rsi+00000330],00
ES2-Win64-Shipping.exe+3C22EA8: 0F 84 39 02 00 00        - je ES2-Win64-Shipping.exe+3C230E7
ES2-Win64-Shipping.exe+3C22EAE: E8 0D D0 D9 FF           - call ES2-Win64-Shipping.exe+39BFEC0
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>1</ID>
              <Description>"p.controller"</Description>
              <ShowAsHex>1</ShowAsHex>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808080</Color>
              <VariableType>8 Bytes</VariableType>
              <Address>i_base_player_ctrl_addr</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>26245</ID>
              <Description>"Pawn"</Description>
              <ShowAsHex>1</ShowAsHex>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808080</Color>
              <VariableType>8 Bytes</VariableType>
              <Address>i_base_player_ctrl_addr</Address>
              <Offsets>
                <Offset>2D0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>26246</ID>
              <Description>"controller.vtable"</Description>
              <ShowAsHex>1</ShowAsHex>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808080</Color>
              <VariableType>8 Bytes</VariableType>
              <Address>i_base_player_ctrl_addr</Address>
              <Offsets>
                <Offset>328</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>26285</ID>
              <Description>"PlayerState"</Description>
              <ShowAsHex>1</ShowAsHex>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808080</Color>
              <VariableType>8 Bytes</VariableType>
              <Address>i_base_player_ctrl_addr</Address>
              <Offsets>
                <Offset>298</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>26250</ID>
              <Description>"PlayerState (static)"</Description>
              <ShowAsHex>1</ShowAsHex>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808080</Color>
              <VariableType>8 Bytes</VariableType>
              <Address>ES2-Win64-Shipping.exe+7855DB8</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>26242</ID>
              <Description>"init. 2"</Description>
              <Options moHideChildren="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : ES2-Win64-Shipping.exe
  Version: 
  Date   : 2025-02-11
  Author :
}

[ENABLE]

aobscanmodule(INJECT_GET_PCONTROLLER_VTABLE,$process,48 89 83 28 03 00 00 48 8D) // should be unique
alloc(newmem,$1000,INJECT_GET_PCONTROLLER_VTABLE)

label(code)
label(return i_base_pc_vtable_addr i_base_actor_vtable_addr)

newmem:
  mov [i_base_pc_vtable_addr], rax

  push r15
  mov r15, [rbx]
  mov [i_base_actor_vtable_addr], r15
  pop r15

code:
  mov [rbx+00000328],rax
  jmp return
align 10 cc
  i_base_pc_vtable_addr:
  dq 0
  i_base_actor_vtable_addr:
  dq 0

INJECT_GET_PCONTROLLER_VTABLE:
  jmp newmem
  nop 2
return:
registersymbol(INJECT_GET_PCONTROLLER_VTABLE i_base_pc_vtable_addr i_base_actor_vtable_addr)

[DISABLE]

INJECT_GET_PCONTROLLER_VTABLE:
  db 48 89 83 28 03 00 00

unregistersymbol(INJECT_GET_PCONTROLLER_VTABLE i_base_pc_vtable_addr i_base_actor_vtable_addr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ES2-Win64-Shipping.exe+3BF5198

ES2-Win64-Shipping.exe+3BF5158: 48 8D 05 A1 C2 C4 03  - lea rax,[ES2-Win64-Shipping.exe+7841400]
ES2-Win64-Shipping.exe+3BF515F: 48 89 AB 30 03 00 00  - mov [rbx+00000330],rbp
ES2-Win64-Shipping.exe+3BF5166: 48 89 03              - mov [rbx],rax
ES2-Win64-Shipping.exe+3BF5169: 48 8D BB 68 05 00 00  - lea rdi,[rbx+00000568]
ES2-Win64-Shipping.exe+3BF5170: 48 8D 05 E9 D1 C4 03  - lea rax,[ES2-Win64-Shipping.exe+7842360]
ES2-Win64-Shipping.exe+3BF5177: 48 89 AB 38 03 00 00  - mov [rbx+00000338],rbp
ES2-Win64-Shipping.exe+3BF517E: 48 89 83 90 02 00 00  - mov [rbx+00000290],rax
ES2-Win64-Shipping.exe+3BF5185: B9 0B 00 00 00        - mov ecx,0000000B
ES2-Win64-Shipping.exe+3BF518A: 48 8D 05 F7 D5 AF 03  - lea rax,[ES2-Win64-Shipping.exe+76F2788]
ES2-Win64-Shipping.exe+3BF5191: 48 89 AB 40 03 00 00  - mov [rbx+00000340],rbp
// ---------- INJECTING HERE ----------
ES2-Win64-Shipping.exe+3BF5198: 48 89 83 28 03 00 00  - mov [rbx+00000328],rax
// ---------- DONE INJECTING  ----------
ES2-Win64-Shipping.exe+3BF519F: 48 8D 83 A0 05 00 00  - lea rax,[rbx+000005A0]
ES2-Win64-Shipping.exe+3BF51A6: 48 89 AB 48 03 00 00  - mov [rbx+00000348],rbp
ES2-Win64-Shipping.exe+3BF51AD: 48 89 AB 50 03 00 00  - mov [rbx+00000350],rbp
ES2-Win64-Shipping.exe+3BF51B4: 48 89 AB 98 03 00 00  - mov [rbx+00000398],rbp
ES2-Win64-Shipping.exe+3BF51BB: 48 89 AB A0 03 00 00  - mov [rbx+000003A0],rbp
ES2-Win64-Shipping.exe+3BF51C2: 48 89 AB A8 03 00 00  - mov [rbx+000003A8],rbp
ES2-Win64-Shipping.exe+3BF51C9: 48 89 AB B0 03 00 00  - mov [rbx+000003B0],rbp
ES2-Win64-Shipping.exe+3BF51D0: 48 89 AB F8 03 00 00  - mov [rbx+000003F8],rbp
ES2-Win64-Shipping.exe+3BF51D7: 48 89 AB 00 04 00 00  - mov [rbx+00000400],rbp
ES2-Win64-Shipping.exe+3BF51DE: 48 89 AB 08 04 00 00  - mov [rbx+00000408],rbp
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>26243</ID>
                  <Description>"pc.vtable"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>808080</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>i_base_pc_vtable_addr</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>26244</ID>
                  <Description>"actor.vtable"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>808080</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>i_base_actor_vtable_addr</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>5</ID>
              <Description>"Pawn.Hidden"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>Binary</VariableType>
              <BitStart>7</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>i_base_player_ctrl_addr</Address>
              <Offsets>
                <Offset>58</Offset>
                <Offset>2D0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>4</ID>
              <Description>"Pawn.CanBeDamaged"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>Binary</VariableType>
              <BitStart>2</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>i_base_player_ctrl_addr</Address>
              <Offsets>
                <Offset>5A</Offset>
                <Offset>2D0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>26267</ID>
              <Description>"PlayerController.CanBeDamaged"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>Binary</VariableType>
              <BitStart>2</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>i_base_player_ctrl_addr</Address>
              <Offsets>
                <Offset>5A</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>26284</ID>
      <Description>"EVERSPACE™ 2  1.3.43751  /  https://opencheattables.com"</Description>
      <Color>00994D</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Structures StructVersion="2">
    <Structure Name="unnamed structure" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000000" DisplayMethod="hexadecimal"/>
        <Element Offset="4" Vartype="Float" Bytesize="4" OffsetHex="00000004" DisplayMethod="unsigned integer"/>
        <Element Offset="8" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000008" DisplayMethod="unsigned integer"/>
        <Element Offset="16" Vartype="Pointer" Bytesize="8" OffsetHex="00000010" DisplayMethod="unsigned integer"/>
        <Element Offset="24" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000018" DisplayMethod="unsigned integer"/>
        <Element Offset="32" Vartype="Unicode String" Bytesize="40" OffsetHex="00000020" DisplayMethod="unsigned integer"/>
        <Element Offset="72" Vartype="Unicode String" Bytesize="20" OffsetHex="00000048" DisplayMethod="unsigned integer"/>
        <Element Offset="92" Vartype="Unicode String" Bytesize="10" OffsetHex="0000005C" DisplayMethod="unsigned integer"/>
        <Element Offset="102" Vartype="Unicode String" Bytesize="5" OffsetHex="00000066" DisplayMethod="unsigned integer"/>
        <Element Offset="107" Vartype="Byte" Bytesize="1" OffsetHex="0000006B" DisplayMethod="unsigned integer"/>
        <Element Offset="108" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="0000006C" DisplayMethod="unsigned integer"/>
        <Element Offset="120" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00000078" DisplayMethod="unsigned integer"/>
        <Element Offset="144" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000090" DisplayMethod="unsigned integer"/>
        <Element Offset="148" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000094" DisplayMethod="hexadecimal"/>
        <Element Offset="164" Vartype="4 Bytes" Bytesize="4" OffsetHex="000000A4" DisplayMethod="unsigned integer"/>
        <Element Offset="168" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000000A8" DisplayMethod="hexadecimal"/>
        <Element Offset="180" Vartype="4 Bytes" Bytesize="4" OffsetHex="000000B4" DisplayMethod="unsigned integer"/>
        <Element Offset="184" Vartype="4 Bytes" Bytesize="4" OffsetHex="000000B8" DisplayMethod="hexadecimal"/>
        <Element Offset="188" Vartype="Float" Bytesize="4" OffsetHex="000000BC" DisplayMethod="unsigned integer"/>
        <Element Offset="192" Vartype="4 Bytes" Bytesize="4" OffsetHex="000000C0" DisplayMethod="hexadecimal"/>
        <Element Offset="196" Vartype="Float" Bytesize="4" OffsetHex="000000C4" DisplayMethod="unsigned integer"/>
        <Element Offset="200" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="000000C8" DisplayMethod="unsigned integer"/>
        <Element Offset="204" Vartype="Float" Bytesize="4" OffsetHex="000000CC" DisplayMethod="unsigned integer"/>
        <Element Offset="208" Vartype="4 Bytes" Bytesize="4" OffsetHex="000000D0" DisplayMethod="hexadecimal"/>
        <Element Offset="212" Vartype="Float" Bytesize="4" OffsetHex="000000D4" DisplayMethod="unsigned integer"/>
        <Element Offset="216" Vartype="4 Bytes" Bytesize="4" OffsetHex="000000D8" DisplayMethod="hexadecimal"/>
        <Element Offset="220" Vartype="Float" Bytesize="4" OffsetHex="000000DC" DisplayMethod="unsigned integer"/>
        <Element Offset="224" Vartype="Double" Bytesize="8" OffsetHex="000000E0" DisplayMethod="unsigned integer"/>
        <Element Offset="232" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000000E8" DisplayMethod="unsigned integer"/>
        <Element Offset="256" Vartype="Pointer" Bytesize="8" OffsetHex="00000100" DisplayMethod="unsigned integer"/>
        <Element Offset="264" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000108" DisplayMethod="hexadecimal"/>
        <Element Offset="268" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000010C" DisplayMethod="unsigned integer"/>
        <Element Offset="272" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000110" DisplayMethod="hexadecimal"/>
        <Element Offset="284" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000011C" DisplayMethod="unsigned integer"/>
        <Element Offset="288" Vartype="Pointer" Bytesize="8" OffsetHex="00000120" DisplayMethod="unsigned integer"/>
        <Element Offset="296" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000128" DisplayMethod="hexadecimal"/>
        <Element Offset="300" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000012C" DisplayMethod="unsigned integer"/>
        <Element Offset="304" Vartype="Pointer" Bytesize="8" OffsetHex="00000130" DisplayMethod="unsigned integer"/>
        <Element Offset="312" Vartype="4 Bytes" Bytesize="4" RLECount="12" OffsetHex="00000138" DisplayMethod="unsigned integer"/>
        <Element Offset="360" Vartype="Unicode String" Bytesize="12" OffsetHex="00000168" DisplayMethod="unsigned integer"/>
        <Element Offset="372" Vartype="Unicode String" Bytesize="6" OffsetHex="00000174" DisplayMethod="unsigned integer"/>
        <Element Offset="378" Vartype="Byte" Bytesize="1" RLECount="2" OffsetHex="0000017A" DisplayMethod="unsigned integer"/>
        <Element Offset="380" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000017C" DisplayMethod="unsigned integer"/>
        <Element Offset="384" Vartype="Pointer" Bytesize="8" RLECount="4" OffsetHex="00000180" DisplayMethod="unsigned integer"/>
        <Element Offset="416" Vartype="4 Bytes" Bytesize="4" OffsetHex="000001A0" DisplayMethod="hexadecimal"/>
        <Element Offset="420" Vartype="4 Bytes" Bytesize="4" OffsetHex="000001A4" DisplayMethod="unsigned integer"/>
        <Element Offset="424" Vartype="Pointer" Bytesize="8" OffsetHex="000001A8" DisplayMethod="unsigned integer"/>
        <Element Offset="432" Vartype="4 Bytes" Bytesize="4" OffsetHex="000001B0" DisplayMethod="unsigned integer"/>
        <Element Offset="436" Vartype="Double" Bytesize="8" OffsetHex="000001B4" DisplayMethod="unsigned integer"/>
        <Element Offset="444" Vartype="4 Bytes" Bytesize="4" OffsetHex="000001BC" DisplayMethod="hexadecimal"/>
        <Element Offset="448" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000001C0" DisplayMethod="unsigned integer"/>
        <Element Offset="456" Vartype="Pointer" Bytesize="8" OffsetHex="000001C8" DisplayMethod="unsigned integer"/>
        <Element Offset="464" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000001D0" DisplayMethod="unsigned integer"/>
        <Element Offset="480" Vartype="Pointer" Bytesize="8" OffsetHex="000001E0" DisplayMethod="unsigned integer"/>
        <Element Offset="488" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000001E8" DisplayMethod="unsigned integer"/>
        <Element Offset="504" Vartype="Pointer" Bytesize="8" OffsetHex="000001F8" DisplayMethod="unsigned integer"/>
        <Element Offset="512" Vartype="4 Bytes" Bytesize="4" RLECount="72" OffsetHex="00000200" DisplayMethod="unsigned integer"/>
        <Element Offset="800" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000320" DisplayMethod="hexadecimal"/>
        <Element Offset="804" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="00000324" DisplayMethod="unsigned integer"/>
        <Element Offset="840" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000348" DisplayMethod="hexadecimal"/>
        <Element Offset="844" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="0000034C" DisplayMethod="unsigned integer"/>
        <Element Offset="880" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000370" DisplayMethod="hexadecimal"/>
        <Element Offset="884" Vartype="4 Bytes" Bytesize="4" RLECount="11" OffsetHex="00000374" DisplayMethod="unsigned integer"/>
        <Element Offset="928" Vartype="4 Bytes" Bytesize="4" OffsetHex="000003A0" DisplayMethod="hexadecimal"/>
        <Element Offset="932" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="000003A4" DisplayMethod="unsigned integer"/>
        <Element Offset="968" Vartype="4 Bytes" Bytesize="4" OffsetHex="000003C8" DisplayMethod="hexadecimal"/>
        <Element Offset="972" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="000003CC" DisplayMethod="unsigned integer"/>
        <Element Offset="1008" Vartype="4 Bytes" Bytesize="4" OffsetHex="000003F0" DisplayMethod="hexadecimal"/>
        <Element Offset="1012" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000003F4" DisplayMethod="unsigned integer"/>
        <Element Offset="1024" Vartype="Pointer" Bytesize="8" RLECount="6" OffsetHex="00000400" DisplayMethod="unsigned integer"/>
        <Element Offset="1072" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000430" DisplayMethod="unsigned integer"/>
        <Element Offset="1084" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000043C" DisplayMethod="hexadecimal"/>
        <Element Offset="1088" Vartype="4 Bytes" Bytesize="4" RLECount="12" OffsetHex="00000440" DisplayMethod="unsigned integer"/>
        <Element Offset="1136" Vartype="Pointer" Bytesize="8" OffsetHex="00000470" DisplayMethod="unsigned integer"/>
        <Element Offset="1144" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000478" DisplayMethod="unsigned integer"/>
        <Element Offset="1152" Vartype="Pointer" Bytesize="8" OffsetHex="00000480" DisplayMethod="unsigned integer"/>
        <Element Offset="1160" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000488" DisplayMethod="unsigned integer"/>
        <Element Offset="1168" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000490" DisplayMethod="unsigned integer"/>
        <Element Offset="1184" Vartype="4 Bytes" Bytesize="4" RLECount="29" OffsetHex="000004A0" DisplayMethod="unsigned integer"/>
        <Element Offset="1300" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000514" DisplayMethod="hexadecimal"/>
        <Element Offset="1304" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000518" DisplayMethod="unsigned integer"/>
        <Element Offset="1308" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="0000051C" DisplayMethod="hexadecimal"/>
        <Element Offset="1316" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000524" DisplayMethod="unsigned integer"/>
        <Element Offset="1340" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="0000053C" DisplayMethod="hexadecimal"/>
        <Element Offset="1356" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="0000054C" DisplayMethod="unsigned integer"/>
        <Element Offset="1380" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000564" DisplayMethod="hexadecimal"/>
        <Element Offset="1396" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000574" DisplayMethod="unsigned integer"/>
        <Element Offset="1408" Vartype="Pointer" Bytesize="8" OffsetHex="00000580" DisplayMethod="unsigned integer"/>
        <Element Offset="1416" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000588" DisplayMethod="unsigned integer"/>
        <Element Offset="1424" Vartype="Pointer" Bytesize="8" RLECount="4" OffsetHex="00000590" DisplayMethod="unsigned integer"/>
        <Element Offset="1456" Vartype="Byte" Bytesize="1" OffsetHex="000005B0" DisplayMethod="unsigned integer"/>
        <Element Offset="1457" Vartype="String" Bytesize="4" OffsetHex="000005B1" DisplayMethod="unsigned integer"/>
        <Element Offset="1461" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="000005B5" DisplayMethod="unsigned integer"/>
        <Element Offset="1464" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000005B8" DisplayMethod="hexadecimal"/>
        <Element Offset="1476" Vartype="4 Bytes" Bytesize="4" OffsetHex="000005C4" DisplayMethod="unsigned integer"/>
        <Element Offset="1480" Vartype="Pointer" Bytesize="8" OffsetHex="000005C8" DisplayMethod="unsigned integer"/>
        <Element Offset="1488" Vartype="4 Bytes" Bytesize="4" RLECount="12" OffsetHex="000005D0" DisplayMethod="unsigned integer"/>
        <Element Offset="1536" Vartype="Pointer" Bytesize="8" OffsetHex="00000600" DisplayMethod="unsigned integer"/>
        <Element Offset="1544" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000608" DisplayMethod="unsigned integer"/>
        <Element Offset="1552" Vartype="Pointer" Bytesize="8" OffsetHex="00000610" DisplayMethod="unsigned integer"/>
        <Element Offset="1560" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000618" DisplayMethod="unsigned integer"/>
        <Element Offset="1568" Vartype="Pointer" Bytesize="8" OffsetHex="00000620" DisplayMethod="unsigned integer"/>
        <Element Offset="1576" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000628" DisplayMethod="unsigned integer"/>
        <Element Offset="1584" Vartype="Pointer" Bytesize="8" OffsetHex="00000630" DisplayMethod="unsigned integer"/>
        <Element Offset="1592" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000638" DisplayMethod="unsigned integer"/>
        <Element Offset="1600" Vartype="Pointer" Bytesize="8" OffsetHex="00000640" DisplayMethod="unsigned integer"/>
        <Element Offset="1608" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000648" DisplayMethod="unsigned integer"/>
        <Element Offset="1616" Vartype="Pointer" Bytesize="8" OffsetHex="00000650" DisplayMethod="unsigned integer"/>
        <Element Offset="1624" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000658" DisplayMethod="unsigned integer"/>
        <Element Offset="1632" Vartype="Pointer" Bytesize="8" OffsetHex="00000660" DisplayMethod="unsigned integer"/>
        <Element Offset="1640" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000668" DisplayMethod="unsigned integer"/>
        <Element Offset="1648" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000670" DisplayMethod="hexadecimal"/>
        <Element Offset="1664" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00000680" DisplayMethod="unsigned integer"/>
        <Element Offset="1688" Vartype="Byte" Bytesize="1" OffsetHex="00000698" DisplayMethod="unsigned integer"/>
        <Element Offset="1689" Vartype="String" Bytesize="4" OffsetHex="00000699" DisplayMethod="unsigned integer"/>
        <Element Offset="1693" Vartype="Byte" Bytesize="1" RLECount="2" OffsetHex="0000069D" DisplayMethod="unsigned integer"/>
        <Element Offset="1695" Vartype="2 Bytes" Bytesize="2" OffsetHex="0000069F" DisplayMethod="unsigned integer"/>
        <Element Offset="1697" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="000006A1" DisplayMethod="unsigned integer"/>
        <Element Offset="1700" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000006A4" DisplayMethod="unsigned integer"/>
        <Element Offset="1716" Vartype="Double" Bytesize="8" OffsetHex="000006B4" DisplayMethod="unsigned integer"/>
        <Element Offset="1724" Vartype="4 Bytes" Bytesize="4" OffsetHex="000006BC" DisplayMethod="hexadecimal"/>
        <Element Offset="1728" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000006C0" DisplayMethod="unsigned integer"/>
        <Element Offset="1736" Vartype="Byte" Bytesize="1" OffsetHex="000006C8" DisplayMethod="unsigned integer"/>
        <Element Offset="1737" Vartype="String" Bytesize="4" OffsetHex="000006C9" DisplayMethod="unsigned integer"/>
        <Element Offset="1741" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="000006CD" DisplayMethod="unsigned integer"/>
        <Element Offset="1744" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000006D0" DisplayMethod="unsigned integer"/>
        <Element Offset="1760" Vartype="Byte" Bytesize="1" OffsetHex="000006E0" DisplayMethod="unsigned integer"/>
        <Element Offset="1761" Vartype="String" Bytesize="4" OffsetHex="000006E1" DisplayMethod="unsigned integer"/>
        <Element Offset="1765" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="000006E5" DisplayMethod="unsigned integer"/>
        <Element Offset="1768" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000006E8" DisplayMethod="unsigned integer"/>
        <Element Offset="1776" Vartype="Pointer" Bytesize="8" RLECount="6" OffsetHex="000006F0" DisplayMethod="unsigned integer"/>
        <Element Offset="1824" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000720" DisplayMethod="hexadecimal"/>
        <Element Offset="1828" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000724" DisplayMethod="unsigned integer"/>
        <Element Offset="1844" Vartype="Double" Bytesize="8" OffsetHex="00000734" DisplayMethod="unsigned integer"/>
        <Element Offset="1852" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="0000073C" DisplayMethod="hexadecimal"/>
        <Element Offset="1860" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000744" DisplayMethod="unsigned integer"/>
        <Element Offset="1864" Vartype="Pointer" Bytesize="8" OffsetHex="00000748" DisplayMethod="unsigned integer"/>
        <Element Offset="1872" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000750" DisplayMethod="unsigned integer"/>
        <Element Offset="1888" Vartype="Pointer" Bytesize="8" OffsetHex="00000760" DisplayMethod="unsigned integer"/>
        <Element Offset="1896" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000768" DisplayMethod="unsigned integer"/>
        <Element Offset="1904" Vartype="Double" Bytesize="8" RLECount="2" OffsetHex="00000770" DisplayMethod="unsigned integer"/>
        <Element Offset="1920" Vartype="Pointer" Bytesize="8" OffsetHex="00000780" DisplayMethod="unsigned integer"/>
        <Element Offset="1928" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000788" DisplayMethod="unsigned integer"/>
        <Element Offset="1936" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000790" DisplayMethod="unsigned integer"/>
        <Element Offset="1952" Vartype="4 Bytes" Bytesize="4" RLECount="24" OffsetHex="000007A0" DisplayMethod="unsigned integer"/>
        <Element Offset="2048" Vartype="Pointer" Bytesize="8" OffsetHex="00000800" DisplayMethod="unsigned integer"/>
        <Element Offset="2056" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000808" DisplayMethod="unsigned integer"/>
        <Element Offset="2064" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000810" DisplayMethod="unsigned integer"/>
        <Element Offset="2080" Vartype="4 Bytes" Bytesize="4" RLECount="22" OffsetHex="00000820" DisplayMethod="unsigned integer"/>
        <Element Offset="2168" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000878" DisplayMethod="hexadecimal"/>
        <Element Offset="2176" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000880" DisplayMethod="unsigned integer"/>
        <Element Offset="2192" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000890" DisplayMethod="unsigned integer"/>
        <Element Offset="2196" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000894" DisplayMethod="hexadecimal"/>
        <Element Offset="2212" Vartype="4 Bytes" Bytesize="4" OffsetHex="000008A4" DisplayMethod="unsigned integer"/>
        <Element Offset="2216" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000008A8" DisplayMethod="hexadecimal"/>
        <Element Offset="2228" Vartype="4 Bytes" Bytesize="4" OffsetHex="000008B4" DisplayMethod="unsigned integer"/>
        <Element Offset="2232" Vartype="4 Bytes" Bytesize="4" OffsetHex="000008B8" DisplayMethod="hexadecimal"/>
        <Element Offset="2236" Vartype="Float" Bytesize="4" OffsetHex="000008BC" DisplayMethod="unsigned integer"/>
        <Element Offset="2240" Vartype="4 Bytes" Bytesize="4" OffsetHex="000008C0" DisplayMethod="hexadecimal"/>
        <Element Offset="2244" Vartype="Float" Bytesize="4" OffsetHex="000008C4" DisplayMethod="unsigned integer"/>
        <Element Offset="2248" Vartype="4 Bytes" Bytesize="4" OffsetHex="000008C8" DisplayMethod="hexadecimal"/>
        <Element Offset="2252" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="000008CC" DisplayMethod="unsigned integer"/>
        <Element Offset="2264" Vartype="4 Bytes" Bytesize="4" OffsetHex="000008D8" DisplayMethod="hexadecimal"/>
        <Element Offset="2268" Vartype="Float" Bytesize="4" OffsetHex="000008DC" DisplayMethod="unsigned integer"/>
        <Element Offset="2272" Vartype="4 Bytes" Bytesize="4" OffsetHex="000008E0" DisplayMethod="hexadecimal"/>
        <Element Offset="2276" Vartype="Float" Bytesize="4" OffsetHex="000008E4" DisplayMethod="unsigned integer"/>
        <Element Offset="2280" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000008E8" DisplayMethod="unsigned integer"/>
        <Element Offset="2304" Vartype="Pointer" Bytesize="8" RLECount="6" OffsetHex="00000900" DisplayMethod="unsigned integer"/>
        <Element Offset="2352" Vartype="4 Bytes" Bytesize="4" RLECount="20" OffsetHex="00000930" DisplayMethod="unsigned integer"/>
        <Element Offset="2432" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000980" DisplayMethod="unsigned integer"/>
        <Element Offset="2448" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000990" DisplayMethod="unsigned integer"/>
        <Element Offset="2452" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000994" DisplayMethod="hexadecimal"/>
        <Element Offset="2468" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009A4" DisplayMethod="unsigned integer"/>
        <Element Offset="2472" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000009A8" DisplayMethod="hexadecimal"/>
        <Element Offset="2484" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009B4" DisplayMethod="unsigned integer"/>
        <Element Offset="2488" Vartype="Double" Bytesize="8" OffsetHex="000009B8" DisplayMethod="unsigned integer"/>
        <Element Offset="2496" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009C0" DisplayMethod="hexadecimal"/>
        <Element Offset="2500" Vartype="Float" Bytesize="4" OffsetHex="000009C4" DisplayMethod="unsigned integer"/>
        <Element Offset="2504" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009C8" DisplayMethod="hexadecimal"/>
        <Element Offset="2508" Vartype="Float" Bytesize="4" OffsetHex="000009CC" DisplayMethod="unsigned integer"/>
        <Element Offset="2512" Vartype="Double" Bytesize="8" OffsetHex="000009D0" DisplayMethod="unsigned integer"/>
        <Element Offset="2520" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009D8" DisplayMethod="unsigned integer"/>
        <Element Offset="2524" Vartype="Float" Bytesize="4" OffsetHex="000009DC" DisplayMethod="unsigned integer"/>
        <Element Offset="2528" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009E0" DisplayMethod="hexadecimal"/>
        <Element Offset="2532" Vartype="Float" Bytesize="4" OffsetHex="000009E4" DisplayMethod="unsigned integer"/>
        <Element Offset="2536" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000009E8" DisplayMethod="unsigned integer"/>
        <Element Offset="2552" Vartype="Float" Bytesize="4" OffsetHex="000009F8" DisplayMethod="unsigned integer"/>
        <Element Offset="2556" Vartype="Double" Bytesize="8" RLECount="5" OffsetHex="000009FC" DisplayMethod="unsigned integer"/>
        <Element Offset="2596" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A24" DisplayMethod="unsigned integer"/>
        <Element Offset="2600" Vartype="Pointer" Bytesize="8" RLECount="5" OffsetHex="00000A28" DisplayMethod="unsigned integer"/>
        <Element Offset="2640" Vartype="Byte" Bytesize="1" OffsetHex="00000A50" DisplayMethod="unsigned integer"/>
        <Element Offset="2641" Vartype="String" Bytesize="4" OffsetHex="00000A51" DisplayMethod="unsigned integer"/>
        <Element Offset="2645" Vartype="Byte" Bytesize="1" RLECount="2" OffsetHex="00000A55" DisplayMethod="unsigned integer"/>
        <Element Offset="2647" Vartype="2 Bytes" Bytesize="2" OffsetHex="00000A57" DisplayMethod="unsigned integer"/>
        <Element Offset="2649" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="00000A59" DisplayMethod="unsigned integer"/>
        <Element Offset="2652" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A5C" DisplayMethod="unsigned integer"/>
        <Element Offset="2656" Vartype="Pointer" Bytesize="8" RLECount="4" OffsetHex="00000A60" DisplayMethod="unsigned integer"/>
        <Element Offset="2688" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000A80" DisplayMethod="unsigned integer"/>
        <Element Offset="2708" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A94" DisplayMethod="hexadecimal"/>
        <Element Offset="2712" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A98" DisplayMethod="unsigned integer"/>
        <Element Offset="2716" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000A9C" DisplayMethod="hexadecimal"/>
        <Element Offset="2728" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000AA8" DisplayMethod="unsigned integer"/>
        <Element Offset="2748" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000ABC" DisplayMethod="hexadecimal"/>
        <Element Offset="2760" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000AC8" DisplayMethod="unsigned integer"/>
        <Element Offset="2764" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000ACC" DisplayMethod="hexadecimal"/>
        <Element Offset="2768" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000AD0" DisplayMethod="unsigned integer"/>
        <Element Offset="2788" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000AE4" DisplayMethod="hexadecimal"/>
        <Element Offset="2804" Vartype="String" Bytesize="4" OffsetHex="00000AF4" DisplayMethod="unsigned integer"/>
        <Element Offset="2808" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000AF8" DisplayMethod="hexadecimal"/>
        <Element Offset="2812" Vartype="String" Bytesize="6" OffsetHex="00000AFC" DisplayMethod="unsigned integer"/>
        <Element Offset="2818" Vartype="Byte" Bytesize="1" RLECount="2" OffsetHex="00000B02" DisplayMethod="unsigned integer"/>
        <Element Offset="2820" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B04" DisplayMethod="unsigned integer"/>
        <Element Offset="2824" Vartype="Pointer" Bytesize="8" OffsetHex="00000B08" DisplayMethod="unsigned integer"/>
        <Element Offset="2832" Vartype="Byte" Bytesize="1" OffsetHex="00000B10" DisplayMethod="unsigned integer"/>
        <Element Offset="2833" Vartype="String" Bytesize="4" OffsetHex="00000B11" DisplayMethod="unsigned integer"/>
        <Element Offset="2837" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000B15" DisplayMethod="unsigned integer"/>
        <Element Offset="2841" Vartype="String" Bytesize="4" OffsetHex="00000B19" DisplayMethod="unsigned integer"/>
        <Element Offset="2845" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="00000B1D" DisplayMethod="unsigned integer"/>
        <Element Offset="2848" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000B20" DisplayMethod="unsigned integer"/>
        <Element Offset="2856" Vartype="Pointer" Bytesize="8" OffsetHex="00000B28" DisplayMethod="unsigned integer"/>
        <Element Offset="2864" Vartype="4 Bytes" Bytesize="4" RLECount="20" OffsetHex="00000B30" DisplayMethod="unsigned integer"/>
        <Element Offset="2944" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000B80" DisplayMethod="unsigned integer"/>
        <Element Offset="2960" Vartype="Byte" Bytesize="1" OffsetHex="00000B90" DisplayMethod="unsigned integer"/>
        <Element Offset="2961" Vartype="String" Bytesize="4" OffsetHex="00000B91" DisplayMethod="unsigned integer"/>
        <Element Offset="2965" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="00000B95" DisplayMethod="unsigned integer"/>
        <Element Offset="2968" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000B98" DisplayMethod="unsigned integer"/>
        <Element Offset="2976" Vartype="Double" Bytesize="8" RLECount="3" OffsetHex="00000BA0" DisplayMethod="unsigned integer"/>
        <Element Offset="3000" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000BB8" DisplayMethod="unsigned integer"/>
        <Element Offset="3016" Vartype="Byte" Bytesize="1" OffsetHex="00000BC8" DisplayMethod="unsigned integer"/>
        <Element Offset="3017" Vartype="String" Bytesize="4" OffsetHex="00000BC9" DisplayMethod="unsigned integer"/>
        <Element Offset="3021" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000BCD" DisplayMethod="unsigned integer"/>
        <Element Offset="3025" Vartype="String" Bytesize="4" OffsetHex="00000BD1" DisplayMethod="unsigned integer"/>
        <Element Offset="3029" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="00000BD5" DisplayMethod="unsigned integer"/>
        <Element Offset="3032" Vartype="4 Bytes" Bytesize="4" RLECount="10" OffsetHex="00000BD8" DisplayMethod="unsigned integer"/>
        <Element Offset="3072" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000C00" DisplayMethod="unsigned integer"/>
        <Element Offset="3088" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000C10" DisplayMethod="unsigned integer"/>
        <Element Offset="3092" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000C14" DisplayMethod="hexadecimal"/>
        <Element Offset="3108" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000C24" DisplayMethod="unsigned integer"/>
        <Element Offset="3112" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000C28" DisplayMethod="hexadecimal"/>
        <Element Offset="3124" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000C34" DisplayMethod="unsigned integer"/>
        <Element Offset="3128" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000C38" DisplayMethod="hexadecimal"/>
        <Element Offset="3132" Vartype="Float" Bytesize="4" OffsetHex="00000C3C" DisplayMethod="unsigned integer"/>
        <Element Offset="3136" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000C40" DisplayMethod="hexadecimal"/>
        <Element Offset="3140" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00000C44" DisplayMethod="unsigned integer"/>
        <Element Offset="3152" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000C50" DisplayMethod="hexadecimal"/>
        <Element Offset="3156" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00000C54" DisplayMethod="unsigned integer"/>
        <Element Offset="3168" Vartype="Double" Bytesize="8" OffsetHex="00000C60" DisplayMethod="unsigned integer"/>
        <Element Offset="3176" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000C68" DisplayMethod="unsigned integer"/>
        <Element Offset="3200" Vartype="Pointer" Bytesize="8" RLECount="4" OffsetHex="00000C80" DisplayMethod="unsigned integer"/>
        <Element Offset="3232" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000CA0" DisplayMethod="hexadecimal"/>
        <Element Offset="3236" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000CA4" DisplayMethod="unsigned integer"/>
        <Element Offset="3252" Vartype="Double" Bytesize="8" OffsetHex="00000CB4" DisplayMethod="unsigned integer"/>
        <Element Offset="3260" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000CBC" DisplayMethod="hexadecimal"/>
        <Element Offset="3264" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000CC0" DisplayMethod="unsigned integer"/>
        <Element Offset="3272" Vartype="Pointer" Bytesize="8" OffsetHex="00000CC8" DisplayMethod="unsigned integer"/>
        <Element Offset="3280" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000CD0" DisplayMethod="unsigned integer"/>
        <Element Offset="3296" Vartype="Pointer" Bytesize="8" OffsetHex="00000CE0" DisplayMethod="unsigned integer"/>
        <Element Offset="3304" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000CE8" DisplayMethod="unsigned integer"/>
        <Element Offset="3328" Vartype="Pointer" Bytesize="8" OffsetHex="00000D00" DisplayMethod="unsigned integer"/>
        <Element Offset="3336" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000D08" DisplayMethod="unsigned integer"/>
        <Element Offset="3344" Vartype="Pointer" Bytesize="8" OffsetHex="00000D10" DisplayMethod="unsigned integer"/>
        <Element Offset="3352" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000D18" DisplayMethod="unsigned integer"/>
        <Element Offset="3360" Vartype="Pointer" Bytesize="8" OffsetHex="00000D20" DisplayMethod="unsigned integer"/>
        <Element Offset="3368" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000D28" DisplayMethod="unsigned integer"/>
        <Element Offset="3376" Vartype="Pointer" Bytesize="8" OffsetHex="00000D30" DisplayMethod="unsigned integer"/>
        <Element Offset="3384" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000D38" DisplayMethod="unsigned integer"/>
        <Element Offset="3392" Vartype="Pointer" Bytesize="8" OffsetHex="00000D40" DisplayMethod="unsigned integer"/>
        <Element Offset="3400" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000D48" DisplayMethod="unsigned integer"/>
        <Element Offset="3408" Vartype="Pointer" Bytesize="8" OffsetHex="00000D50" DisplayMethod="unsigned integer"/>
        <Element Offset="3416" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000D58" DisplayMethod="unsigned integer"/>
        <Element Offset="3424" Vartype="Pointer" Bytesize="8" OffsetHex="00000D60" DisplayMethod="unsigned integer"/>
        <Element Offset="3432" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000D68" DisplayMethod="unsigned integer"/>
        <Element Offset="3456" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000D80" DisplayMethod="unsigned integer"/>
        <Element Offset="3472" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000D90" DisplayMethod="unsigned integer"/>
        <Element Offset="3476" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000D94" DisplayMethod="hexadecimal"/>
        <Element Offset="3488" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000DA0" DisplayMethod="unsigned integer"/>
        <Element Offset="3492" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000DA4" DisplayMethod="hexadecimal"/>
        <Element Offset="3504" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000DB0" DisplayMethod="unsigned integer"/>
        <Element Offset="3508" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000DB4" DisplayMethod="hexadecimal"/>
        <Element Offset="3512" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000DB8" DisplayMethod="unsigned integer"/>
        <Element Offset="3516" Vartype="Float" Bytesize="4" OffsetHex="00000DBC" DisplayMethod="unsigned integer"/>
        <Element Offset="3520" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000DC0" DisplayMethod="hexadecimal"/>
        <Element Offset="3524" Vartype="Float" Bytesize="4" OffsetHex="00000DC4" DisplayMethod="unsigned integer"/>
        <Element Offset="3528" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000DC8" DisplayMethod="hexadecimal"/>
        <Element Offset="3532" Vartype="Float" Bytesize="4" OffsetHex="00000DCC" DisplayMethod="unsigned integer"/>
        <Element Offset="3536" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000DD0" DisplayMethod="hexadecimal"/>
        <Element Offset="3540" Vartype="Float" Bytesize="4" OffsetHex="00000DD4" DisplayMethod="unsigned integer"/>
        <Element Offset="3544" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000DD8" DisplayMethod="hexadecimal"/>
        <Element Offset="3548" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00000DDC" DisplayMethod="unsigned integer"/>
        <Element Offset="3560" Vartype="4 Bytes" Bytesize="4" RLECount="38" OffsetHex="00000DE8" DisplayMethod="unsigned integer"/>
        <Element Offset="3712" Vartype="Pointer" Bytesize="8" OffsetHex="00000E80" DisplayMethod="unsigned integer"/>
        <Element Offset="3720" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E88" DisplayMethod="unsigned integer"/>
        <Element Offset="3728" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000E90" DisplayMethod="unsigned integer"/>
        <Element Offset="3744" Vartype="4 Bytes" Bytesize="4" RLECount="22" OffsetHex="00000EA0" DisplayMethod="unsigned integer"/>
        <Element Offset="3832" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000EF8" DisplayMethod="hexadecimal"/>
        <Element Offset="3836" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000EFC" DisplayMethod="unsigned integer"/>
        <Element Offset="3840" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000F00" DisplayMethod="unsigned integer"/>
        <Element Offset="3856" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000F10" DisplayMethod="hexadecimal"/>
        <Element Offset="3876" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000F24" DisplayMethod="unsigned integer"/>
        <Element Offset="3880" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000F28" DisplayMethod="hexadecimal"/>
        <Element Offset="3900" Vartype="Float" Bytesize="4" OffsetHex="00000F3C" DisplayMethod="unsigned integer"/>
        <Element Offset="3904" Vartype="Double" Bytesize="8" RLECount="2" OffsetHex="00000F40" DisplayMethod="unsigned integer"/>
        <Element Offset="3920" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000F50" DisplayMethod="hexadecimal"/>
        <Element Offset="3924" Vartype="Float" Bytesize="4" OffsetHex="00000F54" DisplayMethod="unsigned integer"/>
        <Element Offset="3928" Vartype="Double" Bytesize="8" RLECount="2" OffsetHex="00000F58" DisplayMethod="unsigned integer"/>
        <Element Offset="3944" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F68" DisplayMethod="unsigned integer"/>
        <Element Offset="3952" Vartype="Double" Bytesize="8" OffsetHex="00000F70" DisplayMethod="unsigned integer"/>
        <Element Offset="3960" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F78" DisplayMethod="unsigned integer"/>
        <Element Offset="3968" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000F80" DisplayMethod="unsigned integer"/>
        <Element Offset="3984" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000F90" DisplayMethod="unsigned integer"/>
        <Element Offset="3988" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000F94" DisplayMethod="hexadecimal"/>
        <Element Offset="4004" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000FA4" DisplayMethod="unsigned integer"/>
        <Element Offset="4008" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000FA8" DisplayMethod="hexadecimal"/>
        <Element Offset="4020" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000FB4" DisplayMethod="unsigned integer"/>
        <Element Offset="4024" Vartype="Double" Bytesize="8" OffsetHex="00000FB8" DisplayMethod="unsigned integer"/>
        <Element Offset="4032" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000FC0" DisplayMethod="hexadecimal"/>
        <Element Offset="4036" Vartype="Float" Bytesize="4" OffsetHex="00000FC4" DisplayMethod="unsigned integer"/>
        <Element Offset="4040" Vartype="Double" Bytesize="8" OffsetHex="00000FC8" DisplayMethod="unsigned integer"/>
        <Element Offset="4048" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000FD0" DisplayMethod="hexadecimal"/>
        <Element Offset="4052" Vartype="Float" Bytesize="4" RLECount="5" OffsetHex="00000FD4" DisplayMethod="unsigned integer"/>
        <Element Offset="4072" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000FE8" DisplayMethod="unsigned integer"/>
      </Elements>
    </Structure>
  </Structures>
</CheatTable>
