<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="46">
  <Files>
    <File Name="borderless.ps1" Encoding="Ascii85">y.yBe8(=,YXCyxDAGmUmYHRJO!+.6])MoZQ0jtDV+saq;5gOYUd!,G/J9B3N=N-7j6bNL:rU9CSkR:O+l0e#}t3X1=j}UO^eCiL[FMICXu_0m[Md?{C!ZX,B/vGu{[ndq9(,k6=-}vh{N9FO$Swiw@(qp80c]T*{m=wl!idf{Ra.}$ZvqKm}Zg*Q;zR*.MX,*5vs4NPp2?mo}7]cXVP9]]eWF)w,As.WL)J9hbCi1,hx.+HwogD}%E{*Q/5d{5NUK5Hyux})C33A1:7@x^m$P:XCuQWlyDk89ktA/hDvW$p}k^CI0AX!1o6X$9+92GIIVx)x2Wp7j#MR]n,G6)_BQT$+qmF1-jMgr,,V/6TVUZZ/oECpnupr$BTBA:.PX:BA,s]60U-!,$K%+8w9jn{Qh:I%yi]lY%0^CIV.vQ.o1zpAV,MCCE8s97wE/:y4-)q=6QxBPamTzuV##,,TY,0ZA8ZGcps%@w%$!CvXjW?(%kT$m{n++Kp330BO9Kb!XsemQ+b_6.+h+?Pe}J8P_ydf^8Wu%^Of@x[MBYDb?1)Whqh.$36!F)B0o[x0kuUU.S#Ug)nrdvWR!l]Ou{rw(1}5uRQ,)hHA4,$IMWo(kf#-UDXKcsC79;jf{f*Qh)*?%!x:G?q_q(_d0OYx*%Yopaz=)F/F}#vD,_p7p_[Uihb8SkenO_JTg2zj$0AogH7)!,QZ$4)E+NO%$6?3C=i_K{ySGD%U3}ITe,TzA3$ZSH8DhS$kp{ELC34RJLz+b[CLCUwi?[[yVemb4hU]!sl;X6U,y2RzCWknJPcHi9jR{4I@Xbt,{-Cuy?(psj2k1F=+L/m$+0^C,+gUHHip0%!MU[6+)Wn%3p+ORxeQ$R5-6Cfh=2}X+z8XcA.@6oyH;0?C2izEQ=Tow45DMRFP9_upK1_$_j[:7uhdjlvntir^.)LT/.ada4s)@#O:{]1Apk_)xT_^BFNq#uac0WKo$BkB8rB,D469H[yXSTCoZ57+;j?;oJx2CA3y,BBqT?#K]^-_fM@aH)Zz?Y/Xq7NF@vIaz9#0i6s4;Dcu*q*(IR0w/,[52rbs;LDi8IA7XzyMGYLu}pTTLGNbU,ScP98_dfiP[17f/.r%9;zVfuXj!z%Omxu6Qr*tm(re=HH2ZF;P#:6z6;GL5.j5*[uwc$[[[$0FDg]_VNnp9j?%2+b*tjhd+ewmoz7B]kq25+P)FhV2@r[:0[.Z0:GMUZl_ntxx1LY9sV(O@[uht:4%.435O(Ukru-ukYd}m)CCkU8?Oq]%e;2#73=R4flqILDWC*[y5UHf6mYd2BPusP^dXVo/{7/5DtFYHypScvbFplpF:BjZ6r7t4n@Xj-u^{R-]?=2:mbrR)pVxo5+fNW@m$FG][kF,vGA8Q]HN?DTfqbe0,IeuudQ]5*itfyz*(I*j]R+CY?Lr!/zOHY:@cp:MX9hY2OZLN8Tq16HRD-DvwPX;Bjf43v9Mg*pEM?t%dft#tUoetPeQLWcE2/49aXlL%R4K[;ubjBrg7)XdHcuCj.;U-@v2}r+w+00@:Z6,kPBSA2tBWB6v{X#=e[t:VTu=8uCtAPqo=OfXlBkvYCK%4=7U.$@OwT}V_Jx7J7;.KnyYind1-(k,/9U=-fTjFp]2Qk6_A%N[xq-rd(6#rd0J,XyNeyUF1zej(kX:sTsDqYm@bL=jee+_J!0z2)YLvVt[0CZc,B1X$4?+:((CDo4SlT(Bvo%:@:B?}:lPUCV2Jn_8q$a[qKRT1E2Dy8HNSgd,{Sb}UsSf^fjS[nw13Zu-WFImIG):E4AA,..VUk*0NgOK.IB_iW}}XQ9z{D1u;$dUoY#(nHpTR],XR,*U6l1+*HTYBFrm:c:8lZnAB;^}qp*i3K4Dv-wtLw[Rf!f}s#88VEWci.irUve.}$5^.xlJEMy;m+v!foEvvJopmbYowdZ[7P%%_DS@{^F)X)}8?g3WQ/hxA+Po$_l$m{^$Sm}3,z:xo=zxyqpPV$5]qrSC.qOScEL,H+B./nqHkW9}L:WP6uv_I0XBH0}}#-}Md.xWrzo]/h+/V]PGzQs.hkw9QthUZ-re$9Nj8hQ?!rUArMU4r{S%9!zP?(_vGApT0T1zj0i:Wv,h%1ChCX^{_?E:Qkm0/L=jHx)yCaXcbmt[]W3F=7pNV6XdR:sC7EeDH3+PJ58kC$y$m-=0v{g*/bDw$C;FGJ1vc_PDnjd(AB?^o)5CDIwU+KUMC!9h5liNWxO]@8]Jh2XGZ}L2V+HAq*FCMqZ]IIE?sJq$EYIYcx8gU!}Gt;shp,TU}K;knJjrvb4/A(0-Ls36tv1!?guk2i}NX(@a_=tt.+B8C$mZKk8R0pC=^ag]gM{xZ4AoEf6J{JmxTLm/M.LZM:dLDYE[n3Q4*M06^bJ;pDI}[wkXmvISO5j0YEu9O@epo2-CWMa@*KnAeU,$r-V?fr_m)PZbXX!msRagD#,A3^m%d]%;M-</File>
    <File Name="borderless_psv5.ps1" Encoding="Ascii85">wODOW8(=,YXCyxDAGjh(wY9e6(}CLNyQ=[HfK@@B=5;lIA}YUf=2+PZ=#!J9w2g#KXdu9nO#_eGz;*=,A.6_-6%z;g3.Q3(Gh:]1U*VEq$M*EUkWE=).dwc*(pG!z[xiuT]^a^zD3KTu$1bG[$.zGQ(x:[suxZQ=!X$Vs](cp4,S1zcr+o_;2tFYp#dC7HlitPB7_E:{WeJk-+9s=L84-Af$1tl9P83j9/T-X65fLRY8p0Wo.3$[8a1x0Ux.(m]WZ6e.MR=4{7*gp=nHUjyUL56w6oLpcjF2;KuxUm{VZ.(Je-smMsNyR@UDY{9Mp.M+1r/rc0^KeDl9]ODS{g49OSgVGdPr}e-KV9gm-?:^@2$VMGpDV,Dy]2MyGzF6Mrmu.c)Z5ZU*P)}r/d#m*QLPbQrej/:Vn2%c)[q4%/6Nuiic0j6F/Te^n1bQy?RT_j_f}{-hePm,pAS$YVJEVx2NV0*cn3WxvfqvtCQ1e^.syS2A/X212sRZ:62NFzB-Y!A5K0tCG*S.$s;?g[pRoR*!Z70,xfwR9RNYwdq^0+Z;InvH3z2iYW{t+^-6qi^)Rkv:A{Bhs!qcH8Am9}YHm__Is/6XYc.o@:Kihb7S-I%j_1o2Urd1D8/mb]w5bgg9hV8t[}M,96h}!Ww/u+}R6PE,[}xx}Z;zNWL[1h4y{VW0y4}6mNG83paWLr)$TH3)]0*WIgHJR.eE:55?ekCL?$e:Bkw7Gjv_DfV#e(1$r8b)9BAcB_=Okks/Qq}1!ey^8ED$V-+)jF((aqfNNi;GX$i,%CWR)QKgIL{ylO4oA:qtzTB/697As8h?k%uL$WbBk8lE{KiXM^+79T$:wWZ(:,Mq*DVsvq-nt(8WwnXD*gSDONuf7ank?[d]etXCf,laM6An+K8*l7c-bm{Vq,0r(QmFQ5=7eZ46-nJ?(tAS*}hh!Y6v!6axVWY)ZQx,swViOUMdCou$;t%]XpMWLS:3yJ^chX=Kq?S22*A[/,SpONG:!v_#7R_1S8CWVt]b$yos(NDM:#N5=?Kcrzk:}e^xL+Rcu_6!SW^3_DOFxH*?^yJEl:-T!Is=;X+D5UBOYE;.PB:H!%PL2+;OYFCgs@?+8]VGUd;QaR!BFZN(MDr#rfG-jl0W{*i75a6Rez7*o=6=Oh:7rMDGb#Dk:@lGM)%I9GVg0eP;oj}S)={F#LN)*k![nB*z7T-oz3_1wGekpIs:@*qcL}R%!/Pq#x/W%B;L2s[_L8YAXJ]Zikyv/ez+Y(qk4mgJ9Q=9-D9_6WwfvvIhgRsyaIh}N8i/9uda8/kf5,+HR?tKQ$gt%r+c%w:33b[.9cODrdk5q3?IcpK,{8R0ogwzd2fBu1gAr4;u72mwBje=v?$)Ct9iM%#uinvKZ*$}tMQf+8jP=%*uSA1Gp@yddMaxvNa7gU^L2CQY!Oj@Lu2wBvXtq$@xnH$#qqU^(67oi1[^Y,cVpH/.W9]_jHn(tPOlT9c#.YGn;yNeh37}v![r8AbxU^*sY%iDBSGDO4=asWh@]f//ovkoPOzeh+2*@6CjP;.S0v9d-b,=ZIn/VK9=S)xkk3rxXU7FWBJO2h.=c5J(k5*[DZ_NrBm!mmtdbu/]qt8s{D;Kx2v9PIcKhf7V8lu2J02UX3b.^zuZ)xb+Hmhe%VnD8TIwaa^qNo%R0$Etnj,d!76SX:(rbsPg*0tyW.j1H8$WFkcu8u!@.ih[aT:2Y)o-2W^H72fI],]iCVL3AHM(F:8g=I-Pp0CA9p]fwq[xH6so7%#DX;%5!1E7k9d)P-;fw[b7*I2r7jQ_ccUonv..Bq4]^u)t@*?z/2YFRWgqLql-=c6:J*1yu2Nljph+F?/}0kw{XJe+/7,-8oo;HlcQb6Rdi-,e,]q1wIlqM}Hdg^fm492u_YDxx;,(idDpwy?+eK%nNnYHg[^:G/yj8[UzswQke(5N49zUJ,K^rx7@0$;0QLzIDzLVLK]*+yr/oO2eSFGJd_JudcMVSkO1a.uUbCp9-FFi6fXgYoj^I)*XaWrQ3.]=X?,wwee[Ao0+5UwtHsld,lgJyE}[U[mlQwk:_CioSqG$WSp+9XZJd2zuBqBDO.g0cfHln+vH$oxz4e4i+NVfi0DiW7J}8Yu;9a?Ie%MU^{xVf]qqOo944RNgsioHKBUj;.9$L0!m3Z-n:o77n-D}TT)u}wB/g.LgiV[75}-17*2N7k2-u!lDoyA)D[upWiF0d!*GF0jyVLWjGxgCa+;)0f!+Ql%9U,@xSjd=F5qiGLe#Xk0w!cYP6iV,TLvu:DEX27aNjG,6^kF{KM2*ZAbyj+Ymr9fW$IR8LnMz9Zrvlo=/[w((58KG*[aHwq?}@d5Fx[vLp4}kiU2^KtBDi)q1=+XWP7FNtxj5[5w8QcyV834fzP6XDrgXyWN.5J[fDa[Y5!d^2OO$^#d2?*40LRe*P*1CeL,l2@CM%pi2{e07ot)uiH@SkheVR8L)+mHa$[1wnY(@yhI.^T)</File>
  </Files>
  <CheatEntries>
    <CheatEntry>
      <ID>29</ID>
      <Description>"Compact mode"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

if not toggleCompactView then
    function toggleCompactView(sender, forceEnable)
        local isCompactMode = not (compactViewMenuItem.Caption == 'Compact View Mode')
        if forceEnable ~= nil then
            isCompactMode = not forceEnable
        end

    synchronize(function()
        compactViewMenuItem.Caption = isCompactMode and 'Compact View Mode' or 'Full View Mode'
        getMainForm().Splitter1.Visible = isCompactMode
        getMainForm().Panel4.Visible    = isCompactMode
        getMainForm().Panel5.Visible    = isCompactMode
    end)
end
end

if not createCompactViewMenu then
    function createCompactViewMenu()
        if isCompactMenuCreated then return end

    synchronize(function()
        local mainMenu = getMainForm().Menu.Items
        compactViewMenuItem = createMenuItem(mainMenu)
        mainMenu.add(compactViewMenuItem)
        compactViewMenuItem.Caption = 'Compact View Mode'
        compactViewMenuItem.OnClick = toggleCompactView
    end)

    isCompactMenuCreated = true
end
end

createCompactViewMenu()
toggleCompactView(nil, true)

[DISABLE]
{$lua}
if toggleCompactView then
    toggleCompactView(nil, false)
end

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>35</ID>
      <Description>"init."</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{$asm}
alloc(newmem, 100, $process)
label(TARGET_QUALITY)
newmem:
  TARGET_QUALITY:
  dd (float)120

registersymbol(TARGET_QUALITY)
{$lua}
if syntaxcheck then return end
if memrec then print(memrec.Description) end
if (getAddressSafe('A13V_x64_Release.exe') == nil)
then
  print("Please select process A13V_x64_Release.exe first")
  print("Please close Cheat Engine and load this table again")
  print("最初に「A13V_x64_Release.exe」プロセスを選択してください。")
  print("Cheat Engineを閉じて、再びこのテーブルをロードしてください。")
else
  g_containerBaseAddress = getAddressSafe('A13V_x64_Release.exe')+BaseContainerOffset
  g_equipsBaseAddress = getAddressSafe('A13V_x64_Release.exe')+EquipsOffset
end
_G.processID = getOpenedProcessID()
closeLuaEngine()
[DISABLE]
{$lua}
if syntaxcheck then return end
if memrec then print(memrec.Description) end
closeLuaEngine()
{$asm}
unregistersymbol(TARGET_QUALITY)
dealloc(newmem, 100)



</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>84</ID>
          <Description>"数値 / Values"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>74</ID>
              <Description>"コール / Cole"</Description>
              <Color>FF8080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>A13V_x64_Release.exe+109C594</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>73</ID>
              <Description>"残りの開拓ポイント / Dev. Points"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>A13V_x64_Release.exe+1085510</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>72</ID>
              <Description>"人口 / Population"</Description>
              <Color>FF8080</Color>
              <VariableType>Float</VariableType>
              <Address>A13V_x64_Release.exe+108551C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>71</ID>
              <Description>"人気 / Popularity"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>Float</VariableType>
              <Address>A13V_x64_Release.exe+1085524</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>77</ID>
              <Description>"錬金のLV / Alchemy LV"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>A13V_x64_Release.exe+1056FB0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>78</ID>
              <Description>"錬金の経験値 / Alchemy EXP"</Description>
              <Color>FF8080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>A13V_x64_Release.exe+1056FB4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>86</ID>
              <Description>"+経験値"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>A13V_x64_Release.exe+1056FB8</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>34</ID>
              <Description>"日付 / Date data+"</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
if _meruru_customInt == nil then

registerCustomTypeAutoAssembler([[
alloc(TypeName,256)
alloc(ByteSize,8)
alloc(ConvertRoutine,1024)
alloc(ConvertBackRoutine,1024)
alloc(UsesFloat,1)

TypeName:
db 'M4StartInt',0

ByteSize:
dd 4

UsesFloat:
db 0

ConvertRoutine:
//at this point ecx contains the address where the bytes are stored

xor rax,rax
push rdx

mov eax, dword ptr [rcx]
sub eax, #89

pop rdx
ret

ConvertBackRoutine:
//at this point edx contains the address to write the value to
//and ecx contains the value

push rax
xor rax, rax
push rdx
mov eax, ecx
add eax, #89
mov dword ptr [rdx], eax
pop rdx
pop rax
ret

]])

_meruru_customInt = true
end

if getOpenedProcessID() ~= _G.processID then
  openProcess(_G.processID)
end

{$asm}

[DISABLE]
{$lua}
--_meruru_customInt = nil
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>33</ID>
                  <Description>"Day (4/1 Year 1 = 1)"</Description>
                  <DropDownList DescriptionOnly="1">-1:N/A
</DropDownList>
                  <ShowAsSigned>1</ShowAsSigned>
                  <Color>FF8080</Color>
                  <VariableType>Custom</VariableType>
                  <CustomType>M4StartInt</CustomType>
                  <Address>A13V_x64_Release.exe+109E4D0</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"Alchemy: MPが減少しない / 原野: MP/HP/LPが減少しない"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : A13V_x64_Release.exe
  Version: 
  Date   : 2024-01-01
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_INF_MAP_HPMPLP,A13V_x64_Release.exe,44 01 44 81 0C) // should be unique
alloc(newmem,$1000,INJECT_INF_MAP_HPMPLP)

label(code)
label(return)

newmem:
  cmp r8d, 0
  jge code

  push r15
  mov r15d, [rcx+rax*4+18]
  mov [rcx+rax*4+0C], r15d
  pop r15
  jmp code1

code:
  add [rcx+rax*4+0C],r8d

code1:
  jmp return

INJECT_INF_MAP_HPMPLP:
  jmp newmem
return:
registersymbol(INJECT_INF_MAP_HPMPLP)

[DISABLE]

INJECT_INF_MAP_HPMPLP:
  db 44 01 44 81 0C

unregistersymbol(INJECT_INF_MAP_HPMPLP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: A13V_x64_Release.exe+1AA908

A13V_x64_Release.exe+1AA8F9: CC              - int 3 
A13V_x64_Release.exe+1AA8FA: CC              - int 3 
A13V_x64_Release.exe+1AA8FB: CC              - int 3 
A13V_x64_Release.exe+1AA8FC: CC              - int 3 
A13V_x64_Release.exe+1AA8FD: CC              - int 3 
A13V_x64_Release.exe+1AA8FE: CC              - int 3 
A13V_x64_Release.exe+1AA8FF: CC              - int 3 
A13V_x64_Release.exe+1AA900: 83 FA 15        - cmp edx,15
A13V_x64_Release.exe+1AA903: 77 08           - ja A13V_x64_Release.exe+1AA90D
A13V_x64_Release.exe+1AA905: 48 63 C2        - movsxd  rax,edx
// ---------- INJECTING HERE ----------
A13V_x64_Release.exe+1AA908: 44 01 44 81 0C  - add [rcx+rax*4+0C],r8d
// ---------- DONE INJECTING  ----------
A13V_x64_Release.exe+1AA90D: C3              - ret 
A13V_x64_Release.exe+1AA90E: CC              - int 3 
A13V_x64_Release.exe+1AA90F: CC              - int 3 
A13V_x64_Release.exe+1AA910: 8D 42 F6        - lea eax,[rdx-0A]
A13V_x64_Release.exe+1AA913: 4C 8B D1        - mov r10,rcx
A13V_x64_Release.exe+1AA916: 83 F8 05        - cmp eax,05
A13V_x64_Release.exe+1AA919: 77 24           - ja A13V_x64_Release.exe+1AA93F
A13V_x64_Release.exe+1AA91B: 83 FA 15        - cmp edx,15
A13V_x64_Release.exe+1AA91E: 77 0A           - ja A13V_x64_Release.exe+1AA92A
A13V_x64_Release.exe+1AA920: 48 63 C2        - movsxd  rax,edx
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>85</ID>
              <Description>"Alchemy: MP no decrease; HP/MP/LP no decrease in field"</Description>
              <Color>8000FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>87</ID>
          <Description>"錬金術のEXP倍率 / Alchemy XP multiplier"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : A13V_x64_Release.exe
  Version: 
  Date   : 2024-10-22
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_SET_MIN_ALC_XP,A13V_x64_Release.exe,3B 81 38 01 00 00) // should be unique
alloc(newmem,$1000,INJECT_SET_MIN_ALC_XP)

label(code)
label(return)
label(i_min_alc_exp)
label(vf_alc_xp_multi)

newmem:
  cmp dword ptr [rcx+00000138], 0
  je code
  test eax, eax
  jnz code


  push r15

  vmovss xmm14, [vf_alc_xp_multi]
  vcvtsi2ss xmm15, xmm15, [rcx+00000138]
  vmulss xmm13, xmm14, xmm15
  vcvtss2si r15d, xmm13
  mov [rcx+00000138], r15d

  mov r15d, [i_min_alc_exp]
  cmp [rcx+00000138], r15d
  jae @F
  mov [rcx+00000138], r15d
@@:
  pop r15

code:
  cmp eax,[rcx+00000138]
  jmp return
align 10 cc
  i_min_alc_exp:
  dd 32
  vf_alc_xp_multi:
  dd (float)1.3333333

INJECT_SET_MIN_ALC_XP:
  jmp newmem
  nop
return:
registersymbol(INJECT_SET_MIN_ALC_XP)
registersymbol(i_min_alc_exp)
registersymbol(vf_alc_xp_multi)

[DISABLE]

INJECT_SET_MIN_ALC_XP:
  db 3B 81 38 01 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: A13V_x64_Release.exe+26E021

A13V_x64_Release.exe+26DFFD: CC                    - int 3 
A13V_x64_Release.exe+26DFFE: CC                    - int 3 
A13V_x64_Release.exe+26DFFF: CC                    - int 3 
A13V_x64_Release.exe+26E000: 48 83 EC 28           - sub rsp,28
A13V_x64_Release.exe+26E004: 32 D2                 - xor dl,dl
A13V_x64_Release.exe+26E006: 83 B9 30 01 00 00 32  - cmp dword ptr [rcx+00000130],32
A13V_x64_Release.exe+26E00D: 75 0C                 - jne A13V_x64_Release.exe+26E01B
A13V_x64_Release.exe+26E00F: 8B 81 38 01 00 00     - mov eax,[rcx+00000138]
A13V_x64_Release.exe+26E015: 89 81 48 01 00 00     - mov [rcx+00000148],eax
A13V_x64_Release.exe+26E01B: 8B 81 48 01 00 00     - mov eax,[rcx+00000148]
// ---------- INJECTING HERE ----------
A13V_x64_Release.exe+26E021: 3B 81 38 01 00 00     - cmp eax,[rcx+00000138]
// ---------- DONE INJECTING  ----------
A13V_x64_Release.exe+26E027: 7D 22                 - jnl A13V_x64_Release.exe+26E04B
A13V_x64_Release.exe+26E029: FF C0                 - inc eax
A13V_x64_Release.exe+26E02B: 89 81 48 01 00 00     - mov [rcx+00000148],eax
A13V_x64_Release.exe+26E031: 8B 81 34 01 00 00     - mov eax,[rcx+00000134]
A13V_x64_Release.exe+26E037: 85 C0                 - test eax,eax
A13V_x64_Release.exe+26E039: 7E 0E                 - jle A13V_x64_Release.exe+26E049
A13V_x64_Release.exe+26E03B: FF C8                 - dec eax
A13V_x64_Release.exe+26E03D: 89 81 34 01 00 00     - mov [rcx+00000134],eax
A13V_x64_Release.exe+26E043: FF 05 6B 8F DE 00     - inc [A13V_x64_Release.exe+1056FB4]
A13V_x64_Release.exe+26E049: B2 01                 - mov dl,01
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>88</ID>
              <Description>"min XP"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>i_min_alc_exp</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>90</ID>
              <Description>"XP multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>Float</VariableType>
              <Address>vf_alc_xp_multi</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>57</ID>
          <Description>"戦闘：ダメージコントロール / Battle: Damage control"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : A13V_x64_Release.exe
  Version: 
  Date   : 2024-01-01
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_BATTLE_HP_CTRL,A13V_x64_Release.exe,29 87 94 00 00 00) // should be unique
alloc(newmem,$1000,INJECT_BATTLE_HP_CTRL)

label(code)
label(return)
label(vf_damage_multi)
label(vf_damage_multi_2_player)
label(is_fill_mp)

newmem:
  cmp eax, 0
  jle code

  cmp dword ptr [rdi+000000A8], 0 // max LP
  je to_enemy
  cmp dword ptr [is_fill_mp], 1
  jne do_player_next

  push r15
  mov r15d, [rdi+000000A0]
  mov [rdi+0000009C], r15d
  mov r15d, [rdi+000000A8]
  mov [rdi+000000A4], r15d
  pop r15

do_player_next: // damage to player
  vcvtsi2ss xmm15, xmm15, eax
  vmovss xmm14, [vf_damage_multi_2_player]
  vmulss xmm15, xmm14, xmm15
  vcvtss2si eax, xmm15
  jmp code

to_enemy:
  vcvtsi2ss xmm15, xmm15, eax
  vmovss xmm14, [vf_damage_multi]
  vmulss xmm15, xmm14, xmm15
  vcvtss2si eax, xmm15
  jmp code


code:
  sub [rdi+00000094],eax
  jmp return
align 10 cc
  vf_damage_multi:
  dd (float)1.2
  vf_damage_multi_2_player:
  dd (float)0.75
  is_fill_mp:
  dd 1

INJECT_BATTLE_HP_CTRL:
  jmp newmem
  nop
return:
registersymbol(INJECT_BATTLE_HP_CTRL)
registersymbol(vf_damage_multi)
registersymbol(vf_damage_multi_2_player)
registersymbol(is_fill_mp)
[DISABLE]

INJECT_BATTLE_HP_CTRL:
  db 29 87 94 00 00 00

unregistersymbol(INJECT_BATTLE_HP_CTRL)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: A13V_x64_Release.exe+1245DA

A13V_x64_Release.exe+1245B0: 4C 8B CF                 - mov r9,rdi
A13V_x64_Release.exe+1245B3: 41 0F 48 C6              - cmovs eax,r14d
A13V_x64_Release.exe+1245B7: C7 44 24 20 FF FF FF FF  - mov [rsp+20],FFFFFFFF
A13V_x64_Release.exe+1245BF: 89 06                    - mov [rsi],eax
A13V_x64_Release.exe+1245C1: 8B D3                    - mov edx,ebx
A13V_x64_Release.exe+1245C3: 48 8B 4F 10              - mov rcx,[rdi+10]
A13V_x64_Release.exe+1245C7: 48 8B 89 18 06 00 00     - mov rcx,[rcx+00000618]
A13V_x64_Release.exe+1245CE: E8 6D 73 00 00           - call A13V_x64_Release.exe+12B940
A13V_x64_Release.exe+1245D3: 48 8B 5C 24 40           - mov rbx,[rsp+40]
A13V_x64_Release.exe+1245D8: 8B 06                    - mov eax,[rsi]
// ---------- INJECTING HERE ----------
A13V_x64_Release.exe+1245DA: 29 87 94 00 00 00        - sub [rdi+00000094],eax
// ---------- DONE INJECTING  ----------
A13V_x64_Release.exe+1245E0: E8 DF 60 41 00           - call A13V_x64_Release.exe+53A6C4
A13V_x64_Release.exe+1245E5: C1 F8 08                 - sar eax,08
A13V_x64_Release.exe+1245E8: 25 03 00 00 80           - and eax,80000003
A13V_x64_Release.exe+1245ED: 7D 07                    - jnl A13V_x64_Release.exe+1245F6
A13V_x64_Release.exe+1245EF: FF C8                    - dec eax
A13V_x64_Release.exe+1245F1: 83 C8 FC                 - or eax,-04
A13V_x64_Release.exe+1245F4: FF C0                    - inc eax
A13V_x64_Release.exe+1245F6: 85 C0                    - test eax,eax
A13V_x64_Release.exe+1245F8: 74 22                    - je A13V_x64_Release.exe+12461C
A13V_x64_Release.exe+1245FA: 83 E8 01                 - sub eax,01
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>58</ID>
              <Description>"プレイヤーへのダメージ乗数 / Damage multiplier to player"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>Float</VariableType>
              <Address>vf_damage_multi_2_player</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>59</ID>
              <Description>"敵へのダメージ乗数 / Damage multiplier to enemy"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>Float</VariableType>
              <Address>vf_damage_multi</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>60</ID>
              <Description>"ヒット後にMPを回復しますか？Fill MP after got hit?"</Description>
              <DropDownList DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>is_fill_mp</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>61</ID>
          <Description>"戦闘中のMPが減少しません / Battle: inf. MP"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : A13V_x64_Release.exe
  Version: 
  Date   : 2024-01-01
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_BATTLE_FILL_MP,A13V_x64_Release.exe,29 91 9C 00 00 00) // should be unique
alloc(newmem,$1000,INJECT_BATTLE_FILL_MP)

label(code)
label(return)

newmem:
  cmp edx, 0
  jle code
  cmp dword ptr [rcx+000000A8], 0
  je code

  mov edx, [rcx+000000A0]
  mov [rcx+0000009C], edx
  xor edx, edx

code:
  sub [rcx+0000009C],edx
  jmp return

INJECT_BATTLE_FILL_MP:
  jmp newmem
  nop
return:
registersymbol(INJECT_BATTLE_FILL_MP)

[DISABLE]

INJECT_BATTLE_FILL_MP:
  db 29 91 9C 00 00 00

unregistersymbol(INJECT_BATTLE_FILL_MP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: A13V_x64_Release.exe+12475A

A13V_x64_Release.exe+124737: 89 83 A4 00 00 00              - mov [rbx+000000A4],eax
A13V_x64_Release.exe+12473D: 48 8B CB                       - mov rcx,rbx
A13V_x64_Release.exe+124740: E8 DB EB FF FF                 - call A13V_x64_Release.exe+123320
A13V_x64_Release.exe+124745: 48 8B 5C 24 30                 - mov rbx,[rsp+30]
A13V_x64_Release.exe+12474A: 48 83 C4 20                    - add rsp,20
A13V_x64_Release.exe+12474E: 5F                             - pop rdi
A13V_x64_Release.exe+12474F: C3                             - ret 
A13V_x64_Release.exe+124750: 48 89 5C 24 08                 - mov [rsp+08],rbx
A13V_x64_Release.exe+124755: 57                             - push rdi
A13V_x64_Release.exe+124756: 48 83 EC 30                    - sub rsp,30
// ---------- INJECTING HERE ----------
A13V_x64_Release.exe+12475A: 29 91 9C 00 00 00              - sub [rcx+0000009C],edx
// ---------- DONE INJECTING  ----------
A13V_x64_Release.exe+124760: 8B FA                          - mov edi,edx
A13V_x64_Release.exe+124762: 83 B9 9C 00 00 00 00           - cmp dword ptr [rcx+0000009C],00
A13V_x64_Release.exe+124769: 48 8B D9                       - mov rbx,rcx
A13V_x64_Release.exe+12476C: 7D 0A                          - jnl A13V_x64_Release.exe+124778
A13V_x64_Release.exe+12476E: C7 81 9C 00 00 00 00 00 00 00  - mov [rcx+0000009C],00000000
A13V_x64_Release.exe+124778: 85 FF                          - test edi,edi
A13V_x64_Release.exe+12477A: 74 73                          - je A13V_x64_Release.exe+1247EF
A13V_x64_Release.exe+12477C: 48 8B 01                       - mov rax,[rcx]
A13V_x64_Release.exe+12477F: BA AC 00 00 00                 - mov edx,000000AC
A13V_x64_Release.exe+124784: FF 50 48                       - call qword ptr [rax+48]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>64</ID>
          <Description>"戦闘中のLPが減少しません / Battle: inf. LP"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : A13V_x64_Release.exe
  Version: 
  Date   : 2024-01-01
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_BATTLE_LP_NO_DEC,A13V_x64_Release.exe,83 87 A4 00 00 00 FE) // should be unique
alloc(newmem,$1000,INJECT_BATTLE_LP_NO_DEC)

label(code)
label(return)

newmem:

code:
  //add dword ptr [rdi+000000A4],-02
  jmp return

INJECT_BATTLE_LP_NO_DEC:
  jmp newmem
  nop 2
return:
registersymbol(INJECT_BATTLE_LP_NO_DEC)

[DISABLE]

INJECT_BATTLE_LP_NO_DEC:
  db 83 87 A4 00 00 00 FE

unregistersymbol(INJECT_BATTLE_LP_NO_DEC)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: A13V_x64_Release.exe+1280FF

A13V_x64_Release.exe+1280E5: 48 8B CF                       - mov rcx,rdi
A13V_x64_Release.exe+1280E8: FF 50 10                       - call qword ptr [rax+10]
A13V_x64_Release.exe+1280EB: 85 DB                          - test ebx,ebx
A13V_x64_Release.exe+1280ED: 75 0C                          - jne A13V_x64_Release.exe+1280FB
A13V_x64_Release.exe+1280EF: 85 C0                          - test eax,eax
A13V_x64_Release.exe+1280F1: 75 2E                          - jne A13V_x64_Release.exe+128121
A13V_x64_Release.exe+1280F3: FF 8F A4 00 00 00              - dec [rdi+000000A4]
A13V_x64_Release.exe+1280F9: EB 0B                          - jmp A13V_x64_Release.exe+128106
A13V_x64_Release.exe+1280FB: 85 C0                          - test eax,eax
A13V_x64_Release.exe+1280FD: 75 22                          - jne A13V_x64_Release.exe+128121
// ---------- INJECTING HERE ----------
A13V_x64_Release.exe+1280FF: 83 87 A4 00 00 00 FE           - add dword ptr [rdi+000000A4],-02
// ---------- DONE INJECTING  ----------
A13V_x64_Release.exe+128106: 83 BF A4 00 00 00 00           - cmp dword ptr [rdi+000000A4],00
A13V_x64_Release.exe+12810D: 7D 0A                          - jnl A13V_x64_Release.exe+128119
A13V_x64_Release.exe+12810F: C7 87 A4 00 00 00 00 00 00 00  - mov [rdi+000000A4],00000000
A13V_x64_Release.exe+128119: 48 8B CF                       - mov rcx,rdi
A13V_x64_Release.exe+12811C: E8 FF B1 FF FF                 - call A13V_x64_Release.exe+123320
A13V_x64_Release.exe+128121: 48 8B 5C 24 30                 - mov rbx,[rsp+30]
A13V_x64_Release.exe+128126: 48 83 C4 20                    - add rsp,20
A13V_x64_Release.exe+12812A: 5F                             - pop rdi
A13V_x64_Release.exe+12812B: C3                             - ret 
A13V_x64_Release.exe+12812C: CC                             - int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>67</ID>
          <Description>"戦闘終了後の獲得EXP倍率 / Battle: XP multiplier"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : A13V_x64_Release.exe
  Version: 
  Date   : 2024-01-01
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_BATTLE_XP_MULTI,A13V_x64_Release.exe,01 51 08 8B 41 08) // should be unique
alloc(newmem,$1000,INJECT_BATTLE_XP_MULTI)

label(code)
label(return)
label(vf_b_xp_multi)
newmem:
  vmovss xmm14, [vf_b_xp_multi]
  vcvtsi2ss xmm15, xmm15, edx
  vmulss xmm15, xmm14, xmm15
  vcvtss2si edx, xmm15

code:
  add [rcx+08],edx
  mov eax,[rcx+08]
  jmp return
align 10 cc
  vf_b_xp_multi:
  dd (float)1.2

INJECT_BATTLE_XP_MULTI:
  jmp newmem
  nop
return:
registersymbol(INJECT_BATTLE_XP_MULTI)
registersymbol(vf_b_xp_multi)

[DISABLE]

INJECT_BATTLE_XP_MULTI:
  db 01 51 08 8B 41 08

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: A13V_x64_Release.exe+1AA870

A13V_x64_Release.exe+1AA850: 44 8B 81 A8 01 00 00  - mov r8d,[rcx+000001A8]
A13V_x64_Release.exe+1AA857: B8 FF FF FF 7F        - mov eax,7FFFFFFF
A13V_x64_Release.exe+1AA85C: 2B C2                 - sub eax,edx
A13V_x64_Release.exe+1AA85E: 44 3B C0              - cmp r8d,eax
A13V_x64_Release.exe+1AA861: 7F 0A                 - jg A13V_x64_Release.exe+1AA86D
A13V_x64_Release.exe+1AA863: 41 8D 04 10           - lea eax,[r8+rdx]
A13V_x64_Release.exe+1AA867: 89 81 A8 01 00 00     - mov [rcx+000001A8],eax
A13V_x64_Release.exe+1AA86D: C3                    - ret 
A13V_x64_Release.exe+1AA86E: CC                    - int 3 
A13V_x64_Release.exe+1AA86F: CC                    - int 3 
// ---------- INJECTING HERE ----------
A13V_x64_Release.exe+1AA870: 01 51 08              - add [rcx+08],edx
// ---------- DONE INJECTING  ----------
A13V_x64_Release.exe+1AA873: 8B 41 08              - mov eax,[rcx+08]
A13V_x64_Release.exe+1AA876: 3D 3F 42 0F 00        - cmp eax,000F423F
A13V_x64_Release.exe+1AA87B: 7E 08                 - jle A13V_x64_Release.exe+1AA885
A13V_x64_Release.exe+1AA87D: C7 41 08 3F 42 0F 00  - mov [rcx+08],000F423F
A13V_x64_Release.exe+1AA884: C3                    - ret 
A13V_x64_Release.exe+1AA885: 85 C0                 - test eax,eax
A13V_x64_Release.exe+1AA887: 79 07                 - jns A13V_x64_Release.exe+1AA890
A13V_x64_Release.exe+1AA889: C7 41 08 00 00 00 00  - mov [rcx+08],00000000
A13V_x64_Release.exe+1AA890: C3                    - ret 
A13V_x64_Release.exe+1AA891: CC                    - int 3 
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>68</ID>
              <Description>"multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>Float</VariableType>
              <Address>vf_b_xp_multi</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>62</ID>
          <Description>"戦闘：アイテム使用回数減少なし / Battle: unlimited item usage"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : A13V_x64_Release.exe
  Version: 
  Date   : 2024-01-01
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_BATTLE_INF_ITEM_USE,A13V_x64_Release.exe,FF 4B 2C 39 73 2C) // should be unique
alloc(newmem,$1000,INJECT_BATTLE_INF_ITEM_USE)

label(code)
label(return)

newmem:
  inc [rbx+2C]
code:
  dec [rbx+2C]
  cmp [rbx+2C],esi
  jmp return

INJECT_BATTLE_INF_ITEM_USE:
  jmp newmem
  nop
return:
registersymbol(INJECT_BATTLE_INF_ITEM_USE)

[DISABLE]

INJECT_BATTLE_INF_ITEM_USE:
  db FF 4B 2C 39 73 2C

unregistersymbol(INJECT_BATTLE_INF_ITEM_USE)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: A13V_x64_Release.exe+1CED72

A13V_x64_Release.exe+1CED4E: 8B 4B 04              - mov ecx,[rbx+04]
A13V_x64_Release.exe+1CED51: E8 FA DE FE FF        - call A13V_x64_Release.exe+1BCC50
A13V_x64_Release.exe+1CED56: 85 C0                 - test eax,eax
A13V_x64_Release.exe+1CED58: 78 24                 - js A13V_x64_Release.exe+1CED7E
A13V_x64_Release.exe+1CED5A: 48 98                 - cdqe 
A13V_x64_Release.exe+1CED5C: 48 69 F8 90 01 00 00  - imul rdi,rax,00000190
A13V_x64_Release.exe+1CED63: 48 8D 05 A6 3E DA 00  - lea rax,[A13V_x64_Release.exe+F72C10]
A13V_x64_Release.exe+1CED6A: 48 03 F8              - add rdi,rax
A13V_x64_Release.exe+1CED6D: 39 77 18              - cmp [rdi+18],esi
A13V_x64_Release.exe+1CED70: 7E 3D                 - jle A13V_x64_Release.exe+1CEDAF
// ---------- INJECTING HERE ----------
A13V_x64_Release.exe+1CED72: FF 4B 2C              - dec [rbx+2C]
// ---------- DONE INJECTING  ----------
A13V_x64_Release.exe+1CED75: 39 73 2C              - cmp [rbx+2C],esi
A13V_x64_Release.exe+1CED78: 0F 8F 9A 00 00 00     - jg A13V_x64_Release.exe+1CEE18
A13V_x64_Release.exe+1CED7E: 40 84 ED              - test bpl,bpl
A13V_x64_Release.exe+1CED81: 74 28                 - je A13V_x64_Release.exe+1CEDAB
A13V_x64_Release.exe+1CED83: 44 8B 43 04           - mov r8d,[rbx+04]
A13V_x64_Release.exe+1CED87: 48 8D 0D 22 AC F0 00  - lea rcx,[A13V_x64_Release.exe+10D99B0]
A13V_x64_Release.exe+1CED8E: 8B 13                 - mov edx,[rbx]
A13V_x64_Release.exe+1CED90: E8 CB C3 FE FF        - call A13V_x64_Release.exe+1BB160
A13V_x64_Release.exe+1CED95: 84 C0                 - test al,al
A13V_x64_Release.exe+1CED97: 75 12                 - jne A13V_x64_Release.exe+1CEDAB
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>80</ID>
          <Description>"交友值経験値の乗数 / Friendship XP multiplier"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : A13V_x64_Release.exe
  Version: 
  Date   : 2024-01-01
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_FRIENDSHIP_MULTI,A13V_x64_Release.exe,F3 0F 58 89 A4 01 00 00) // should be unique
alloc(newmem,$1000,INJECT_FRIENDSHIP_MULTI)

label(code)
label(return)
label(vf_fri_multi)
newmem:
  vmovss xmm14, [vf_fri_multi]
  vmulss xmm1, xmm1, xmm14

code:
  addss xmm1,[rcx+000001A4]
  jmp return
align 10 cc
  vf_fri_multi:
  dd (float)3.33333333

INJECT_FRIENDSHIP_MULTI:
  jmp newmem
  nop 3
return:
registersymbol(INJECT_FRIENDSHIP_MULTI)
registersymbol(vf_fri_multi)

[DISABLE]

INJECT_FRIENDSHIP_MULTI:
  db F3 0F 58 89 A4 01 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: A13V_x64_Release.exe+1AA8A0

A13V_x64_Release.exe+1AA896: CC                       - int 3 
A13V_x64_Release.exe+1AA897: CC                       - int 3 
A13V_x64_Release.exe+1AA898: CC                       - int 3 
A13V_x64_Release.exe+1AA899: CC                       - int 3 
A13V_x64_Release.exe+1AA89A: CC                       - int 3 
A13V_x64_Release.exe+1AA89B: CC                       - int 3 
A13V_x64_Release.exe+1AA89C: CC                       - int 3 
A13V_x64_Release.exe+1AA89D: CC                       - int 3 
A13V_x64_Release.exe+1AA89E: CC                       - int 3 
A13V_x64_Release.exe+1AA89F: CC                       - int 3 
// ---------- INJECTING HERE ----------
A13V_x64_Release.exe+1AA8A0: F3 0F 58 89 A4 01 00 00  - addss xmm1,[rcx+000001A4]
// ---------- DONE INJECTING  ----------
A13V_x64_Release.exe+1AA8A8: F3 0F 10 15 F0 E5 47 00  - movss xmm2,[A13V_x64_Release.exe+628EA0]
A13V_x64_Release.exe+1AA8B0: 0F 57 C0                 - xorps xmm0,xmm0
A13V_x64_Release.exe+1AA8B3: F3 0F 5F C1              - maxss xmm0,xmm1
A13V_x64_Release.exe+1AA8B7: F3 0F 11 89 A4 01 00 00  - movss [rcx+000001A4],xmm1
A13V_x64_Release.exe+1AA8BF: 0F 2F C2                 - comiss xmm0,xmm2
A13V_x64_Release.exe+1AA8C2: 76 09                    - jna A13V_x64_Release.exe+1AA8CD
A13V_x64_Release.exe+1AA8C4: F3 0F 11 91 A4 01 00 00  - movss [rcx+000001A4],xmm2
A13V_x64_Release.exe+1AA8CC: C3                       - ret 
A13V_x64_Release.exe+1AA8CD: F3 0F 11 81 A4 01 00 00  - movss [rcx+000001A4],xmm0
A13V_x64_Release.exe+1AA8D5: C3                       - ret 
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>81</ID>
              <Description>"multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>Float</VariableType>
              <Address>vf_fri_multi</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>69</ID>
          <Description>"バトル後にHP/MP/LPを回復 / Recover HP/MP/LP after battle"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : A13V_x64_Release.exe
  Version: 
  Date   : 2024-01-01
  Author : bbfox@https://opencheattablesc.om
}

[ENABLE]

aobscanmodule(INJECT_FILL_HPMPLP,A13V_x64_Release.exe,44 89 44 81 0C C3) // should be unique
alloc(newmem,$1000,INJECT_FILL_HPMPLP)

label(code)
label(return)

newmem:
  mov r8d, [rcx+rax*4+4C]

code:
  mov [rcx+rax*4+0C],r8d
  jmp return

INJECT_FILL_HPMPLP:
  jmp newmem
return:
registersymbol(INJECT_FILL_HPMPLP)

[DISABLE]

INJECT_FILL_HPMPLP:
  db 44 89 44 81 0C

unregistersymbol(INJECT_FILL_HPMPLP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: A13V_x64_Release.exe+1AC228

A13V_x64_Release.exe+1AC219: 5F              - pop rdi
A13V_x64_Release.exe+1AC21A: C3              - ret 
A13V_x64_Release.exe+1AC21B: CC              - int 3 
A13V_x64_Release.exe+1AC21C: CC              - int 3 
A13V_x64_Release.exe+1AC21D: CC              - int 3 
A13V_x64_Release.exe+1AC21E: CC              - int 3 
A13V_x64_Release.exe+1AC21F: CC              - int 3 
A13V_x64_Release.exe+1AC220: 83 FA 15        - cmp edx,15
A13V_x64_Release.exe+1AC223: 77 08           - ja A13V_x64_Release.exe+1AC22D
A13V_x64_Release.exe+1AC225: 48 63 C2        - movsxd  rax,edx
// ---------- INJECTING HERE ----------
A13V_x64_Release.exe+1AC228: 44 89 44 81 0C  - mov [rcx+rax*4+0C],r8d
// ---------- DONE INJECTING  ----------
A13V_x64_Release.exe+1AC22D: C3              - ret 
A13V_x64_Release.exe+1AC22E: CC              - int 3 
A13V_x64_Release.exe+1AC22F: CC              - int 3 
A13V_x64_Release.exe+1AC230: 48 89 5C 24 08  - mov [rsp+08],rbx
A13V_x64_Release.exe+1AC235: 48 89 74 24 10  - mov [rsp+10],rsi
A13V_x64_Release.exe+1AC23A: 57              - push rdi
A13V_x64_Release.exe+1AC23B: 48 83 EC 20     - sub rsp,20
A13V_x64_Release.exe+1AC23F: 48 8B F2        - mov rsi,rdx
A13V_x64_Release.exe+1AC242: 48 8B D9        - mov rbx,rcx
A13V_x64_Release.exe+1AC245: 8B 49 08        - mov ecx,[rcx+08]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"コンテナのアイテム品質を設定する / Set container items quality to.."</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>41</ID>
              <Description>"值 / value"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>C08000</Color>
              <VariableType>Float</VariableType>
              <Address>TARGET_QUALITY</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>39</ID>
              <Description>"Go!"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
{$lua}
--NO_ACTIVATE
--itemBaseAddr=readPointer("container_base_addr") --higlighted item base addr
if syntaxcheck then return end
if memrec then print(memrec.Description) end
closeLuaEngine()
print("Start")

--Main script start
--BaseContainerOffset=0x10C22E0
--ItemRecordSize=0x30
--MaxContainerCount=2000
--  MaxBasketCount=100
--
--getLuaEngine().MenuItem5.doClick()
tQ=readFloat("TARGET_QUALITY")

local containerBaseAddress = 0
local currentQualityAddress = 0



if (getAddressSafe(process) == nil)
then
  print("Please select Meruru DX game process first")
else
  --containerBaseAddress = getAddressSafe(process)+BaseContainerOffset
  containerBaseAddress = getAddressSafe("A13V_x64_Release.exe")+BaseContainerOffset
  
  currentQualityAddress = containerBaseAddress
  local isOkay=true
  if (isOkay)
  then
    for i = 1, MaxContainerCount, 1
    do
      currentID = readSmallInteger(currentQualityAddress)

      if ( currentID &lt; 0xFFFFFFFF)
      then
        if (currentID % 25 == 0)
        then
	      print("NO: " .. i .. ", ID " .. currentID .. ", (addr: " .. string.format("%08X", currentQualityAddress) .. ") set quality to " .. tQ )
        end
        writeFloat(currentQualityAddress + 0x8, tQ)
      else
        break
      end
      currentQualityAddress = currentQualityAddress + ItemRecordSize
    end
    print("Done.")
  end
  closeLuaEngine()
end
{$asm}
[DISABLE]

</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>0</ID>
          <Description>"アイテムエディター / Item Editor"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : A13V_x64_Release.exe
  Version: 
  Date   : 2023-12-31
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_ITEM_EDITOR,A13V_x64_Release.exe,8B 41 04 85 C0 78) // should be unique
alloc(newmem,$1000,INJECT_ITEM_EDITOR)

label(code)
label(return)
label(i_item_editor_base_addr)

newmem:
  mov [i_item_editor_base_addr], rcx

code:
  mov eax,[rcx+04]
  test eax,eax
  jmp return
align 10 cc
  i_item_editor_base_addr:
  dq 0


INJECT_ITEM_EDITOR:
  jmp newmem
return:
registersymbol(INJECT_ITEM_EDITOR)
registersymbol(i_item_editor_base_addr)

[DISABLE]

INJECT_ITEM_EDITOR:
  db 8B 41 04 85 C0

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: A13V_x64_Release.exe+1CDE90

A13V_x64_Release.exe+1CDE86: CC                 - int 3 
A13V_x64_Release.exe+1CDE87: CC                 - int 3 
A13V_x64_Release.exe+1CDE88: CC                 - int 3 
A13V_x64_Release.exe+1CDE89: CC                 - int 3 
A13V_x64_Release.exe+1CDE8A: CC                 - int 3 
A13V_x64_Release.exe+1CDE8B: CC                 - int 3 
A13V_x64_Release.exe+1CDE8C: CC                 - int 3 
A13V_x64_Release.exe+1CDE8D: CC                 - int 3 
A13V_x64_Release.exe+1CDE8E: CC                 - int 3 
A13V_x64_Release.exe+1CDE8F: CC                 - int 3 
// ---------- INJECTING HERE ----------
A13V_x64_Release.exe+1CDE90: 8B 41 04           - mov eax,[rcx+04]
// ---------- DONE INJECTING  ----------
A13V_x64_Release.exe+1CDE93: 85 C0              - test eax,eax
A13V_x64_Release.exe+1CDE95: 78 1E              - js A13V_x64_Release.exe+1CDEB5
A13V_x64_Release.exe+1CDE97: 3D E2 00 00 00     - cmp eax,000000E2
A13V_x64_Release.exe+1CDE9C: 7F 05              - jg A13V_x64_Release.exe+1CDEA3
A13V_x64_Release.exe+1CDE9E: E9 0D EE FF FF     - jmp A13V_x64_Release.exe+1CCCB0
A13V_x64_Release.exe+1CDEA3: 3D 74 01 00 00     - cmp eax,00000174
A13V_x64_Release.exe+1CDEA8: 0F 8E 02 EE FF FF  - jng A13V_x64_Release.exe+1CCCB0
A13V_x64_Release.exe+1CDEAE: 3D D3 01 00 00     - cmp eax,000001D3
A13V_x64_Release.exe+1CDEB3: 7E E9              - jle A13V_x64_Release.exe+1CDE9E
A13V_x64_Release.exe+1CDEB5: 83 C8 FF           - or eax,-01
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>82</ID>
              <Description>""特性"と"効果"は未翻訳です"</Description>
              <Color>8000FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>1</ID>
              <Description>"base addr."</Description>
              <ShowAsHex>1</ShowAsHex>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808080</Color>
              <VariableType>8 Bytes</VariableType>
              <Address>i_item_editor_base_addr</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>51</ID>
              <Description>"選択したアイテムをコンテナに複製（3回） / Duplicate selected item to container (x3)"</Description>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
{$lua}
--NO_ACTIVATE
if syntaxcheck then return end

if memrec then print(memrec.Description) end
print("Start")

--itemBaseAddr=readPointer("container_base_addr") --higlighted item base addr
itemBaseAddr=readPointer("i_item_editor_base_addr")
print("Source item addr: " .. string.format("%08X", itemBaseAddr))
if (itemBaseAddr == 0) then
  print("Please select item first")
  return
end

srcQualityAddress = itemBaseAddr

clearLuaLog()

if (getAddressSafe('A13V_x64_Release.exe') == nil)
then
  print("A13V_x64_Release.exe not found?")
else
  --Author : bbfox @ https://open cheat tables. com/
  local containerBaseAddress = g_containerBaseAddress

  print("Container base address: " .. string.format("%08X", containerBaseAddress))

  local isFound = false
  local IsBypass = false
  local prevID0 = 1
  local currentID0 = 0
  local currentQlty = 0
  local theQuality = 0 -- for duplicate destionation, quality should not the same if not in 999
  local dupCount = 3

  local currentQualityAddress = containerBaseAddress --base item address
  local currentSequenceAddress = containerBaseAddress --base item address

  local MaxCount = MaxContainerCount

  local prevQualityAddress = currentQualityAddress

  --set Quality address
  currentQlty = readFloat(srcQualityAddress + 0x08)
  --print("src quality addr: " .. string.format("%08X", srcQualityAddress + 0x06))
  print("Src quality: " .. readFloat(srcQualityAddress+ 0x08))
  print("Src serial: " .. readInteger(srcQualityAddress))


  if (IsBypass == false)
  then
    for i = 1, MaxCount-4, 1
    do
      if (isFound == false)
      then
        currentID0 = readInteger(currentQualityAddress)

        if (currentID0 == 4294967295 and i &gt; 1) -- 0xFFFFFFFF
        then
          print("Found empty slot in position #", i, ", address: #", string.format("%X", prevQualityAddress) .. ", src quality: " ..  currentQlty)
          isFound = true
          for i1 = 1, dupCount, 1
          do
            print("#", i1, ", addr: ", string.format("%X", currentQualityAddress), ", New ID: ", prevID0 + 1)
            for i2 = 0, ItemRecordSize-1, 1
            do
              if (i2 == 0)
              then
                -- 0~1: item id
                prevID0 = prevID0 + 1
                writeSmallInteger(currentQualityAddress, prevID0)
              end
              if ((i2 &gt; 3) and (i2 &lt; 8)) -- bypass offset 0-3 because already written (item serial)
              then -- Write item ID
                --theByte = barray[i2]
                --print(string.format("%02X", theByte))
                thebyte = readBytes(srcQualityAddress + i2, 1, false)
                writeBytes(currentQualityAddress + i2, thebyte)
              end

              if (i2 == 8) -- Quality part;
              then --Quality different than source to avoid game bug.
                theQuality = currentQlty

                if (theQuality &lt; (999 - dupCount)) then
                  if (theQuality == 120) then -- 120 is "official max quality"
                    -- do nothing
                  else
                    theQuality = theQuality + i1
                    print("new quality ".. theQuality)
                  end
                else
                  theQuality = 999
                  print("new quality ".. theQuality)
                end
                writeFloat(currentQualityAddress + 0x8, theQuality)
              end


              if (i2 &gt;= 12) -- rest part (quality 2 bytes*2 offset)
              then
                thebyte = readBytes(srcQualityAddress + i2, 1, false)
                writeBytes(currentQualityAddress + i2, thebyte)
              end
            end
            prevQualityAddress = currentQualityAddress
            currentQualityAddress = currentQualityAddress + ItemRecordSize
            --currentQlty = readSmallInteger(currentQualityAddress + 0x06)
            currentID0 = prevID0
          end
        end

        prevID0 = currentID0

        prevQualityAddress = currentQualityAddress
        currentQualityAddress = currentQualityAddress + ItemRecordSize
      else
        break
      end
    end
  end

  print("Done")
  closeLuaEngine()
  --getLuaEngine().MenuItem5.doClick()
end

{$asm}

[DISABLE]


</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>52</ID>
                  <Description>"少なくとも4つの空きスペースを残してください"</Description>
                  <Color>8000FF</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>38</ID>
                  <Description>"At least leave 4 free spaces in container"</Description>
                  <Color>8000FF</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>2</ID>
              <Description>"Serial / シリアルナンバー"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>i_item_editor_base_addr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>3</ID>
              <Description>"アイテムID"</Description>
              <DropDownList DisplayValueAsItem="1">0:クラフト
1:フラム
2:レヘルン
3:ドナーストーン
4:地球儀
5:メテオール
6:祝砲
7:ぷに爆弾
8:たたかう魔剣
9:風繰り車
10:魔物の棲むツボ
11:精霊石
12:ピースメーカー
13:魔女の秘薬
14:暗黒水
15:レスキュー花火
16:浄化の水瓶
17:王家のアロマ
18:守護者の宝石
19:時の石板
20:フォーチュンダイス
21:ヒーリングサルヴ
22:エリキシル剤
23:妙薬ドラッヘン
24:ナントカの秘薬
25:ヒーリングベル
26:知恵熱シロップ
27:メンタルウォーター
28:秘伝タブレット
29:ネクタル
30:自動目覚まし
31:神秘のアンク
32:手作りパイ
33:キノコのパイ
34:マイスタータルト
35:デニッシュ
36:モンブラン
37:デザートバスケット
38:メレンゲのパイ
39:フルフルプディング
40:スペシャルミート
41:竜やきにく
42:全自動きのこ鍋
43:手編みのカゴ
44:祝福のコイン
45:運命の札
46:空とぶじゅうたん
47:魅惑の女神像
48:豊作手袋
49:秘密バッグ
50:旅人の靴
51:トラベルゲート
52:中和剤
53:ゼッテル
54:ピュアオイル
55:錬菌酵母
56:錬金炭
57:研磨剤
58:あまい宝石
59:純粋なる毒
60:紅の染料
61:水晶玉
62:薬のもと
63:生きているナワ
64:干し草
65:ガラス玉
66:虹の精油
67:魔法の絵の具
68:タール液
69:インゴット
70:ツィンク
71:ドライメタル
72:シュテルメタル
73:プラティーン
74:ハルモリウム
75:サンライト
76:レーゲンティウム
77:クロース
78:モフコット
79:シルケス
80:ポリーウール
81:ネイロンフェザー
82:ウィングキルト
83:スケイルクロス
84:メディカルリネン
85:小麦粉
86:塩
87:ハチミツ
88:コメート
89:風の精の息吹
90:蒸留酒
91:ビア
92:ぶどう水
93:ドライフラワー
94:乾いたにく
95:栄養剤
96:魔法の石材
97:錬金の鋼材
98:究極の鋼材
99:ダウジングロッド
100:地下見の水晶
101:ちむドール
102:生きてるクワ
103:生きてるノコギリ
104:生きてる台車
105:生きてるつるはし
106:生きてるスコップ
107:圧縮木材
108:万能ろ過剤
109:モルゲン錬金灯
110:雑草殺しの霊薬
111:防人の砂ぶくろ
112:晴天の炎
113:雨雲の石
114:バルーンテント
115:豊穣の土
116:時間流の種
117:魔除けネット
118:吸引バッグ
119:無重力ぶくろ
120:自在風装置
121:液化溶剤
122:新天地レーション
123:大地の留め金
124:ふしぎな箱庭
125:永年強化ペンキ
126:王国の旗
127:封印の護符
128:樹氷結晶
129:清らかな香炉
130:小さな太陽
131:安全ボックス
132:開拓便利ツール
133:輪廻の歯車
134:動物共鳴器
135:混沌発信機
136:知恵者の辞典
137:金塊
138:きのこの寝床
139:瓶づめキノコ
140:グナーデリング
141:ルーンストーン
142:メルクリウスの瞳
143:精霊の首飾り
144:ゲベートアンク
145:エンゼルチャーム
146:ブレイブマスク
147:ミシカルリング
148:みえないクローク
149:盗賊のバンダナ
150:まじない人形
151:目覚めの懐中時計
152:リバーストルク
153:約束の腕輪
154:神速自在帯
155:英雄のメダル
156:調合機材
157:耐熱錬成板
158:若返りのくすり
159:メルキシル剤
160:フラクタル氷瀑弾
161:湧泉汲み上げ機
162:源泉パイプ
163:癒しの結晶石
164:消えないフラム
165:溶けないレヘルン
166:恒久ドナーストーン
167:永転地球儀
168:無限メテオール
169:炎と氷の指輪
170:白と黒の指輪
171:昼と夜の指輪
172:聖魔の指輪
173:賢者の石
174:グランドマテリア
175:でんせつの肉
176:始まりのタネ
177:エンゲルストン
178:人工深淵の魂
179:真若返りのくすり
227:プレイン草
228:マジックグラス
229:うに
230:ニューズ
231:ハチの巣
232:タールの実
233:アブラギの実
234:薫木の皮
235:薬木の根っこ
236:カラマリ草
237:ほたる火草
238:風船の実
239:グリーンリーフ
240:蓮
241:夜の貴婦人
242:フランプラント
243:千日草
244:土かぶり
245:アイヒェロア
246:モリギンチャク
247:イワマタケ
248:ハッピーパラソル
249:ロイヤルクラウン
250:お化けのおうち
251:フェスト
252:フロジストン
253:燃える土
254:蒸留石
255:恵みの石
256:輝く砂
257:臭い石
258:弾む石
259:岩塩
260:無価値な岩
261:スティム鋼石
262:樹氷石
263:グラビ石
264:星のかけら
265:ウィスプストーン
266:黒の魔石
267:黒陽鉱
268:マグマストーン
269:虹のかけら
270:湖底の溜まり
271:鎖グモの巣
272:雲綿花
273:何かのタマゴ
274:震える結晶
275:瑠璃色の羽
276:アイヒェ
277:青竹
278:黒鉄の木
279:金剛檀
280:ラバーツリー
281:世界樹の枝
282:妖精の世界樹
283:ぷにぷに玉
284:アードラの尾羽
285:獣のしかばね
286:ペンデローク
287:島琥珀
288:マンドラゴラの根
289:竜にく
290:竜のつの
291:竜のウロコ
292:ベヒモスの心臓
293:異界の輝石
294:ユニコーンの角
295:トカゲの尻尾
296:古びた鎧
297:たてがみ
298:悪魔の角
299:飛竜のツメ
300:ご神木の葉っぱ
301:怪鳥のつばさ
302:蛇の毒袋
303:地球儀の玉
304:やわらかい毛
305:何かの黒焼き
306:クスリムシの糸
307:貝の化石
308:山パール
309:獣石
310:ヤギのつの
311:こやし
312:水
313:シャリオミルク
314:泡立つ水
315:薬泉の湧水
316:小麦
317:青い実
318:赤い実
319:紫ぶどう
320:水樹の実
321:にんじん
322:ジュエルビーンズ
323:カタイモ
324:五穀麦
325:安らぎの花
326:花のみつ
327:ミネラルドロップ
328:フレッシュミント
329:賢者のハーブ
330:森の雫
331:ひかる円盤
332:みえないふくろ
333:古代のガラクタ
334:年代物のツボ
335:作者不詳の絵画
336:常世の炎
337:活源の水
338:悠久の風
339:原初の土
340:世界霊魂
341:壊れたアイテム
342:産業廃棄物
343:深淵の魂
344:イベント用予備枠２
345:イベント用予備枠３
346:イベント用予備枠４
347:イベント用予備枠５
348:イベント用予備枠６
349:イベント用予備枠７
350:イベント用予備枠８
351:イベント用予備枠９
</DropDownList>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>i_item_editor_base_addr</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>32</ID>
                  <Description>"Item ID (En)"</Description>
                  <DropDownList DisplayValueAsItem="1">0:Craft
1:Bomb
2:Bomb Ice
3:Lightning Bomb
4:Globe
5:Meteor
6:Salute
7:Puni Bomb
8:Magic Sword
9:Pinwheel
10:Monster Pot
11:Spirit Stone
12:Peacemaker
13:Witch Salve
14:Dark Water
15:Rescue Signal
16:Purity Vase
17:Royal Aroma
18:Guardian Jewel
19:Time Lithograph
20:Fortune Dice
21:Healing Salve
22:Elixir
23:Drachen Elixir
24:Secret Remedy
25:Healing Bell
26:Migraine Syrup
27:Mind Water
28:Secret Tablet
29:Nectar
30:Auto Alarm
31:Mystical Ankh
32:Homemade Pie
33:Mushroom Pie
34:Meister Tarte
35:Danish
36:Mont Blanc
37:Dessert Basket
38:Cream Pie
39:Jiggly Pudding
40:Special Meat
41:Dragon BBQ
42:Mushroom Stew
43:Handmade Basket
44:Blessed Coin
45:Fate Talisman
46:Flying Carpet
47:Goddess Statue
48:Harvest Glove
49:Secret Bag
50:Traveler Shoes
51:Warp Gate
52:Supplement
53:Zettel
54:Pure Oil
55:Alchemy Yeast
56:Alchemy Coal
57:Polish Powder
58:Sweet Gem
59:Pure Poison
60:Crimson Dye
61:Crystal Ball
62:Medicine Base
63:Living Rope
64:Hay
65:Glass Beads
66:Rainbow Oil
67:Magic Paint
68:Tar Liquid
69:Ingot
70:Tinc
71:Dry Metal
72:Ster Metal
73:Platine
74:Halmolium
75:Sunlite
76:Regentium
77:Cloth
78:Muffcot
79:Silkis
80:Polywool
81:Nylonfeather
82:Wing Quilt
83:Scale Cloth
84:Medical Linen
85:Flour
86:Salt
87:Honey
88:Komet
89:Sylph Breath
90:Liquor
91:Beer
92:Grape Water
93:Dried Flower
94:Dried Meat
95:Tonic
96:Magic Stone
97:Alchemy Steel
98:Ultimate Steel
99:Dowsing Rod
100:Preview Crystal
101:Chim Doll
102:Living Hoe
103:Living Saw
104:Living Cart
105:Living Pickaxe
106:Living Shovel
107:Dense Wood
108:Mighty Filter
109:Alchemy Lamp
110:Herbicide
111:Sand Bag
112:Sky Flame
113:Nimbus Stone
114:Balloon Tent
115:Rich Soil
116:Time Flow Seed
117:Talisman Net
118:Suction Bag
119:Zero-G Bag
120:Wind Controller
121:Liquid Solvent
122:New Land Ration
123:Land Clasp
124:Mystical Garden
125:Enhanced Paint
126:Kingdom Flag
127:Sealing Amulet
128:Rime Crystal
129:Pure Incense
130:Small Sun
131:Safety Box
132:Useful Tool
133:Samsara Gear
134:Animal Resonator
135:Chaos Conductor
136:Wisemanipedia
137:Gold Nugget
138:Mushroom Bed
139:Jarred Mushroom
140:Gnardi Ring
141:Runestone
142:Mercurius Eye
143:Spirit Necklace
144:Gibate Ankh
145:Angel Charm
146:Warrior Mask
147:Mythical Ring
148:Camo Cloak
149:Thief Bandana
150:Bunny Tail
151:Pocket Watch
152:Reverse Torque
153:Promise Band
154:Speed Belt
155:Heroic Medal
156:Synthesis Piece
157:Fireproof Plate
158:Potion of Youth
159:Merulixir
160:Ice Cascade Bomb
161:Spring Pump
162:Pipe
163:Healing Crystal
164:Indelible Bomb
165:Insoluble Bomb
166:Perpetual Bomb
167:Nonstop Globe
168:Infinity Meteor
169:Fire-Ice Ring
170:Black-White Ring
171:Day-Night Ring
172:Holy-Demon Ring
173:Ruby Prism
174:Grand Materia
175:Legendary Meat
176:Origin Seed
177:Angelstone
178:Synth Abyssal Soul
179:True Potion of Youth
227:Plain Grass
228:Magic Grass
229:Uni
230:Nuse
231:Beehive
232:Tar Fruit
233:Oil Fruit
234:Incense Bark
235:Med Tree Root
236:Winding Grass
237:Glow Grass
238:Balloon Fruit
239:Green Leaf
240:Lotus
241:Night Lady
242:Flame Plant
243:Gomphrena
244:Mudhead
245:Eicheloa
246:Forest Anemone
247:Rockroom
248:Happy Parasol
249:Royal Crown
250:Ghost House
251:Fest
252:Phlogiston
253:Fuel Dirt
254:Distill Stone
255:Blessed Stone
256:Glitter Sand
257:Stench Stone
258:Bounce Stone
259:Rock Salt
260:Worthless Rock
261:Stim Stone
262:Snow Stone
263:Gravistone
264:Star Piece
265:Wispstone
266:Black Runestone
267:Black Ore
268:Magma Stone
269:Rainbow Fragment
270:Sea Puddle
271:Chain Web
272:Cotton Flower
273:Some Egg
274:Quake Crystal
275:Azure Wing
276:Eiche
277:Bamboo
278:Iron Tree
279:Diamond Tree
280:Rubber Tree
281:World Tree Twig
282:Fairy World Tree
283:Puniball
284:Audra's Tail
285:Dead Beast
286:Pendelook
287:Isle Amber
288:Mandra Root
289:Dragon Meat
290:Dragon Tusk
291:Dragon Scale
292:Behemoth Heart
293:Spirit Pyroxene
294:Unicorn Horn
295:Lizard Tail
296:Old Armor
297:Mane
298:Devil Horn
299:Wyvern Claw
300:Holy Tree Leaf
301:Bird Wing
302:Venom Gland
303:Globe Sphere
304:Fluffy Fur
305:Something Burnt
306:Medicine Thread
307:Shell Fossil
308:Mountain Pearl
309:Beast Stone
310:Goat Horn
311:Fertilizer
312:Water
313:Chariot Milk
314:Sparkling Water
315:Ointment Water
316:Wheat
317:Blue Fruit
318:Red Fruit
319:Purple Grape
320:Tree Fruit
321:Carrot
322:Jewel Bean
323:Hard Potato
324:Wheat Grain
325:Serenity Flower
326:Flower Nectar
327:Mineral Drop
328:Fresh Mint
329:Sage Herb
330:Forest Dew
331:Shining Saucer
332:Invisible Bag
333:Ancient Rubbish
334:Vintage Pot
335:Painting
336:Eternity Flame
337:Blessed Water
338:Undying Wind
339:Original Soil
340:World Spirit
341:Broken Item
342:Pollutant
343:Abyssal Soul
344:Event Backup 2
345:Event Backup 3
346:Event Backup 4
347:Event Backup 5
348:Event Backup 6
349:Event Backup 7
350:Event Backup 8
351:Event Backup 9
</DropDownList>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>808080</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>i_item_editor_base_addr</Address>
                  <Offsets>
                    <Offset>4</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>4</ID>
              <Description>"品質 / Quality"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>Float</VariableType>
              <Address>i_item_editor_base_addr</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>5</ID>
              <Description>"特性1 / Trait 1"</Description>
              <DropDownList DisplayValueAsItem="1">0:高値LV1 / Price Up Lv1
1:高値LV2 / Price Up Lv2
2:高値LV3 / Price Up Lv3
3:高級品 / Finest Goods
4:限定販売品 / Limited Time
5:ロイヤル御用達 / Royal Treatment
6:安物Lv1 / Price Down Lv1
7:安物Lv2 / Price Down Lv2
8:安物Lv3 / Price Down Lv3
9:セール品 / On Sale
10:在庫処分品 / Discounted
11:廃棄直前激安品 / Bargain Bin
12:劣化防止Lv1 / Lasts Lv1
13:劣化防止Lv2 / Lasts Lv2
14:劣化防止Lv3 / Lasts Lv3
15:保存効果 / Preservation
16:劣化無効化 / Warranty
17:永久に保たれる / Permanent
18:高品質Lv1 / Quality Lv1
19:高品質Lv2 / Quality Lv2
20:高品質Lv3 / Quality Lv3
21:出来が良い / Hand-Crafted
22:プロの完成度 / Professional
23:超クオリティ / Ultra Quality
24:破壊力増加Lv1 / Forceful Lv1
25:破壊力増加Lv2 / Forceful LV2
26:破壊力増加Lv3 / Forceful LV3
27:とても痛い / Very Painful
28:破壊者の祝福 / Destroyer
29:破壊神の祝福 / Demolisher
30:回復力増加Lv1 / Heal Lv1
31:回復力増加Lv2 / Heal Lv2
32:回復力増加Lv3 / Heal Lv3
33:治りが早い / Fast Heal
34:治癒者の祝福 / Mender
35:天の神の祝福 / Recovery
36:クリティカルLv1 / Critical Lv1
37:クリティカルLv2 / Critical Lv2
38:クリティカルLv3 / Critical Lv3
39:会心の出来 / Satisfactory
40:必中クリティカル / Sure Shot
41:一撃必殺 / Mortal Blow
42:効果安定LV1 / Stable Lv1
43:効果安定LV2 / Stable Lv2
44:不変の効果 / Established
45:判定拡大LV1 / Judgement Lv1
46:判定拡大LV2 / Judgement Lv2
47:疑惑の判定 / Declaration
48:成功率上昇LV1 / Success Lv1
49:成功率上昇LV2 / Success Lv2
50:初心者向け / Beginner
51:生きている / Living
52:活きがいい / Lively
53:やる気マンマン / Pepped Up
54:使用回数+1 / Usage +1
55:使用回数+2 / Usage +2
56:使用回数+3 / Usage +3
57:大きい / Big
58:特大の / Jumbo
59:おばけサイズ / Monstrous
60:コストレベル+1 / Cost +1
61:コストレベル+2 / Cost +2
62:コストレベル+3 / Cost +3
63:コスト拡張 / Expand
64:コスト効率強化 / Enhance
65:コスト枠極大 / Maximize
66:HP +10
67:HP +20
68:HP +30
69:HP強化 / HP Charge
70:HP大増量 / HP Boost
71:ライフガード / Life Guard
72:MP +10
73:MP +20
74:MP +30
75:MP強化 / MP Charge
76:MP大増量 / MP Boost
77:メンタルガード / Mental Guard
78:LP +10
79:LP +20
80:LP +30
81:LP強化 / LP Charge
82:LP大増量 / LP Boost
83:スタミナガード / Stamina Guard
84:攻撃力+5 / Attack +5
85:攻撃力+10 / Attack +10
86:攻撃力+15 / Attack +15
87:攻撃強化 / Attack Charge
88:攻撃力ブースト / Attack Boost
89:パワーヒッター / Power Hitter
90:防御力+5 / Defense +5
91:防御力+10 / Defense +10
92:防御力+15 / Defense +15
93:防御強化 / Defense Charge
94:防御力ブースト/ Defense Boost
95:ディフェンダー / Defender
96:速度+10 / Speed +10
97:速度+15 / Speed +15
98:速度+20 / Speed +20
99:速度強化 / Speed Charge
100:速度ブースト / Speed Boost
101:スピードスター / Speed Star
102:消費10％減 / MP Cost -10%
103:消費15％減 / MP Cost -15%
104:消費20％減 / MP Cost -20%
105:消費MPカット / MP Cost Cut
106:MPコスト圧縮 / MP Cost Pack
107:エコスキル / Eco-Skill
108:技威力10％+ / Skill +10%
109:技威力15％+ / Skill +15%
110:技威力20％+ / Skill +20%
111:技威力強化 / Skill Charge
112:スキルブースト / Skill Boost
113:マスタースキル / Master Skill
114:炎ダメージ追加 / Fire+
115:氷ダメージ追加 / Ice+
116:土ダメージ追加 / Earth+
117:雷ダメージ追加 / Lightning+
118:紅と蒼の力 / Red+Blue
119:翠と金色の力 / Green+Gold
120:精霊の力 / Spirit Power
121:精霊神の力 / Deity Power
122:ぷにぷに特攻 / Puni Repel
123:動物特攻 / Animal Repel
124:ドラゴン特攻 / Dragon Repel
125:魔獣特攻 / Beast Repel
126:幽霊特攻 / Ghost Repel
127:魔族特攻 / Demon Repel
128:精霊特攻 / Spirit Repel
129:毒付与 / Inflict Poison
130:毒炎の力 / Poison Flame
131:眠り付与 / Inflict Sleep
132:吹雪の力 / Snowstorm
133:呪い付与 / Inflict Curse
134:土霊の力 / Earth Soul
135:暗闇付与 / Inflict Blind
136:雷鳴の力 / Thunderbolt
137:スロウ付与 / Inflict Slow
138:時空の精の力 / Time Spirit
139:全能力+2 / Stats +2
140:全能力+4 / Stats +4
141:全能力+6 / Stats +6
142:全能力強化 / Stats Charge
143:全能力+10 / Stats +10
144:全能の力 / Stats Power
145:ダメージ還元Lv1 / Convert Lv1
146:ダメージ還元Lv2 / Convert Lv2
147:ダメージ還元Lv3 / Convert Lv3
148:HP吸収 / Absorb HP
149:ライフギバー / Life Giver
150:生命力を奪う / Vitality Drain
151:炎耐性Lv1 / Resist Fire Lv1
152:炎耐性Lv2 / Resist Fire Lv2
153:氷耐性Lv1 / Resist Ice Lv1
154:氷耐性Lv2 / Resist Ice Lv2
155:雷耐性Lv1 / Resist Lightning Lv1
156:雷耐性Lv2 / Resist Lightning Lv2
157:土耐性Lv1 / Resist Earth Lv1
158:土耐性Lv2 / Resist Earth Lv2
159:紅と蒼の盾 / Red+Blue Shield
160:翠と金色の盾 / Green+Gold Shield
161:紅と蒼の防壁 / Red+Blue Barrier
162:翠と金色の防壁 / Green+Gold Barrier
163:ランク強化Lv1 / Rank Boost Lv1
164:ランク強化Lv2 / Rank Boost Lv2
165:ランク強化Lv3 / Rank Boost Lv3
166:ランクで強化 / Rank Fortify
167:ランクボーナス / Rank Bonus
168:ランクスペシャル / Rank Special
169:特性強化Lv1 / Effect Boost Lv1
170:特性強化Lv2 / Effect Boost Lv2
171:コストボーナス / Cost Bonus
172:Swarm Slayer Lv1
173:Swarm Slayer Lv2
174:Swarm Slayer Lv3
175:Swarm Slayer S
176:Swarm Slayer M
177:Swarm Slayer L
178:Loner Slayer Lv1
179:Loner Slayer Lv2
180:Loner Slayer Lv3
181:Loner Slayer S
182:Loner Slayer M
183:Loner Slayer L
184:使い切り強化Lv1 / Last Boost Lv1
185:使い切り強化Lv2 / Last Boost Lv2
186:使い切り強化Lv3 / Last Boost Lv3
187:最後の一撃 / Final Strike
188:シングルバースト / Single Burst
189:ラストマンユーズ / Last Use
190:高速使用Lv1 / Rapid Lv1
191:高速使用Lv2 / Rapid Lv2
192:高速使用Lv3 / Rapid Lv3
193:扱いやすい / Simple
194:手軽に使える / Easy
195:ソニックスロー / Sonic Slow
196:回数圧縮Lv1 / Condense Lv1
197:回数圧縮Lv2 / Condense Lv2
198:回数圧縮Lv3 / Condense Lv3
199:強制使い切り / Forced Use
200:回数フル使用 / Full Use
201:一点ぶっこみ使用 / Single Bash Use
202:回数補正Lv1 / Adjust Lv1
203:回数補正Lv2 / Adjust Lv2
204:回数補正Lv3 / Adjust Lv3
205:使用回数で強化 / Usage Boost
206:回数ボーナス特盛
207:カウントブースト / Count Boost
208:タイム型化Lv1 / Timed Lv1
209:タイム型化Lv2 / Timed Lv2
210:タイム型化Lv3 / Timed Lv3
211:分割利用 / Split Usage
212:アイテム分裂 / Item Split
213:アイテムクローン / Item Clone
214:弾けるトゲ / Exploding Spikes
215:燃える気体 / Burning Vapor
216:滴る毒液/ Dripping Venom
217:魂を吸い取る / Soul Steal
218:誘爆する / Chain Explosion
219:力を奪う / Strength Steal
220:溶解させる / Solvent
221:絡みつく / Binding
222:純粋なる力 / Pure Power
223:丈夫な / Sturdy
224:軽量化された / Lightweight
225:炎の力 / Fire Power
226:冷気の力 / Ice Power
227:雷の力 / Lightning Power
228:大地の力 / Earth Power
229:聖なる加護 / Holy Power
230:癒しの加護 / Healing Power
231:回復のオーラ / Recovery Aura
232:傷に効く / Wound Healing
233:気付け効果 / Wake Up
234:生命の源 / Source of Life
235:万病に効く / Cure-All
236:癒しのエキス / Healing Essence
237:強化繊維 / Fortified Fiber
238:七色の力 / Rainbow Power
239:灼熱の加護 / Heat Guard
240:飛竜の力 / Wyvern Power
241:神木の祝福 / Sacred Power
242:黒焼き効果 / Burnt Effect
243:聡明な癒し / Clever Heal
244:豊穣の恵み / Good Harvest
245:炎の精の力 / Spirit of Fire
246:氷の精の力 / Spirit of Ice
247:風の精の力 / Spirit of Wind
248:土の精の力 / Spirit of Earth
249:黒の元素 / Black Element
250:熱に強い / Endure Heat
251:王家の風格 / Royal Style
252:漲る生命力 / Big Vitality
253:空気の軽さ	25 / Airy
254:妖精の祝福 / Fairy's Prayer
255:金剛光 / Diamond Light
256:融解させる	 / Melt
257:Vessel Essence
258:炎の言霊 / Flame Essence
259:氷の言霊 / Ice Essence
260:白の言霊 / White Essence
261:黒の言霊 / Black Essence
262:昼の言霊 / Day Essence
263:夜の言霊 / Night Essence
264:聖なる言霊 / Holy Essence
265:魔の言霊 / Demon Essence
266:太陽の言霊 / Sun Essence
267:月の言霊 / Moon Essence
268:星の言霊 / Star Essence
269:空の言霊 / Sky Essence
270:影の言霊 / Shadow Essence
271:命の言霊 / Life Essence
272:Godbreaker
273:Godblessing
274:Auto-Use
275:スペシャルガード / Special Guard
276:ボディガード / Bodyguard
277:オーバーパワー / Overpower
278:Veteran Skills
279:Effect up (Swarm)
280:Effect up (Lone)
281:Strengthen All
282:Final Ace
283:Mach Timer
284:Gamble Gain
285:Many Frize
286:オートマテリアル / Auto-Material
4294967295:Empty
-1:Empty
</DropDownList>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>i_item_editor_base_addr</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6</ID>
              <Description>"特性2 / Trait 2"</Description>
              <DropDownListLink>特性1 / Trait 1</DropDownListLink>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>i_item_editor_base_addr</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>7</ID>
              <Description>"特性3 / Trait 3"</Description>
              <DropDownListLink>特性1 / Trait 1</DropDownListLink>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>i_item_editor_base_addr</Address>
              <Offsets>
                <Offset>14</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>8</ID>
              <Description>"特性4 / Trait 4"</Description>
              <DropDownListLink>特性1 / Trait 1</DropDownListLink>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>i_item_editor_base_addr</Address>
              <Offsets>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>9</ID>
              <Description>"特性5 / Trait 5"</Description>
              <DropDownListLink>特性1 / Trait 1</DropDownListLink>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>i_item_editor_base_addr</Address>
              <Offsets>
                <Offset>1C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>10</ID>
              <Description>"効果1 / Effect 1"</Description>
              <DropDownList DisplayValueAsItem="1">0:Attack XS
1:物理ダメージ・小 / Attack S
2:Attack M
3:Attack L
4:Attack XL
5:Fire S
6:Fire M
7:Fire L
8:Fire XL
9:Explosive
10:Ice S
11:Ice M
12:Ice L
13:Ice XL
14:Lightning S
15:Lightning M
16:Lightning L
17:Lightning XL
18:Earth S
19:Earth M
20:Earth L
21:Falling Stars
22:Falling Puni
23:Falling Boulder
24:Falling uni
25:Falling ???
26:Teeny Cannonball
27:Cannonball
28:Grand Cannonball
29:Puni Explosion
30:Puni Explosion M
31:Puni Explosion L
32:Magic Sword Strike
33:Magic Sword Rain
34:Giant Magic Sword
35:Flurry
36:Cyclone
37:Maelstrom
38:Knockback S
39:Knockback M
40:Knockback L
41:Beast in a Pot
42:Monster in a Pot
43:Demon in a Pot
44:Summon Spirit S
45:Summon Spirit M
46:Summon Spirit L
47:Prayer Fireworks
48:Path to Harmony
49:Sacred Flames
50:Sleepy
51:Poisonous
52:Slowness
53:Cursed
54:Blinding
55:Venomous
56:Lethargy
57:Sleep Blade
58:Poison Blade
59:Time Blade
60:Curse Blade
61:Blinding Blade
62:Acidic
63:Sticky
64:Target Poisoned
65:Target Wounded
66:Sulfuric
67:Rescue Signal
68:Call for Sweets
69:Roll a Die
70:Irritating Smell
71:Exhausting Smell
72:Dragon Power
73:Dragon Flavor
74:ATK+
75:DEF+
76:SPD+
77:ATK-
78:DEF-
79:SPD-
80:Protective Charm
81:Powerful Taste
82:Robust Taste
83:Hasty Taste
84:Auto-KO Recovery+
85:Auto-KO Recovery
86:Ailment Reducer
87:Ailment Reducer+
88:Defense UP
89:Defense UP+
90:Tri-Suffer
91:ＨＰ回復・微 / HP Recovery XS
92:HP Recovery S
93:HP Recovery M
94:HP Recovery L
95:HP Recovery XL
96:MP Recovery XS
97:MP Recovery S
98:MP Recovery M
99:MP Recovery L
100:MP Recovery XL
101:ＬＰ回復・微 / LP Recovery XS
102:LP Recovery S
103:LP Recovery M
104:LP Recovery L
105:LP Recovery XL
106:Scaled Recovery S
107:Scaled Recovery M
108:Scaled Recovery L
109:Draw Strength
110:Draw Speed
111:Sweet
112:Balanced
113:Very Sweet
114:Melty
115:Tangy
116:Bitter
117:Auto Cook
118:KO Recovery S
119:KO Recovery M
120:KO Recovery L
121:HP+ Temp
122:HP Healing S
123:HP Healing M
124:HP Healing L
125:HP Healing XL
126:Sleep Recovery
127:Poison Recovery
129:Curse Recovery
130:Blind Recovery
131:Ailment Recovery
132:強化を無効 / Null Buff
133:Flowing Magic
134:Crimson
135:Sapphire
136:Emerald
137:Topaz
138:Diamond
139:Normal Mushroom
140:Mystery Mushroom
141:Choice Mushroom
142:Fine Aroma
143:True Aroma
144:Royal Aroma
145:Time Stopping
146:Time Advancing
147:Time Delaying
148:Time Blessed
149:Power Rune
150:Protection Rune
151:Speed Rune
152:Loot Chance+
153:Loot Chance++
154:Loot Trait Lv+
155:Loot Trait Lv++
156:Loot Quality+
157:Loot Quality++
158:Muscle Atrophy
159:Invincible Retreat
160:Bandit's Intuition
161:Blessed Action
162:Divine Miracle
163:Mysterious Doings
164:Auto Revival+
165:Auto Revival
166:Power of Trust
167:HP/MP Switch
168:HP Damage Shift
169:Whirlwind Motion
170:Speed of Sound
171:Super Fast Motion
172:Safety Card
173:Invincible Card
174:Raucous Card
175:Emergency Escape
176:MP Eater
177:Free Transfer
178:Rot Reduction
179:Rot Prevention
180:Enhancement
181:Fast Enhancement
182:Workshop Wings
183:Jog
184:Sprint
185:Trail Guide
186:Gathering Master
187:Item Lv. Up?
188:Item Lv. Up+?
189:Item Quality Up?
190:Item Quality Up+?
191:Item Trait Up?
192:Item Trait Up+?
193:Skilled Gatherer
194:Pro Gatherer
196:Super Size
197:Jumbo Size
198:Bad Rumors
199:Good Rumors
200:Wonderful Rumors
201:Good Fortune
202:Great Learner
203:Fire Pattern
204:Ice Pattern
205:White Aura
206:Black Aura
207:Daytime Blessing
208:Night Blessing
209:Holy Ambition
210:Evil Ambition
211:Consumption Ease
212:Fire Cloak
213:Ice Cloak
214:Lightning Cloak
215:Earth Cloak
216:Fire Shield
217:Ice Shield
218:Lightning Shield
219:Earth Shield
220:HP Regen S
221:HP Regen M
222:HP Regen L
223:HP Regen XL
224:HP Regen XXL
225:Critical+ S
226:Critical+ M
227:Critical+ L
228:Critical+ XL
229:クリティカル・極 / Critical+ XXL
230:Evade+ S
231:Evade+ M
232:Evade+ L
233:Evade+ XL
234:Evade+ XXL
235:Hit+ S
236:Hit+ M
237:Hit+ L
238:Hit+ XL
239:命中率上昇・極 / Hit+ XXL
240:Guts S
241:Gusts M
242:Guts L
243:Guts XL
244:Guts XXL
246:Resist M
247:Resist L
248:Resist XL
249:確率軽減・極 / Resist XXL
250:Block S
251:Block M
252:Block L
253:Block XL
254:Block XXL
255:Resist Poison
256:Resist Sleep
257:Resist Curse
258:Resist Slow
259:Resist Blind
260:Resist Death
261:Null Ailments
262:Fire Damage+
263:Ice Damage+
264:Lightning Damage+
265:Earth Damage+
266:Elemental Damage+
267:Elemental Damage+2
268:Fall Back
269:Assist+
270:Spirit of Strength
271:Hero Soul
272:Transference
273:HP Degen
274:Exploding Spikes
275:Burning Vapor
276:Dripping Venom
277:Soul Steal
278:Chain Explosion
279:Strength Steal
280:Solvent
281:Binding
282:Sharp Edge
283:Pure Power
284:Wound Healing
285:All Heal
286:Wake Up
287:Source of Life
288:Sun Power
289:Moon Power
290:Star Power
291:Sky Power
292:Cure-All
293:Healing Essence
294:Fire Power
295:Ice Power
296:Lightning Power
297:Earth Power
298:Resist Fire
299:Resist Ice
290:Resist Lightning
301:Resist Earth
302:Flame Element
303:Mortal Blow
304:Spiritual Power
305:Thunder Power
306:Fortified Fiber
307:Rainbow Power
308:Heat Guard
309:Poison Drop
310:Sacred Prayer
311:Burn Effect
312:Clever Heal
313:Spirit of Fire
314:Spirit of Ice
315:Spirit of Wind
316:Spirit of Earth
317:Black Element
318:Endure Heat
319:Roayl Style
320:Big Vitality
321:Fairy's Prayer
322:Melt
323:Sphere Blast
324:Attack+3
325:Attack +5
326:Attack +7
327:Defense+3
328:Defense +5
329:Defense +7
330:Speed +3
331:Speed +5
332:Speed +7
333:HP +5
334:HP +10
335:HP +15
336:Miracle Pie
337:Ultra Pie
338:Muscle Pie
339:Chim Delivery α
340:Chim Delivery	β
341:Chim Delivery	γ
342:Summon Tart
343:Summon Danish
344:Summon Pudding
345:Summon Cream Pie
346:Nothing happened...
347:Wave of Chaos
348:Powerless Vortex
349:Woes of Chaos
350:Flame Essence
351:Ice Essence
352:White Essence
353:Black Essence
354:Day Essence
355:Night Essence
356:Holy Essence
357:Demon Essence
358:Sun Essence
359:Moon Essence
360:Star Essence
361:Sky Essence
362:Shadow Essence
363:Life Essence
364:Strength Rune
365:Defense Rune
366:Gale Rune
367:Cold/heat down
368:Wind/rock down
369:Will Resistance
370:Strengthen Will
371:Improve Stamina
372:Soul of Hero
373:Strong in trouble
374:Brings Problems
375:Jinxed
376:On a roll
377:Easier to get O
4294967295:Empty
-1:Empty
</DropDownList>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>i_item_editor_base_addr</Address>
              <Offsets>
                <Offset>20</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>11</ID>
              <Description>"効果2 / Effect 2"</Description>
              <DropDownListLink>効果1 / Effect 1</DropDownListLink>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>i_item_editor_base_addr</Address>
              <Offsets>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>12</ID>
              <Description>"効果3 / Effect 3"</Description>
              <DropDownListLink>効果1 / Effect 1</DropDownListLink>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>i_item_editor_base_addr</Address>
              <Offsets>
                <Offset>28</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>13</ID>
              <Description>"Count / 使用回数"</Description>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>FF8080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>i_item_editor_base_addr</Address>
              <Offsets>
                <Offset>2C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"_debug (no use)"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <Color>808080</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>65</ID>
              <Description>"Meruru HP"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>A13V_x64_Release.exe+10D9B7C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>66</ID>
              <Description>"Meruru XP"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>1410D9B78</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>75</ID>
              <Description>"Friendship 1"</Description>
              <VariableType>Float</VariableType>
              <Address>1410D9EC4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>76</ID>
              <Description>"Friendship 2"</Description>
              <VariableType>Float</VariableType>
              <Address>1410DA074</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>16</ID>
              <Description>"Text debug"</Description>
              <Options moHideChildren="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript Async="1">{ Game   : A13V_x64_Release.exe
  Version: 
  Date   : 2023-12-31
  Author : bbfoxc@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_GET_LAST_ITEM_NAME,A13V_x64_Release.exe,66 C7 87 18 01 00 00 20 00) // should be unique
alloc(newmem,$1000,INJECT_GET_LAST_ITEM_NAME)

label(code)
label(return)
label(i_lase_item_name_addr)
label(i_lase_item_name_addr1)
label(i_lase_item_name_addr2)
label(i_lase_item_name_addr3)
label(i_lase_item_name_addr4)
label(i_lase_item_name_addr5)
label(i_lase_item_name_addr6)
label(i_lase_item_name_addr7)
label(i_lase_item_name_addr8)
label(i_lase_item_name_addr9)
label(i_lase_item_name_addr10)
newmem:
  push r15
  push r14

  mov r15, [rdi+F0]
  test r15, r15
  jz endp
  //textInstance

  mov r14d, [r15+59]
  cmp r14d, 74786574
  jne endp

  mov r14d, [r15+5D]
  cmp r14d, 74736E49
  jne endp

  mov r14d, [r15+61]
  cmp r14d, 65636E61
  jne endp

  //mov r14d, [rdi+24]
  //test r14d, r14d
  //jnz endp

  //mov r14d, [rdi+6C]
  //test r14d, r14d
  //jnz endp

  //mov r14d, [rdi+70]
  //test r14d, r14d
  //jnz endp

  //mov r14d, [rdi+90]
  //test r14d, r14d
  //jnz endp

  //mov r14d, [rdi+B0]
  //cmp r14d, #0
  //jne endp

  //mov r14d, [rdi+D4]
  //test r14d, r14d
  //jnz endp

  //mov r14d, [rdi+100]
  //test r14d, r14d
  //jnz endp

  mov r14b, [rdi+118]
  cmp r14b, 0

  mov r14b, [rdi+11A]
  cmp r14b, 0
  je endp

  cmp [i_lase_item_name_addr], rdi
  je endp
  cmp [i_lase_item_name_addr1], rdi
  je endp
  cmp [i_lase_item_name_addr2], rdi
  je endp
  cmp [i_lase_item_name_addr3], rdi
  je endp
  cmp [i_lase_item_name_addr4], rdi
  je endp
  cmp [i_lase_item_name_addr5], rdi
  je endp
  cmp [i_lase_item_name_addr6], rdi
  je endp
  cmp [i_lase_item_name_addr7], rdi
  je endp
  cmp [i_lase_item_name_addr8], rdi
  je endp
  cmp [i_lase_item_name_addr9], rdi
  je endp
  cmp [i_lase_item_name_addr10], rdi
  je endp


write_0:
  cmp dword ptr [i_idx], 0
  jne write_1
  mov [i_lase_item_name_addr], rdi
  mov dword ptr [i_idx], 1
  jmp endp

write_1:
  cmp dword ptr [i_idx], 1
  jne write_2
  mov [i_lase_item_name_addr1], rdi
  mov dword ptr [i_idx], 2
  jmp endp

write_2:
  cmp dword ptr [i_idx], 2
  jne write_3
  mov [i_lase_item_name_addr2], rdi
  mov dword ptr [i_idx], 3
  jmp endp

write_3:
  cmp dword ptr [i_idx], 3
  jne write_4
  mov [i_lase_item_name_addr3], rdi
  mov dword ptr [i_idx], 4
  jmp endp

write_4:
  cmp dword ptr [i_idx], 4
  jne write_5
  mov [i_lase_item_name_addr4], rdi
  mov dword ptr [i_idx], 5
  jmp endp

write_5:
  cmp dword ptr [i_idx], 5
  jne write_6
  mov [i_lase_item_name_addr5], rdi
  mov dword ptr [i_idx], 6
  jmp endp

write_6:
  cmp dword ptr [i_idx], 6
  jne write_7
  mov [i_lase_item_name_addr6], rdi
  mov dword ptr [i_idx], 7
  jmp endp

write_7:
  cmp dword ptr [i_idx], 7
  jne write_8
  mov [i_lase_item_name_addr7], rdi
  mov dword ptr [i_idx], 8
  jmp endp

write_8:
  cmp dword ptr [i_idx], 8
  jne write_9
  mov [i_lase_item_name_addr8], rdi
  mov dword ptr [i_idx], 9
  jmp endp

write_9:
  cmp dword ptr [i_idx], 9
  jne write_10
  mov [i_lase_item_name_addr9], rdi
  mov dword ptr [i_idx], #10
  jmp endp

write_10:
  cmp dword ptr [i_idx], #10
  jne endp
  mov [i_lase_item_name_addr10], rdi
  mov dword ptr [i_idx], 0
  jmp endp



endp:
  pop r14
  pop r15

code:
  mov word ptr [rdi+00000118],0020
  jmp return
align 10 cc
  i_lase_item_name_addr:
  dq 0
  i_lase_item_name_addr1:
  dq 0
  i_lase_item_name_addr2:
  dq 0
  i_lase_item_name_addr3:
  dq 0
  i_lase_item_name_addr4:
  dq 0
  i_lase_item_name_addr5:
  dq 0
  i_lase_item_name_addr6:
  dq 0
  i_lase_item_name_addr7:
  dq 0
  i_lase_item_name_addr8:
  dq 0
  i_lase_item_name_addr9:
  dq 0
  i_lase_item_name_addr10:
  dq 0
  i_idx:
  dd 0

INJECT_GET_LAST_ITEM_NAME:
  jmp newmem
  nop 4
return:
registersymbol(INJECT_GET_LAST_ITEM_NAME)
registersymbol(i_lase_item_name_addr)
registersymbol(i_lase_item_name_addr1)
registersymbol(i_lase_item_name_addr2)
registersymbol(i_lase_item_name_addr3)
registersymbol(i_lase_item_name_addr4)
registersymbol(i_lase_item_name_addr5)
registersymbol(i_lase_item_name_addr6)
registersymbol(i_lase_item_name_addr7)
registersymbol(i_lase_item_name_addr8)
registersymbol(i_lase_item_name_addr9)
registersymbol(i_lase_item_name_addr10)
[DISABLE]

INJECT_GET_LAST_ITEM_NAME:
  db 66 C7 87 18 01 00 00 20 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: A13V_x64_Release.exe+50D846

A13V_x64_Release.exe+50D7F3: C7 87 51 03 00 00 00 01 01 01  - mov [rdi+00000351],01010100
A13V_x64_Release.exe+50D7FD: C7 87 4C 03 00 00 CD CC CC 3D  - mov [rdi+0000034C],3DCCCCCD
A13V_x64_Release.exe+50D807: 89 B7 90 02 00 00              - mov [rdi+00000290],esi
A13V_x64_Release.exe+50D80D: 48 89 B7 3C 03 00 00           - mov [rdi+0000033C],rsi
A13V_x64_Release.exe+50D814: 89 B7 44 03 00 00              - mov [rdi+00000344],esi
A13V_x64_Release.exe+50D81A: C7 87 34 03 00 00 00 00 00 3F  - mov [rdi+00000334],3F000000
A13V_x64_Release.exe+50D824: C7 87 38 03 00 00 00 00 00 3F  - mov [rdi+00000338],3F000000
A13V_x64_Release.exe+50D82E: 48 89 B7 40 02 00 00           - mov [rdi+00000240],rsi
A13V_x64_Release.exe+50D835: C6 87 50 03 00 00 00           - mov byte ptr [rdi+00000350],00
A13V_x64_Release.exe+50D83C: C7 87 48 03 00 00 00 00 80 3F  - mov [rdi+00000348],3F800000
// ---------- INJECTING HERE ----------
A13V_x64_Release.exe+50D846: 66 C7 87 18 01 00 00 20 00     - mov word ptr [rdi+00000118],0020
// ---------- DONE INJECTING  ----------
A13V_x64_Release.exe+50D84F: 48 89 B7 58 03 00 00           - mov [rdi+00000358],rsi
A13V_x64_Release.exe+50D856: 48 89 B7 60 03 00 00           - mov [rdi+00000360],rsi
A13V_x64_Release.exe+50D85D: 48 89 B7 68 03 00 00           - mov [rdi+00000368],rsi
A13V_x64_Release.exe+50D864: 48 89 B7 70 03 00 00           - mov [rdi+00000370],rsi
A13V_x64_Release.exe+50D86B: C6 87 55 03 00 00 7F           - mov byte ptr [rdi+00000355],7F
A13V_x64_Release.exe+50D872: 48 8B C7                       - mov rax,rdi
A13V_x64_Release.exe+50D875: 48 8B 8D 10 01 00 00           - mov rcx,[rbp+00000110]
A13V_x64_Release.exe+50D87C: 48 33 CC                       - xor rcx,rsp
A13V_x64_Release.exe+50D87F: E8 8C 20 02 00                 - call A13V_x64_Release.exe+52F910
A13V_x64_Release.exe+50D884: 48 8B 9C 24 78 02 00 00        - mov rbx,[rsp+00000278]
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>18</ID>
                  <Description>"Text"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>60</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>i_lase_item_name_addr</Address>
                  <Offsets>
                    <Offset>118</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>19</ID>
                  <Description>"Text"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>60</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>i_lase_item_name_addr1</Address>
                  <Offsets>
                    <Offset>118</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>21</ID>
                  <Description>"Text"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>60</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>i_lase_item_name_addr2</Address>
                  <Offsets>
                    <Offset>118</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>22</ID>
                  <Description>"Text"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>60</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>i_lase_item_name_addr3</Address>
                  <Offsets>
                    <Offset>118</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>23</ID>
                  <Description>"Text"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>60</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>i_lase_item_name_addr4</Address>
                  <Offsets>
                    <Offset>118</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>25</ID>
                  <Description>"Text"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>60</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>i_lase_item_name_addr5</Address>
                  <Offsets>
                    <Offset>118</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>26</ID>
                  <Description>"Text"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>60</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>i_lase_item_name_addr6</Address>
                  <Offsets>
                    <Offset>118</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>27</ID>
                  <Description>"Text"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>60</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>i_lase_item_name_addr7</Address>
                  <Offsets>
                    <Offset>118</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>28</ID>
                  <Description>"Text"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>60</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>i_lase_item_name_addr8</Address>
                  <Offsets>
                    <Offset>118</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>30</ID>
                  <Description>"Text"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>60</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>i_lase_item_name_addr9</Address>
                  <Offsets>
                    <Offset>118</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>31</ID>
                  <Description>"Text"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>60</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>i_lase_item_name_addr10</Address>
                  <Offsets>
                    <Offset>118</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>92</ID>
      <Description>"ゲームウィンドウを枠なしウィンドウに設定する / Set game window to borderless"</Description>
      <Options moHideChildren="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>95</ID>
          <Description>"ゲームをプライマリモニターのみに設定する / For game in primary monitor only"</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>94</ID>
          <Description>"注意：最初にお読みください"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
--NO_ACTIVATE
messageDialog([[
PowerShell の実行ポリシーを RemoteSigned に設定する必要があります。そうしないとスクリプトは正しく実行されません。
以下の手順に従って実行ポリシーを設定してください：

1. PowerShell を開く。
2. 次のコマンドを実行する：
   Set-ExecutionPolicy RemoteSigned -Scope CurrentUser

設定後、スクリプトは正常に実行されます。
]], mtWarning, mbOK)
[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>93</ID>
          <Description>"Notice: read me first"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
--NO_ACTIVATE
messageDialog([[
PowerShell execution policy needs to be set to RemoteSigned for scripts to run properly.
Please follow these steps to set the execution policy:

1. Open PowerShell.
2. Run the following command:
   Set-ExecutionPolicy RemoteSigned -Scope CurrentUser

After setting this, scripts will run as expected.
]], mtWarning, mbOK)

[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>91</ID>
          <Description>"Powershell ver. 5"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
{$lua}
if syntaxcheck then return end
--NO_ACTIVATE
--os.execute('powershell -ExecutionPolicy Bypass -File ".\\borderless.ps1"')
--os.execute('pwsh -ExecutionPolicy Bypass -File ".\\borderless_psv5.ps1"')
--os.execute("borderless.ps1")
-- 設定檔名為變數
local psFileNameInCT = "borderless_psv5.ps1"  -- 這是內嵌在 .CT 文件中的檔案名
local psFileName = os.getenv("TEMP") .. "\\temp_script.ps1"  -- 臨時保存的檔案名

-- 查找內嵌的 PowerShell 腳本
local pfile = findTableFile(psFileNameInCT)

if pfile == nil then
    messageDialog("Error: Could not find the embedded PowerShell script '" .. psFileNameInCT .. "'.", mtError, mbOK)
else
    -- 保存內嵌的 PowerShell 腳本到臨時文件
    pfile.saveToFile(psFileName)

    -- 執行 PowerShell 腳本
    os.execute('powershell -ExecutionPolicy Bypass -File "' .. psFileName .. '"')
end
[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>89</ID>
          <Description>"Powershell ver. 7"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
{$lua}
if syntaxcheck then return end
--NO_ACTIVATE
--os.execute('powershell -ExecutionPolicy Bypass -File ".\\borderless.ps1"')
--os.execute('pwsh -ExecutionPolicy Bypass -File ".\\borderless_psv5.ps1"')
--os.execute("borderless.ps1")
-- 設定檔名為變數
local psFileNameInCT = "borderless.ps1"  -- 這是內嵌在 .CT 文件中的檔案名
local psFileName = os.getenv("TEMP") .. "\\temp_script.ps1"  -- 臨時保存的檔案名

-- 查找內嵌的 PowerShell 腳本
local pfile = findTableFile(psFileNameInCT)

if pfile == nil then
    messageDialog("Error: Could not find the embedded PowerShell script '" .. psFileNameInCT .. "'.", mtError, mbOK)
else
    -- 保存內嵌的 PowerShell 腳本到臨時文件
    pfile.saveToFile(psFileName)

    -- 執行 PowerShell 腳本
    os.execute('pwsh -ExecutionPolicy Bypass -File "' .. psFileName .. '"')
end
[DISABLE]

</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>83</ID>
      <Description>"Atelier Meruru - The Apprentice of Arland~ DX 1.01  /  https://opencheattables.com  /  CE 7.6"</Description>
      <Options moHideChildren="1"/>
      <Color>00A600</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>79</ID>
          <Description>"(not working) 錬金の経験値獲得が2倍 / Double alchemy XP gain"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : A13V_x64_Release.exe
  Version: 
  Date   : 2024-01-01
  Author : bbfox@https://opencheattables.com
}

[ENABLE]

aobscanmodule(INJECT_ALCHE_XP_MULTI,A13V_x64_Release.exe,FF 05 6B 8F DE 00) // should be unique
alloc(newmem,$1000,INJECT_ALCHE_XP_MULTI)

label(code)
label(return)

newmem:
  cmp eax, 2
  jbe code
  inc [A13V_x64_Release.exe+1056FB4]

code:
  inc [A13V_x64_Release.exe+1056FB4]
  jmp return

INJECT_ALCHE_XP_MULTI:
  jmp newmem
  nop
return:
registersymbol(INJECT_ALCHE_XP_MULTI)

[DISABLE]

INJECT_ALCHE_XP_MULTI:
  db FF 05 6B 8F DE 00

unregistersymbol(INJECT_ALCHE_XP_MULTI)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: A13V_x64_Release.exe+26E043

A13V_x64_Release.exe+26E01B: 8B 81 48 01 00 00  - mov eax,[rcx+00000148]
A13V_x64_Release.exe+26E021: 3B 81 38 01 00 00  - cmp eax,[rcx+00000138]
A13V_x64_Release.exe+26E027: 7D 22              - jnl A13V_x64_Release.exe+26E04B
A13V_x64_Release.exe+26E029: FF C0              - inc eax
A13V_x64_Release.exe+26E02B: 89 81 48 01 00 00  - mov [rcx+00000148],eax
A13V_x64_Release.exe+26E031: 8B 81 34 01 00 00  - mov eax,[rcx+00000134]
A13V_x64_Release.exe+26E037: 85 C0              - test eax,eax
A13V_x64_Release.exe+26E039: 7E 0E              - jle A13V_x64_Release.exe+26E049
A13V_x64_Release.exe+26E03B: FF C8              - dec eax
A13V_x64_Release.exe+26E03D: 89 81 34 01 00 00  - mov [rcx+00000134],eax
// ---------- INJECTING HERE ----------
A13V_x64_Release.exe+26E043: FF 05 6B 8F DE 00  - inc [A13V_x64_Release.exe+1056FB4]
// ---------- DONE INJECTING  ----------
A13V_x64_Release.exe+26E049: B2 01              - mov dl,01
A13V_x64_Release.exe+26E04B: 8B 81 4C 01 00 00  - mov eax,[rcx+0000014C]
A13V_x64_Release.exe+26E051: 3B 81 44 01 00 00  - cmp eax,[rcx+00000144]
A13V_x64_Release.exe+26E057: 7D 38              - jnl A13V_x64_Release.exe+26E091
A13V_x64_Release.exe+26E059: FF C0              - inc eax
A13V_x64_Release.exe+26E05B: 89 81 4C 01 00 00  - mov [rcx+0000014C],eax
A13V_x64_Release.exe+26E061: 8B 81 3C 01 00 00  - mov eax,[rcx+0000013C]
A13V_x64_Release.exe+26E067: 85 C0              - test eax,eax
A13V_x64_Release.exe+26E069: 7E 26              - jle A13V_x64_Release.exe+26E091
A13V_x64_Release.exe+26E06B: FF C8              - dec eax
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>MaxContainerCount = 1999
MaxBasketCount = 60
BaseBasketOffset=0x10C1020
BaseContainerOffset=0x10C22E0
EquipsOffset=0x108A8B0


--if (getAddressSafe('A13V_x64_Release.exe') == nil)
--then
--  print("Please select process A13V_x64_Release.exe first")
--  print("Please close Cheat Engine and load this table again")
--  print("最初に「A13V_x64_Release.exe」プロセスを選択してください。")
--  print("Cheat Engineを閉じて、再びこのテーブルをロードしてください。")
--else
--  g_containerBaseAddress = getAddressSafe('A13V_x64_Release.exe')+BaseContainerOffset
--  g_equipsBaseAddress = getAddressSafe('A13V_x64_Release.exe')+EquipsOffset
--end

--print(MaxBasketCount)

--local dynBasketAddress = getAddressSafe("???.exe")+0x?????
--MaxBasketCount = readSmallInteger(dynBasketAddress)
--print(MaxBasketCount)

ItemRecordSize = 48 --0x30

--lua scripts that table checkbox will not be checked with "NO_ACTIVATE" in comment
function onMemRecPostExecute(memoryrecord, newState, succeeded )
    if memoryrecord.Type == vtAutoAssembler and memoryrecord.Script:find("NO_ACTIVATE") and newState and succeeded then
        memoryrecord.disableWithoutExecute()
    end
end

--memory record IDs now allowed to be 'locked'
IDs = {438,
       }

--determine event trigger sequence


function contains(table, val)
   local i = 0
   for i=1, #table do
      if table[i] == val then
         return true
      end
   end
   return false
end


function onMemRecPreExecute(memoryrecord, newstate)
    if contains(IDs, memoryrecord.ID) and newstate then
	    memoryrecord.OnActivate = function(memoryrecord, before, currentstate)
		    return false
	    end
    end
end

function AOBScanModule(moduleName, signature, scanOptions)
    local baseAddr = nil
    local maxAddr = 0
    local modList = enumModules()

    for _, mod in ipairs(modList) do
        if string.lower(mod.Name) == string.lower(moduleName) then
            baseAddr = mod.Address
            maxAddr = baseAddr + mod.Size
            break
        end
    end

    if not baseAddr then
        print("❌ Error: Module " .. moduleName .. " not found!")
        return nil
    end

    -- Debug:
    --print(string.format("✅ %s Base Address: 0x%X", moduleName, baseAddr))
    --print(string.format("📏 Scanning Range: 0x%X - 0x%X", baseAddr, maxAddr))

    local ms = createMemScan()
    ms.firstScan(
        soExactValue,   -- exact scan
        vtByteArray,    -- AOB scan: Byte Array
        nil,            -- RoundingType (no used)
        signature,      -- AOB String
        nil,            -- no need by this scanoption
        baseAddr,       -- start addr
        maxAddr,        -- stop addr
        scanOptions or "+X+R", -- memory protectionflags
        fsmNotAligned,  -- no alignment
        "1",            -- alignment 1 byte
        true,           -- using Hexadecimal
        true,           -- isNotABinaryString
        false,          -- isUnicode
        false           -- isCaseSensitive
    )

    ms.waitTillDone()

    local results = createFoundList(ms)
    results.initialize()

    if results.getCount() &gt; 0 then
        local addr = results[0]
        --print("🎯 AOB found at: 0x" .. addr)
        results.destroy()
        ms.destroy()
        return addr
    else
        --print("❌ AOB not found in " .. moduleName)
        results.destroy()
        ms.destroy()
        return nil
    end
end

-- test AOBScanModule()
--local aob_addr_str = AOBScanModule("???.exe", "48 8B 05 ?? ?? ?? ?? 33 ED 48 8B 88", "+X+R")
--if aob_addr_str then
--    print("✅ Final AOB Address: 0x" .. aob_addr_str)
--else
--    print("❌ AOB not found in ???.exe")
--end

registerLuaFunctionHighlight('AOBScanModule')

function clearLuaLog()
    synchronize(function()
      getLuaEngine().MenuItem5.doClick()
    end)
end
registerLuaFunctionHighlight('clearLuaLog')

function closeLuaEngine()
    synchronize(function()
      getLuaEngine().Close()
    end)
end
registerLuaFunctionHighlight('closeLuaEngine')

function closeLuaEngine2()
    synchronize(function()
      getLuaEngine().MenuItem5.doClick()
      getLuaEngine().Close()
    end)
end
registerLuaFunctionHighlight('closeLuaEngine2')

synchronize(function() AddressList.Header.OnSectionClick = nil end)

</LuaScript>
</CheatTable>
